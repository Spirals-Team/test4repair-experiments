* EvoSuite 1.0.3
* Going to generate test cases for class: org.apache.commons.math.optimization.linear.SimplexTableau
* Starting client
* Connecting to master process on port 20335
* Analyzing classpath: 
  - target/classes/
  - target/test-classes/
  - lib/commons-discovery-0.5.jar
  - /usr/yzx/program-repair-nopol-evosuite/nopol/nopol/src/main/java/fr/inria/lille/spirals/evo/libs/nopol.jar
  - /usr/yzx/program-repair-nopol-evosuite/nopol/nopol/src/main/java/fr/inria/lille/spirals/evo/libs/junit-4.11.jar
  - /usr/yzx/program-repair-nopol-evosuite/nopol/nopol/src/main/java/fr/inria/lille/spirals/evo/libs/hamcrest-core-1.3.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.optimization.linear.SimplexTableau
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 130
  - Branch 108
  - Exception 0
  - MutationFactory 841
  - Output 57
  - Method 24
  - MethodNoException 24
  - CBranchFitnessFactory 108
* Using seed 9
* Starting evolution

[Progress:>                             0%] [Cov:>                                  0%]
[Progress:>                             0%] [Cov:====>                              13%]
[Progress:>                             3%] [Cov:======>                            18%]
[Progress:>                             3%] [Cov:=======>                           20%]
[Progress:>                             3%] [Cov:=======>                           21%]
[Progress:>                             3%] [Cov:=======>                           22%]
[Progress:>                             3%] [Cov:=========>                         26%]
[Progress:>                             3%] [Cov:=========>                         27%]
[Progress:>                             3%] [Cov:=========>                         28%]
[Progress:>                             3%] [Cov:==========>                        29%]
[Progress:>                             3%] [Cov:===========>                       34%]
[Progress:>                             3%] [Cov:============>                      36%]
[Progress:>                             3%] [Cov:============>                      37%]
[Progress:>                             3%] [Cov:=============>                     39%]
[Progress:=>                            6%] [Cov:=>                                 5%]
[Progress:=>                            6%] [Cov:===>                               9%]
[Progress:=>                            6%] [Cov:=======>                           22%]
[Progress:=>                            6%] [Cov:=========>                         26%]
[Progress:=>                            6%] [Cov:=========>                         27%]
[Progress:=>                            6%] [Cov:=========>                         28%]
[Progress:=>                            6%] [Cov:==========>                        29%]
[Progress:=>                            6%] [Cov:==========>                        31%]
[Progress:=>                            6%] [Cov:===========>                       32%]
[Progress:=>                            6%] [Cov:===========>                       33%]
[Progress:=>                            6%] [Cov:============>                      35%]
[Progress:=>                            6%] [Cov:=============>                     39%]
[Progress:===>                          10%] [Cov:========>                          24%]
[Progress:===>                          10%] [Cov:==========>                        29%]
[Progress:===>                          10%] [Cov:===========>                       33%]
[Progress:===>                          10%] [Cov:=======================>           68%]
[Progress:===>                          10%] [Cov:=======================>           68%]
[Progress:===>                          10%] [Cov:========================>          69%]
[Progress:===>                          10%] [Cov:========================>          69%]
[Progress:===>                          13%] [Cov:=======================>           66%]
[Progress:===>                          13%] [Cov:=======================>           68%]
[Progress:===>                          13%] [Cov:========================>          69%]
[Progress:===>                          13%] [Cov:========================>          70%]
[Progress:===>                          13%] [Cov:========================>          70%]
[Progress:===>                          13%] [Cov:========================>          70%]
[Progress:===>                          13%] [Cov:========================>          71%]
[Progress:===>                          13%] [Cov:=========================>         72%]
[Progress:====>                         16%] [Cov:=======================>           68%]
[Progress:====>                         16%] [Cov:========================>          70%]
[Progress:====>                         16%] [Cov:========================>          71%]
[Progress:====>                         16%] [Cov:=========================>         73%]
[Progress:====>                         16%] [Cov:=========================>         73%]
[Progress:======>                       20%] [Cov:=========================>         72%]
[Progress:======>                       20%] [Cov:=========================>         73%]
[Progress:======>                       20%] [Cov:=========================>         74%]
[Progress:======>                       20%] [Cov:=========================>         74%]
[Progress:======>                       20%] [Cov:=========================>         74%]
[Progress:======>                       23%] [Cov:=========================>         73%]
[Progress:======>                       23%] [Cov:=========================>         74%]
[Progress:======>                       23%] [Cov:==========================>        75%]
[Progress:======>                       23%] [Cov:==========================>        75%]
[Progress:======>                       23%] [Cov:==========================>        75%]
[Progress:=======>                      26%] [Cov:=========================>         74%]
[Progress:=======>                      26%] [Cov:==========================>        75%]
[Progress:=======>                      26%] [Cov:==========================>        75%]
[Progress:=======>                      26%] [Cov:==========================>        75%]
[Progress:=========>                    30%] [Cov:==========================>        75%]
[Progress:=========>                    30%] [Cov:==========================>        76%]
[Progress:=========>                    30%] [Cov:==========================>        76%]
[Progress:=========>                    30%] [Cov:==========================>        77%]
[Progress:=========>                    33%] [Cov:==========================>        76%]
[Progress:=========>                    33%] [Cov:==========================>        77%]
[Progress:=========>                    33%] [Cov:==========================>        77%]
[Progress:=========>                    33%] [Cov:==========================>        77%]
[Progress:==========>                   36%] [Cov:==========================>        76%]
[Progress:==========>                   36%] [Cov:==========================>        77%]
[Progress:==========>                   36%] [Cov:==========================>        77%]
[Progress:==========>                   36%] [Cov:==========================>        77%]
[Progress:============>                 40%] [Cov:==========================>        77%]
[Progress:============>                 40%] [Cov:===========================>       78%]
[Progress:============>                 40%] [Cov:===========================>       79%]
[Progress:============>                 40%] [Cov:===========================>       79%]
[Progress:============>                 43%] [Cov:===========================>       79%]
[Progress:============>                 43%] [Cov:===========================>       79%]
[Progress:============>                 43%] [Cov:===========================>       79%]
[Progress:============>                 43%] [Cov:===========================>       79%]
[Progress:============>                 43%] [Cov:============================>      80%]
[Progress:============>                 43%] [Cov:=============================>     83%]
[Progress:=============>                46%] [Cov:===========================>       79%]
[Progress:=============>                46%] [Cov:=============================>     84%]
[Progress:=============>                46%] [Cov:=============================>     84%]
[Progress:=============>                46%] [Cov:=============================>     84%]
[Progress:===============>              50%] [Cov:=============================>     84%]
[Progress:===============>              50%] [Cov:=============================>     84%]
[Progress:===============>              50%] [Cov:=============================>     84%]
[Progress:===============>              50%] [Cov:=============================>     85%]
[Progress:===============>              50%] [Cov:=============================>     85%]
[Progress:===============>              53%] [Cov:=============================>     84%]
[Progress:===============>              53%] [Cov:=============================>     85%]
[Progress:===============>              53%] [Cov:=============================>     85%]
[Progress:===============>              53%] [Cov:=============================>     85%]
[Progress:================>             56%] [Cov:=============================>     85%]
[Progress:================>             56%] [Cov:=============================>     85%]
[Progress:================>             56%] [Cov:=============================>     85%]
[Progress:================>             56%] [Cov:=============================>     85%]
[Progress:==================>           60%] [Cov:=============================>     85%]
[Progress:==================>           60%] [Cov:=============================>     85%]
[Progress:==================>           60%] [Cov:=============================>     85%]
[Progress:==================>           60%] [Cov:=============================>     85%]
[Progress:==================>           63%] [Cov:=============================>     85%]
[Progress:==================>           63%] [Cov:=============================>     85%]
[Progress:==================>           63%] [Cov:=============================>     85%]
[Progress:==================>           63%] [Cov:==============================>    86%]
[Progress:==================>           63%] [Cov:==============================>    86%]
[Progress:==================>           63%] [Cov:==============================>    86%]
[Progress:===================>          66%] [Cov:=============================>     85%]
[Progress:===================>          66%] [Cov:==============================>    86%]
[Progress:===================>          66%] [Cov:==============================>    86%]
[Progress:===================>          66%] [Cov:==============================>    86%]
[Progress:===================>          66%] [Cov:==============================>    86%]
[Progress:=====================>        70%] [Cov:=============================>     85%]
[Progress:=====================>        70%] [Cov:==============================>    86%]
[Progress:=====================>        70%] [Cov:==============================>    86%]
[Progress:=====================>        70%] [Cov:==============================>    86%]
[Progress:=====================>        70%] [Cov:==============================>    86%]
[Progress:=====================>        70%] [Cov:==============================>    86%]
[Progress:=====================>        73%] [Cov:==============================>    86%]
[Progress:=====================>        73%] [Cov:==============================>    86%]
[Progress:=====================>        73%] [Cov:==============================>    86%]
[Progress:=====================>        73%] [Cov:==============================>    86%]
[Progress:=====================>        73%] [Cov:==============================>    86%]
[Progress:======================>       76%] [Cov:==============================>    86%]
[Progress:======================>       76%] [Cov:==============================>    86%]
[Progress:======================>       76%] [Cov:==============================>    86%]
[Progress:======================>       76%] [Cov:==============================>    86%]
[Progress:======================>       76%] [Cov:==============================>    86%]
[Progress:========================>     80%] [Cov:==============================>    86%]
[Progress:========================>     80%] [Cov:==============================>    86%]
[Progress:========================>     80%] [Cov:==============================>    86%]
[Progress:========================>     80%] [Cov:==============================>    86%]
[Progress:========================>     80%] [Cov:==============================>    86%]
[Progress:========================>     83%] [Cov:==============================>    86%]
[Progress:========================>     83%] [Cov:==============================>    86%]
[Progress:========================>     83%] [Cov:==============================>    86%]
[Progress:========================>     83%] [Cov:==============================>    86%]
[Progress:=========================>    86%] [Cov:==============================>    86%]
[Progress:=========================>    86%] [Cov:==============================>    86%]
[Progress:=========================>    86%] [Cov:==============================>    86%]
[Progress:=========================>    86%] [Cov:==============================>    86%]
[Progress:===========================>  90%] [Cov:==============================>    86%]
[Progress:===========================>  90%] [Cov:==============================>    86%]
[Progress:===========================>  90%] [Cov:==============================>    86%]
[Progress:===========================>  90%] [Cov:==============================>    86%]
[Progress:===========================>  90%] [Cov:==============================>    86%]
[Progress:===========================>  93%] [Cov:==============================>    86%]
[Progress:===========================>  93%] [Cov:==============================>    86%]
[Progress:===========================>  93%] [Cov:==============================>    86%]
[Progress:===========================>  93%] [Cov:==============================>    86%]
[Progress:===========================>  93%] [Cov:==============================>    86%]
[Progress:===========================>  93%] [Cov:==============================>    87%]
[Progress:============================> 96%] [Cov:==============================>    87%]
[Progress:============================> 96%] [Cov:==============================>    87%]
[Progress:============================> 96%] [Cov:==============================>    87%]
[Progress:============================> 96%] [Cov:==============================>    87%]
[Progress:==============================100%] [Cov:==============================>    86%]
[Progress:==============================100%] [Cov:==============================>    87%]
[Progress:==============================100%] [Cov:==============================>    87%]
[Progress:==============================100%] [Cov:==============================>    87%]
[Progress:==============================100%] [Cov:==============================>    87%]
[Progress:==============================100%] [Cov:==============================>    87%]
[Progress:==============================100%] [Cov:==============================>    86%]
[Progress:==============================100%] [Cov:==============================>    87%]
* Search finished after 31s and 91 generations, 56048 statements, best individual has fitness: 168.36739926739926
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 130
* Number of covered goals: 124
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 84%
* Total number of goals: 108
* Number of covered goals: 91
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 841
* Number of covered goals: 775
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 57
* Number of covered goals: 31
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 24
* Number of covered goals: 23
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 84%
* Total number of goals: 108
* Number of covered goals: 91
* Generated 50 tests with total length 346
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 26%
* Compiling and checking tests
[MASTER] 18:43:19.132 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:19.166 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:19.197 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:19.227 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:19.260 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:19.288 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:19.314 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:19.342 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:19.381 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:19.382 [logback-2] ERROR JUnitAnalyzer - 1 test cases failed
[MASTER] 18:43:19.383 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NullPointerException
[MASTER] 18:43:19.384 [logback-1] WARN  JUnitAnalyzer - Failing test: double[] doubleArray0 = new double[3];
doubleArray0[0] = (-1.0);
LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-1543.2696335128282));
LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
Relationship relationship0 = Relationship.GEQ;
LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, 1040.511);
linkedList0.add(linearConstraint0);
linkedList0.add(linearConstraint0);
GoalType goalType0 = GoalType.MAXIMIZE;
SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0);
simplexTableau0.getSolution();

[MASTER] 18:43:19.418 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:19.447 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:19.499 [logback-2] ERROR JUnitAnalyzer - 1 test cases failed
[MASTER] 18:43:19.498 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:19.499 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NullPointerException
[MASTER] 18:43:19.499 [logback-1] WARN  JUnitAnalyzer - Failing test: double[] doubleArray0 = new double[3];
doubleArray0[0] = (-1.0);
LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-1543.2696335128282));
LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
Relationship relationship0 = Relationship.GEQ;
LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, 1040.511);
linkedList0.add(linearConstraint0);
GoalType goalType0 = GoalType.MAXIMIZE;
SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-1.0));
simplexTableau0.getSolution();

[MASTER] 18:43:19.536 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:19.567 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:19.614 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:19.651 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:19.682 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:19.714 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:19.753 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:19.779 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:19.806 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:19.807 [logback-2] ERROR JUnitAnalyzer - 1 test cases failed
[MASTER] 18:43:19.807 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 18:43:19.807 [logback-1] WARN  JUnitAnalyzer - Failing test: double[] doubleArray0 = new double[3];
LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-1543.2696335128282));
LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
Relationship relationship0 = Relationship.GEQ;
LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, (-1.0));
linkedList0.add(linearConstraint0);
GoalType goalType0 = GoalType.MAXIMIZE;
SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0);

[MASTER] 18:43:19.841 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:19.866 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:19.894 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:19.914 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:19.936 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:20.006 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:20.037 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:20.066 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:20.101 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:20.134 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:20.169 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:20.197 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:20.198 [logback-2] ERROR JUnitAnalyzer - 1 test cases failed
[MASTER] 18:43:20.198 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<-1.0> but was:<1.0>
[MASTER] 18:43:20.198 [logback-1] WARN  JUnitAnalyzer - Failing test: double[] doubleArray0 = new double[2];
LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1.0);
LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
GoalType goalType0 = GoalType.MAXIMIZE;
SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 1.0);
double double0 = simplexTableau0.getEntry(0, 0);
assertEquals((-1.0), double0, 0.01);


[MASTER] 18:43:20.231 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:20.232 [logback-2] ERROR JUnitAnalyzer - 1 test cases failed
[MASTER] 18:43:20.232 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: RuntimeException
[MASTER] 18:43:20.232 [logback-1] WARN  JUnitAnalyzer - Failing test: double[] doubleArray0 = new double[9];
LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);
LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
GoalType goalType0 = GoalType.MINIMIZE;
Relationship relationship0 = Relationship.EQ;
LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, 615.402);
linkedList0.add(linearConstraint0);
SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.4);
simplexTableau0.getEntry(2, 0);

[MASTER] 18:43:20.268 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:20.292 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:20.319 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:20.350 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:20.351 [logback-2] ERROR JUnitAnalyzer - 1 test cases failed
[MASTER] 18:43:20.351 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<1>
[MASTER] 18:43:20.351 [logback-1] WARN  JUnitAnalyzer - Failing test: double[] doubleArray0 = new double[3];
LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-1543.2696335128282));
LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
Relationship relationship0 = Relationship.GEQ;
LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, 1040.511);
linkedList0.add(linearConstraint0);
GoalType goalType0 = GoalType.MAXIMIZE;
SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-1.0));
int int0 = simplexTableau0.getNumArtificialVariables();
assertEquals(0, int0);


[MASTER] 18:43:20.387 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:20.417 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:20.418 [logback-2] ERROR JUnitAnalyzer - 1 test cases failed
[MASTER] 18:43:20.418 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<1>
[MASTER] 18:43:20.418 [logback-1] WARN  JUnitAnalyzer - Failing test: double[] doubleArray0 = new double[2];
LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);
LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
Relationship relationship0 = Relationship.LEQ;
LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, (-283.04856811));
linkedList0.add(linearConstraint0);
GoalType goalType0 = GoalType.MAXIMIZE;
SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-283.04856811));
int int0 = simplexTableau0.getNumSlackVariables();
assertEquals(0, int0);


[MASTER] 18:43:20.446 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:20.478 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:20.511 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:20.541 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:20.567 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:20.597 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:20.634 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:20.673 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:20.699 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:20.729 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:21.147 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:43:21.445 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing JUnit test case 'SimplexTableau_ESTest' to /tmp/math_87_NopolPC/generatedtests
* Done!

* Computation finished
