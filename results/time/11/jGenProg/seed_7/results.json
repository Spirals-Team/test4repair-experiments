{
    "date": "Fri Jan 13 00:29:00 CET 2017\n\nremoved classes \n\nzipped \n\ncopied zip \n\n", 
    "gens": "208", 
    "node": "graphene-107.nancy.grid5000.fr", 
    "operations": [
        {
            "buggyStatement": "if ((tailZone == null) && (i == (ruleSetCount - 1))) {\n\ttailZone = rs.buildTailZone(id);\n} ", 
            "generation": 38, 
            "ingredients": null, 
            "patch": "if ((iRuleSets.size()) == 0) {\n\taddCutover(java.lang.Integer.MIN_VALUE, 'w', 1, 1, 0, false, 0);\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 371, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "47", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "LOCAL", 
            "time": "1034", 
            "type": "ReplaceOp", 
            "variant": 76
        }, 
        {
            "buggyStatement": "if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t} \n\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t} else {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t}\n} ", 
            "generation": 64, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1458, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "47", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "-", 
            "time": "1188", 
            "type": "RemoveOp", 
            "variant": 128
        }, 
        {
            "buggyStatement": "if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t} \n\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t} else {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t}\n} ", 
            "generation": 68, 
            "ingredients": null, 
            "patch": "if ((org.joda.time.tz.ZoneInfoCompiler.cStartOfYear) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cStartOfYear = new org.joda.time.tz.ZoneInfoCompiler.DateTimeOfYear();\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1458, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "47", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "PACKAGE", 
            "time": "1396", 
            "type": "ReplaceOp", 
            "variant": 136
        }, 
        {
            "buggyStatement": "iStandardOffset = standardOffset", 
            "generation": 137, 
            "ingredients": null, 
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 985, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "47", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "PACKAGE", 
            "time": "1696", 
            "type": "InsertAfterOp", 
            "variant": 274
        }, 
        {
            "buggyStatement": "if ((iRules.size()) == 2) {\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);\n\tif (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\t\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n\t} \n} ", 
            "generation": 182, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1141, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "47", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "-", 
            "time": "1913", 
            "type": "RemoveOp", 
            "variant": 364
        }, 
        {
            "buggyStatement": "for (org.joda.time.tz.DateTimeZoneBuilder.Rule rule : copy) {\n\tif ((rule.getSaveMillis()) == 0) {\n\t\tfirst = new org.joda.time.tz.DateTimeZoneBuilder.Transition(firstMillis , rule , iStandardOffset);\n\t\tbreak;\n\t} \n}", 
            "generation": 189, 
            "ingredients": null, 
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1042, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "47", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "PACKAGE", 
            "time": "2005", 
            "type": "InsertAfterOp", 
            "variant": 378
        }, 
        {
            "buggyStatement": "java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition> transitions = new java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>()", 
            "generation": 204, 
            "ingredients": null, 
            "patch": "iRuleSets.add(new org.joda.time.tz.DateTimeZoneBuilder.RuleSet())", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 339, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "47", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "LOCAL", 
            "time": "2139", 
            "type": "InsertAfterOp", 
            "variant": 408
        }, 
        {
            "buggyStatement": "java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition> transitions = new java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>()", 
            "generation": 219, 
            "ingredients": null, 
            "patch": "iRuleSets.add(new org.joda.time.tz.DateTimeZoneBuilder.RuleSet())", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 339, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "47", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "LOCAL", 
            "time": "2253", 
            "type": "InsertBeforeOp", 
            "variant": 438
        }, 
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 282, 
            "ingredients": null, 
            "patch": "if ((org.joda.time.tz.ZoneInfoCompiler.cLenientISO) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cLenientISO = org.joda.time.chrono.LenientChronology.getInstance(org.joda.time.chrono.ISOChronology.getInstanceUTC());\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "47", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "PACKAGE", 
            "time": "2560", 
            "type": "ReplaceOp", 
            "variant": 564
        }, 
        {
            "buggyStatement": "if (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n} ", 
            "generation": 284, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1144, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "47", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "-", 
            "time": "2639", 
            "type": "RemoveOp", 
            "variant": 568
        }, 
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 327, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "47", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "-", 
            "time": "2978", 
            "type": "RemoveOp", 
            "variant": 654
        }, 
        {
            "buggyStatement": "int[] standardOffsets = new int[size]", 
            "generation": 373, 
            "ingredients": null, 
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1396, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "47", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "PACKAGE", 
            "time": "3201", 
            "type": "InsertAfterOp", 
            "variant": 746
        }, 
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 406, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "47", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "-", 
            "time": "3520", 
            "type": "RemoveOp", 
            "variant": 812
        }, 
        {
            "buggyStatement": "if ((tailZone == null) && (i == (ruleSetCount - 1))) {\n\ttailZone = rs.buildTailZone(id);\n} ", 
            "generation": 409, 
            "ingredients": null, 
            "patch": "if ((org.joda.time.tz.ZoneInfoCompiler.cLenientISO) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cLenientISO = org.joda.time.chrono.LenientChronology.getInstance(org.joda.time.chrono.ISOChronology.getInstanceUTC());\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 371, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "47", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "PACKAGE", 
            "time": "3603", 
            "type": "ReplaceOp", 
            "variant": 818
        }, 
        {
            "buggyStatement": "iRules.add(rule)", 
            "generation": 443, 
            "ingredients": null, 
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 995, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "47", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "PACKAGE", 
            "time": "3814", 
            "type": "InsertAfterOp", 
            "variant": 886
        }, 
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 452, 
            "ingredients": null, 
            "patch": "if ((org.joda.time.tz.ZoneInfoCompiler.cStartOfYear) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cStartOfYear = new org.joda.time.tz.ZoneInfoCompiler.DateTimeOfYear();\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "47", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "PACKAGE", 
            "time": "3914", 
            "type": "ReplaceOp", 
            "variant": 904
        }, 
        {
            "buggyStatement": "org.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0)", 
            "generation": 528, 
            "ingredients": null, 
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1142, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "47", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "PACKAGE", 
            "time": "4273", 
            "type": "InsertAfterOp", 
            "variant": 1056
        }, 
        {
            "buggyStatement": "org.joda.time.tz.DateTimeZoneBuilder.Transition next = rs.firstTransition(millis)", 
            "generation": 538, 
            "ingredients": null, 
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 351, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "47", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "PACKAGE", 
            "time": "4375", 
            "type": "InsertBeforeOp", 
            "variant": 1076
        }, 
        {
            "buggyStatement": "if ((tailZone == null) && (i == (ruleSetCount - 1))) {\n\ttailZone = rs.buildTailZone(id);\n} ", 
            "generation": 680, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 371, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "47", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "-", 
            "time": "5068", 
            "type": "RemoveOp", 
            "variant": 1360
        }, 
        {
            "buggyStatement": "if (tailZone != null) {\n\tif (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\t\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t\t} \n\t\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t\t} else {\n\t\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t\t}\n\t} \n} ", 
            "generation": 706, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1457, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "47", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "-", 
            "time": "5224", 
            "type": "RemoveOp", 
            "variant": 1412
        }, 
        {
            "buggyStatement": "tailZone = rs.buildTailZone(id)", 
            "generation": 721, 
            "ingredients": null, 
            "patch": "millis = next.getMillis()", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 372, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "47", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "LOCAL", 
            "time": "5355", 
            "type": "ReplaceOp", 
            "variant": 1442
        }, 
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 749, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "47", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "-", 
            "time": "5745", 
            "type": "RemoveOp", 
            "variant": 1498
        }, 
        {
            "buggyStatement": "return new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence)", 
            "generation": 789, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1154, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "47", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "-", 
            "time": "6082", 
            "type": "RemoveOp", 
            "variant": 1578
        }, 
        {
            "buggyStatement": "long newLocal = (tr.getMillis()) + offsetForNew", 
            "generation": 883, 
            "ingredients": null, 
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 424, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "47", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "PACKAGE", 
            "time": "6485", 
            "type": "InsertAfterOp", 
            "variant": 1766
        }, 
        {
            "buggyStatement": "if ((iRules.size()) == 2) {\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);\n\tif (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\t\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n\t} \n} ", 
            "generation": 953, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1141, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "47", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "-", 
            "time": "7063", 
            "type": "RemoveOp", 
            "variant": 1906
        }, 
        {
            "buggyStatement": "tailZone = rs.buildTailZone(id)", 
            "generation": 961, 
            "ingredients": null, 
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cLenientISO = org.joda.time.chrono.LenientChronology.getInstance(org.joda.time.chrono.ISOChronology.getInstanceUTC())", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 372, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "47", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "PACKAGE", 
            "time": "7156", 
            "type": "ReplaceOp", 
            "variant": 1922
        }
    ], 
    "ops": "0", 
    "programVariant": "76", 
    "timeEvaluation": null, 
    "timeTotal": "7444"
}