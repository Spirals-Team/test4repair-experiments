seed AstorRun 30 
export PATH="/home/mmartinez/defects4j/framework/bin:$PATH";export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;export PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";cd /home/mmartinez/projects/time/time_11;defects4j compile;cp -r /home/mmartinez/projects/time/time_11 /tmp/time_11_Genprog_local_s1;cd /tmp/time_11_Genprog_local_s1;mkdir lib/;cp -r /home/mmartinez/defects4j/framework/projects/lib/* lib/;cp -r /home/mmartinez/defects4j/framework/projects/Time/lib/* lib/;find . -type f -name "package-info.java" -delete;
/home/mmartinez/defects4j-repair/src/python/core/../../../results/2016-june/Time/seed/30/package/11/Genprog/result
cd /tmp/time_11_Genprog_local_s1;export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;TZ="America/New_York"; export TZexport PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";time /home/mmartinez/jdk1.8.0_45/bin//java -Xmx4096m -cp /home/mmartinez/defects4j-repair/src/python/core/../../..//libs/astor.jar fr.inria.main.evolution.MainjGenProg -mode statement -location . -id Time -dependencies lib/ -failing org.joda.time.tz.TestCompiler: -package org.joda -jvm4testexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ -jvm4evosuitetestexecution /home/mmartinez/jdk1.8.0_45/bin/ -javacompliancelevel 5 -maxgen 1000000 -seed 30 -scope package -maxtime 120  -stopfirst false -population 1 -srcjavafolder src/main/java/ -srctestfolder src/test/java/ -binjavafolder target/classes/ -bintestfolder target/test-classes/ -flthreshold 0.1  -validation  fr.inria.astor.core.validation.validators.RegressionValidation  -ESParameters -Dassertion_timeout=1800:-Dminimization_timeout=1800:-Djunit_check_timeout=1800:-Dwrite_junit_timeout=300:-Dinitialization_timeout=300:-Dglobal_timeout=18000:-Dsearch_budget=100000:-Dstopping_condition=MaxStatements:-Dno_runtime_dependency=true:-Dsandbox=false:-Dp_reflection_on_private=0.0:-Dreflection_start_percent=1.0:-Dp_functional_mocking=0.0:-Dfunctional_mocking_percent=1.0:-mem=2000 -testbystep  -ignoredtestcases org.apache.commons.lang.LocaleUtilsTest  -excludeRegression  -maxgen 100000000 ;echo "

Node: `hostname`
";echo "
Date: `date`
"; find /tmp/time_11_Genprog_local_s1/outputMutation -name "*.class" -type f -delete;echo "removed classes 
"; find . -name bin  -type d -print0|xargs -0 rm -r --; zip -r -q out.zip /tmp/time_11_Genprog_local_s1/outputMutation; echo "zipped 
";cp out.zip /home/mmartinez/defects4j-repair/src/python/core/../../../results/2016-june/Time/seed/30/package/11/Genprog; echo "copied zip 
";rm -rf /tmp/time_11_Genprog_local_s1;

[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:136) - End Repair Loops: Found solution
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:137) - Solution stored at: /tmp/time_11_Genprog_local_s1/./outputMutation/AstorMain-Time//src/
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:142) - 
Number solutions:26
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 2.0, [Variant id: 86 (SOL) , #gens: 207, #ops: 1, parent:85]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 3.0, [Variant id: 90 (SOL) , #gens: 208, #ops: 1, parent:89]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 2.0, [Variant id: 94 (SOL) , #gens: 208, #ops: 1, parent:93]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 2.0, [Variant id: 144 (SOL) , #gens: 208, #ops: 1, parent:143]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 2.0, [Variant id: 228 (SOL) , #gens: 209, #ops: 1, parent:227]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 2.0, [Variant id: 232 (SOL) , #gens: 207, #ops: 1, parent:231]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 2.0, [Variant id: 248 (SOL) , #gens: 209, #ops: 1, parent:247]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 2.0, [Variant id: 270 (SOL) , #gens: 207, #ops: 1, parent:269]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 2.0, [Variant id: 294 (SOL) , #gens: 208, #ops: 1, parent:293]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 2.0, [Variant id: 296 (SOL) , #gens: 207, #ops: 1, parent:295]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 2.0, [Variant id: 310 (SOL) , #gens: 209, #ops: 1, parent:309]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 2.0, [Variant id: 332 (SOL) , #gens: 207, #ops: 1, parent:331]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 2.0, [Variant id: 396 (SOL) , #gens: 208, #ops: 1, parent:395]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 2.0, [Variant id: 510 (SOL) , #gens: 208, #ops: 1, parent:509]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 2.0, [Variant id: 584 (SOL) , #gens: 208, #ops: 1, parent:583]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 2.0, [Variant id: 682 (SOL) , #gens: 208, #ops: 1, parent:681]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 2.0, [Variant id: 702 (SOL) , #gens: 207, #ops: 1, parent:701]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 2.0, [Variant id: 964 (SOL) , #gens: 207, #ops: 1, parent:963]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 2.0, [Variant id: 986 (SOL) , #gens: 207, #ops: 1, parent:985]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 2.0, [Variant id: 1022 (SOL) , #gens: 207, #ops: 1, parent:1021]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 2.0, [Variant id: 1078 (SOL) , #gens: 207, #ops: 1, parent:1077]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 2.0, [Variant id: 1090 (SOL) , #gens: 207, #ops: 1, parent:1089]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 2.0, [Variant id: 1164 (SOL) , #gens: 209, #ops: 1, parent:1163]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 2.0, [Variant id: 1168 (SOL) , #gens: 207, #ops: 1, parent:1167]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 2.0, [Variant id: 1236 (SOL) , #gens: 208, #ops: 1, parent:1235]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 2.0, [Variant id: 1250 (SOL) , #gens: 208, #ops: 1, parent:1249]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:146) - 
All variants:
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:148) - f 1.0, [Variant id: 1263, #gens: 208, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:152) - 
Solution details
[INFO ] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:153) - 
 --SOLUTIONS DESCRIPTION--

 ----
ProgramVariant 86
 
time(sec)= 1032
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1141
lineSuspiciousness= 0.327
original statement= if ((iRules.size()) == 2) {
	org.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);
	org.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);
	if (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {
		return new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);
	} 
} 
fixed statement= 
generation= 43
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |false|1|40|[test35(org.joda.time.tz.DateTimeZoneBuilder_ESTest): Simulated IOException-]|
 ----
ProgramVariant 90
 
time(sec)= 1300
operation: ReplaceOp
location= org.joda.time.tz.ZoneInfoCompiler
line= 78
lineSuspiciousness= 0.612
original statement= return org.joda.time.tz.ZoneInfoCompiler.cVerbose.get()
fixed statement= return true
generation= 45
ingredientScope= PACKAGE
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |false|2|62|[test56(org.joda.time.tz.ZoneInfoCompiler_ESTest): Expecting exception: NullPointerException-, test24(org.joda.time.tz.ZoneInfoCompiler_ESTest): Exception was not thrown in org.joda.time.tz.ZoneInfoCompiler but in org.evosuite.runtime.vfs.VirtualFileSystem.throwSimuledIOExceptionIfNeeded(VirtualFileSystem.java:172): java.io.IOException: Simulated IOException-]|
 ----
ProgramVariant 94
 
time(sec)= 1425
operation: ReplaceOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1460
lineSuspiciousness= 0.866
original statement= if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
	java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
} 
fixed statement= if (size == 0) {
	throw new java.lang.IllegalArgumentException();
} 
generation= 47
ingredientScope= LOCAL
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |false|1|40|[test35(org.joda.time.tz.DateTimeZoneBuilder_ESTest): Simulated IOException-]|
 ----
ProgramVariant 144
 
time(sec)= 1639
operation: ReplaceOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 371
lineSuspiciousness= 0.327
original statement= if ((tailZone == null) && (i == (ruleSetCount - 1))) {
	tailZone = rs.buildTailZone(id);
} 
fixed statement= if ((iRuleSets.size()) == 0) {
	addCutover(java.lang.Integer.MIN_VALUE, 'w', 1, 1, 0, false, 0);
} 
generation= 72
ingredientScope= LOCAL
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |false|1|40|[test35(org.joda.time.tz.DateTimeZoneBuilder_ESTest): Simulated IOException-]|
 ----
ProgramVariant 228
 
time(sec)= 1920
operation: InsertAfterOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1436
lineSuspiciousness= 0.327
original statement= if ((((((((curOffset != nextOffset) && (curStdOffset == nextStdOffset)) && (curNameKey.equals(nextNameKey))) && ((p.getYears()) == 0)) && ((p.getMonths()) > 4)) && ((p.getMonths()) < 8)) && (curNameKey.equals(zoneNameData[2]))) && (curNameKey.equals(zoneNameData[4]))) {
	if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
		java.lang.System.out.println(("Fixing duplicate name key - " + nextNameKey));
		java.lang.System.out.println(((("     - " + (new org.joda.time.DateTime(trans[i] , chrono))) + " - ") + (new org.joda.time.DateTime(trans[(i + 1)] , chrono))));
	} 
	if (curOffset > nextOffset) {
		nameKeys[i] = (curNameKey + "-Summer").intern();
	} else {
		if (curOffset < nextOffset) {
			nameKeys[(i + 1)] = (nextNameKey + "-Summer").intern();
			i++;
		} 
	}
} 
fixed statement= org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)
generation= 114
ingredientScope= PACKAGE
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |false|1|40|[test35(org.joda.time.tz.DateTimeZoneBuilder_ESTest): Simulated IOException-]|
 ----
ProgramVariant 232
 
time(sec)= 2043
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1460
lineSuspiciousness= 0.866
original statement= if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
	java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
} 
fixed statement= 
generation= 116
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |false|1|40|[test35(org.joda.time.tz.DateTimeZoneBuilder_ESTest): Simulated IOException-]|
 ----
ProgramVariant 248
 
time(sec)= 2180
operation: InsertAfterOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 550
lineSuspiciousness= 0.283
original statement= offset = standardOffset + saveMillis
fixed statement= org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)
generation= 124
ingredientScope= PACKAGE
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |false|1|40|[test35(org.joda.time.tz.DateTimeZoneBuilder_ESTest): Simulated IOException-]|
 ----
ProgramVariant 270
 
time(sec)= 2342
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 372
lineSuspiciousness= 0.327
original statement= tailZone = rs.buildTailZone(id)
fixed statement= 
generation= 135
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |false|1|40|[test35(org.joda.time.tz.DateTimeZoneBuilder_ESTest): Simulated IOException-]|
 ----
ProgramVariant 294
 
time(sec)= 2511
operation: ReplaceOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1144
lineSuspiciousness= 0.327
original statement= if (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {
	return new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);
} 
fixed statement= if ((org.joda.time.tz.ZoneInfoCompiler.cStartOfYear) == null) {
	org.joda.time.tz.ZoneInfoCompiler.cStartOfYear = new org.joda.time.tz.ZoneInfoCompiler.DateTimeOfYear();
} 
generation= 147
ingredientScope= PACKAGE
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |false|1|40|[test35(org.joda.time.tz.DateTimeZoneBuilder_ESTest): Simulated IOException-]|
 ----
ProgramVariant 296
 
time(sec)= 2631
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1460
lineSuspiciousness= 0.866
original statement= if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
	java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
} 
fixed statement= 
generation= 148
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |false|1|40|[test35(org.joda.time.tz.DateTimeZoneBuilder_ESTest): Simulated IOException-]|
 ----
ProgramVariant 310
 
time(sec)= 2765
operation: InsertBeforeOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1018
lineSuspiciousness= 0.327
original statement= java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Rule> copy = new java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Rule>(iRules)
fixed statement= org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)
generation= 155
ingredientScope= PACKAGE
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |false|1|40|[test35(org.joda.time.tz.DateTimeZoneBuilder_ESTest): Simulated IOException-]|
 ----
ProgramVariant 332
 
time(sec)= 2922
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1141
lineSuspiciousness= 0.327
original statement= if ((iRules.size()) == 2) {
	org.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);
	org.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);
	if (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {
		return new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);
	} 
} 
fixed statement= 
generation= 166
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |false|1|40|[test35(org.joda.time.tz.DateTimeZoneBuilder_ESTest): Simulated IOException-]|
 ----
ProgramVariant 396
 
time(sec)= 3160
operation: ReplaceOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1141
lineSuspiciousness= 0.327
original statement= if ((iRules.size()) == 2) {
	org.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);
	org.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);
	if (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {
		return new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);
	} 
} 
fixed statement= if (id == null) {
	return null;
} 
generation= 198
ingredientScope= PACKAGE
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |false|1|40|[test35(org.joda.time.tz.DateTimeZoneBuilder_ESTest): Simulated IOException-]|
 ----
ProgramVariant 510
 
time(sec)= 3661
operation: ReplaceOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 827
lineSuspiciousness= 0.327
original statement= return iToYear
fixed statement= return 0
generation= 255
ingredientScope= LOCAL
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |false|1|40|[test35(org.joda.time.tz.DateTimeZoneBuilder_ESTest): Simulated IOException-]|
 ----
ProgramVariant 584
 
time(sec)= 3935
operation: ReplaceOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 371
lineSuspiciousness= 0.327
original statement= if ((tailZone == null) && (i == (ruleSetCount - 1))) {
	tailZone = rs.buildTailZone(id);
} 
fixed statement= if (tailZone != null) {
	break;
} 
generation= 292
ingredientScope= LOCAL
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |false|1|40|[test35(org.joda.time.tz.DateTimeZoneBuilder_ESTest): Simulated IOException-]|
 ----
ProgramVariant 682
 
time(sec)= 4336
operation: ReplaceOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1460
lineSuspiciousness= 0.866
original statement= if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
	java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
} 
fixed statement= if (id == null) {
	return null;
} 
generation= 341
ingredientScope= PACKAGE
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |false|1|40|[test35(org.joda.time.tz.DateTimeZoneBuilder_ESTest): Simulated IOException-]|
 ----
ProgramVariant 702
 
time(sec)= 4481
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1458
lineSuspiciousness= 0.354
original statement= if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {
	if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
		java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
	} 
	if ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {
		tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend("-Summer") , tailZone.iEndRecurrence);
	} else {
		tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend("-Summer"));
	}
} 
fixed statement= 
generation= 351
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |false|1|40|[test35(org.joda.time.tz.DateTimeZoneBuilder_ESTest): Simulated IOException-]|
 ----
ProgramVariant 964
 
time(sec)= 5330
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1460
lineSuspiciousness= 0.866
original statement= if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
	java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
} 
fixed statement= 
generation= 482
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |false|1|40|[test35(org.joda.time.tz.DateTimeZoneBuilder_ESTest): Simulated IOException-]|
 ----
ProgramVariant 986
 
time(sec)= 5604
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1141
lineSuspiciousness= 0.327
original statement= if ((iRules.size()) == 2) {
	org.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);
	org.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);
	if (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {
		return new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);
	} 
} 
fixed statement= 
generation= 493
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |false|1|40|[test35(org.joda.time.tz.DateTimeZoneBuilder_ESTest): Simulated IOException-]|
 ----
ProgramVariant 1022
 
time(sec)= 5772
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1154
lineSuspiciousness= 0.354
original statement= return new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence)
fixed statement= 
generation= 511
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |false|1|40|[test35(org.joda.time.tz.DateTimeZoneBuilder_ESTest): Simulated IOException-]|
 ----
ProgramVariant 1078
 
time(sec)= 6099
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1458
lineSuspiciousness= 0.354
original statement= if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {
	if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
		java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
	} 
	if ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {
		tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend("-Summer") , tailZone.iEndRecurrence);
	} else {
		tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend("-Summer"));
	}
} 
fixed statement= 
generation= 539
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |false|1|40|[test35(org.joda.time.tz.DateTimeZoneBuilder_ESTest): Simulated IOException-]|
 ----
ProgramVariant 1090
 
time(sec)= 6237
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1141
lineSuspiciousness= 0.327
original statement= if ((iRules.size()) == 2) {
	org.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);
	org.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);
	if (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {
		return new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);
	} 
} 
fixed statement= 
generation= 545
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |false|1|40|[test35(org.joda.time.tz.DateTimeZoneBuilder_ESTest): Simulated IOException-]|
 ----
ProgramVariant 1164
 
time(sec)= 6720
operation: InsertAfterOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1421
lineSuspiciousness= 0.327
original statement= if (((set != null) && ((set.length) == 5)) && (id.equals(set[0]))) {
	zoneNameData = set;
} 
fixed statement= org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)
generation= 582
ingredientScope= PACKAGE
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |false|1|40|[test35(org.joda.time.tz.DateTimeZoneBuilder_ESTest): Simulated IOException-]|
 ----
ProgramVariant 1168
 
time(sec)= 6844
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 371
lineSuspiciousness= 0.327
original statement= if ((tailZone == null) && (i == (ruleSetCount - 1))) {
	tailZone = rs.buildTailZone(id);
} 
fixed statement= 
generation= 584
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |false|1|40|[test35(org.joda.time.tz.DateTimeZoneBuilder_ESTest): Simulated IOException-]|
 ----
ProgramVariant 1236
 
time(sec)= 7092
operation: ReplaceOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1144
lineSuspiciousness= 0.327
original statement= if (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {
	return new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);
} 
fixed statement= if (id == null) {
	throw new java.lang.IllegalArgumentException();
} 
generation= 618
ingredientScope= LOCAL
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |false|1|40|[test35(org.joda.time.tz.DateTimeZoneBuilder_ESTest): Simulated IOException-]|
 ----
ProgramVariant 1250
 
time(sec)= 7236
operation: ReplaceOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1457
lineSuspiciousness= 0.327
original statement= if (tailZone != null) {
	if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {
		if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
			java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
		} 
		if ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {
			tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend("-Summer") , tailZone.iEndRecurrence);
		} else {
			tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend("-Summer"));
		}
	} 
} 
fixed statement= if (id == null) {
	return null;
} 
generation= 625
ingredientScope= PACKAGE
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |false|1|40|[test35(org.joda.time.tz.DateTimeZoneBuilder_ESTest): Simulated IOException-]|
[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:397) - Time Total(s): 7443.64


Node: graphene-102.nancy.grid5000.fr


Date: Sun Jan 29 18:59:47 CET 2017

removed classes 

zipped 

copied zip 


