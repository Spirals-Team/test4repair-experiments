{
    "date": "Sat Jan 28 04:05:30 CET 2017\n\nremoved classes \n\nzipped \n\ncopied zip \n\n", 
    "gens": "952", 
    "node": "grimoire-2.nancy.grid5000.fr", 
    "operations": [
        {
            "buggyStatement": "if ((plotState != null) && (hotspot != null)) {\n\torg.jfree.chart.ChartRenderingInfo owner = plotState.getOwner();\n\torg.jfree.chart.entity.EntityCollection entities = owner.getEntityCollection();\n\tif (entities != null) {\n\t\tentities.add(new org.jfree.chart.entity.AxisLabelEntity(org.jfree.chart.axis.Axis.this , hotspot , org.jfree.chart.axis.Axis.this.labelToolTip , org.jfree.chart.axis.Axis.this.labelURL));\n\t} \n} ", 
            "generation": 245, 
            "ingredients": null, 
            "patch": "if (edge == (org.jfree.chart.util.RectangleEdge.BOTTOM)) {\n\tjava.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(getLabelAngle(), labelBounds.getCenterX(), labelBounds.getCenterY());\n\tjava.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);\n\tlabelBounds = rotatedLabelBounds.getBounds2D();\n\tfloat w = ((float)(labelBounds.getWidth()));\n\tfloat h = ((float)(labelBounds.getHeight()));\n\tfloat labelx = ((float)(dataArea.getCenterX()));\n\tfloat labely = ((float)(((state.getCursor()) + (insets.getTop())) + (h / 2.0)));\n\torg.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle(), org.jfree.chart.text.TextAnchor.CENTER);\n\thotspot = new java.awt.geom.Rectangle2D.Float((labelx - (w / 2.0F)) , (labely - (h / 2.0F)) , w , h);\n\tstate.cursorDown((((insets.getTop()) + (labelBounds.getHeight())) + (insets.getBottom())));\n} else {\n\tif (edge == (org.jfree.chart.util.RectangleEdge.LEFT)) {\n\t\tjava.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(((getLabelAngle()) - ((java.lang.Math.PI) / 2.0)), labelBounds.getCenterX(), labelBounds.getCenterY());\n\t\tjava.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);\n\t\tlabelBounds = rotatedLabelBounds.getBounds2D();\n\t\tfloat w = ((float)(labelBounds.getWidth()));\n\t\tfloat h = ((float)(labelBounds.getHeight()));\n\t\tfloat labelx = ((float)(((state.getCursor()) - (insets.getRight())) - (w / 2.0)));\n\t\tfloat labely = ((float)(dataArea.getCenterY()));\n\t\torg.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, org.jfree.chart.text.TextAnchor.CENTER, ((getLabelAngle()) - ((java.lang.Math.PI) / 2.0)), org.jfree.chart.text.TextAnchor.CENTER);\n\t\thotspot = new java.awt.geom.Rectangle2D.Float((labelx - (w / 2.0F)) , (labely - (h / 2.0F)) , w , h);\n\t\tstate.cursorLeft((((insets.getLeft()) + (labelBounds.getWidth())) + (insets.getRight())));\n\t} else {\n\t\tif (edge == (org.jfree.chart.util.RectangleEdge.RIGHT)) {\n\t\t\tjava.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(((getLabelAngle()) + ((java.lang.Math.PI) / 2.0)), labelBounds.getCenterX(), labelBounds.getCenterY());\n\t\t\tjava.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);\n\t\t\tlabelBounds = rotatedLabelBounds.getBounds2D();\n\t\t\tfloat w = ((float)(labelBounds.getWidth()));\n\t\t\tfloat h = ((float)(labelBounds.getHeight()));\n\t\t\tfloat labelx = ((float)(((state.getCursor()) + (insets.getLeft())) + (w / 2.0)));\n\t\t\tfloat labely = ((float)((dataArea.getY()) + ((dataArea.getHeight()) / 2.0)));\n\t\t\torg.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, org.jfree.chart.text.TextAnchor.CENTER, ((getLabelAngle()) + ((java.lang.Math.PI) / 2.0)), org.jfree.chart.text.TextAnchor.CENTER);\n\t\t\thotspot = new java.awt.geom.Rectangle2D.Float((labelx - (w / 2.0F)) , (labely - (h / 2.0F)) , w , h);\n\t\t\tstate.cursorRight((((insets.getLeft()) + (labelBounds.getWidth())) + (insets.getRight())));\n\t\t} \n\t}\n}", 
            "patchLocation": {
                "className": "org.jfree.chart.axis.Axis", 
                "line": 1190, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "89", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "129", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "3191", 
                "mvaltcfailing": "0"
            }, 
            "scope": "LOCAL", 
            "time": "1605", 
            "type": "ReplaceOp", 
            "variant": 490
        }, 
        {
            "buggyStatement": "if ((plotState != null) && (hotspot != null)) {\n\torg.jfree.chart.ChartRenderingInfo owner = plotState.getOwner();\n\torg.jfree.chart.entity.EntityCollection entities = owner.getEntityCollection();\n\tif (entities != null) {\n\t\tentities.add(new org.jfree.chart.entity.AxisLabelEntity(org.jfree.chart.axis.Axis.this , hotspot , org.jfree.chart.axis.Axis.this.labelToolTip , org.jfree.chart.axis.Axis.this.labelURL));\n\t} \n} ", 
            "generation": 678, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.jfree.chart.axis.Axis", 
                "line": 1190, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "89", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "129", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "3191", 
                "mvaltcfailing": "0"
            }, 
            "scope": "-", 
            "time": "3988", 
            "type": "RemoveOp", 
            "variant": 1356
        }, 
        {
            "buggyStatement": "nonTitleArea.setRect(chartArea)", 
            "generation": 969, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.jfree.chart.JFreeChart", 
                "line": 1181, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "false", 
                "evaltcall": "131", 
                "evaltcfailing": "4", 
                "fvalresult": "true", 
                "fvaltcall": "129", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "3191", 
                "mvaltcfailing": "0"
            }, 
            "scope": "-", 
            "time": "5793", 
            "type": "RemoveOp", 
            "variant": 1938
        }, 
        {
            "buggyStatement": "if (edge == (org.jfree.chart.util.RectangleEdge.TOP)) {\n\torg.jfree.chart.axis.AxisCollection.this.axesAtTop.add(axis);\n} else {\n\tif (edge == (org.jfree.chart.util.RectangleEdge.BOTTOM)) {\n\t\torg.jfree.chart.axis.AxisCollection.this.axesAtBottom.add(axis);\n\t} else {\n\t\tif (edge == (org.jfree.chart.util.RectangleEdge.LEFT)) {\n\t\t\torg.jfree.chart.axis.AxisCollection.this.axesAtLeft.add(axis);\n\t\t} else {\n\t\t\tif (edge == (org.jfree.chart.util.RectangleEdge.RIGHT)) {\n\t\t\t\torg.jfree.chart.axis.AxisCollection.this.axesAtRight.add(axis);\n\t\t\t} \n\t\t}\n\t}\n}", 
            "generation": 1182, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.jfree.chart.axis.AxisCollection", 
                "line": 132, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "false", 
                "evaltcall": "10", 
                "evaltcfailing": "4", 
                "fvalresult": "true", 
                "fvaltcall": "129", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "3191", 
                "mvaltcfailing": "0"
            }, 
            "scope": "-", 
            "time": "7167", 
            "type": "RemoveOp", 
            "variant": 2364
        }
    ], 
    "ops": "0", 
    "programVariant": "490", 
    "timeEvaluation": null, 
    "timeTotal": "8459"
}