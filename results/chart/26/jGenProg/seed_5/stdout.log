seed AstorRun 5 
export PATH="/home/mmartinez/defects4j/framework/bin:$PATH";export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;export PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";cd /home/mmartinez/projects/chart/chart_26;defects4j compile;cp -r /home/mmartinez/projects/chart/chart_26 /tmp/chart_26_Genprog_local_s1;cd /tmp/chart_26_Genprog_local_s1;mkdir lib/;cp -r /home/mmartinez/defects4j/framework/projects/lib/* lib/;cp -r /home/mmartinez/defects4j/framework/projects/Chart/lib/* lib/;find . -type f -name "package-info.java" -delete;
/home/mmartinez/defects4j-repair/src/python/core/../../../results/2016-june/Chart/seed/5/package/26/Genprog/result
cd /tmp/chart_26_Genprog_local_s1;export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;TZ="America/New_York"; export TZexport PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";time /home/mmartinez/jdk1.8.0_45/bin//java -Xmx4096m -cp /home/mmartinez/defects4j-repair/src/python/core/../../..//libs/astor.jar fr.inria.main.evolution.MainjGenProg -mode statement -location . -id Chart -dependencies lib/ -failing org.jfree.chart.junit.AreaChartTests:org.jfree.chart.junit.BarChart3DTests:org.jfree.chart.junit.BarChartTests:org.jfree.chart.junit.GanttChartTests:org.jfree.chart.junit.GanttChartTests:org.jfree.chart.junit.LineChart3DTests:org.jfree.chart.junit.LineChartTests:org.jfree.chart.junit.StackedAreaChartTests:org.jfree.chart.junit.StackedBarChart3DTests:org.jfree.chart.junit.StackedBarChartTests:org.jfree.chart.junit.WaterfallChartTests:org.jfree.chart.plot.junit.CategoryPlotTests:org.jfree.chart.plot.junit.CategoryPlotTests:org.jfree.chart.plot.junit.CategoryPlotTests:org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests:org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests:org.jfree.chart.renderer.category.junit.IntervalBarRendererTests:org.jfree.chart.renderer.category.junit.LayeredBarRendererTests:org.jfree.chart.renderer.category.junit.LevelRendererTests:org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests:org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests:org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests: -package org.jfree -jvm4testexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ -jvm4evosuitetestexecution /home/mmartinez/jdk1.8.0_45/bin/ -javacompliancelevel 4 -maxgen 1000000 -seed 5 -scope package -maxtime 120  -stopfirst false -population 1 -srcjavafolder source/ -srctestfolder tests/ -binjavafolder build/ -bintestfolder build-tests/ -flthreshold 0.1  -validation  fr.inria.astor.core.validation.validators.RegressionValidation  -ESParameters -Dassertion_timeout=1800:-Dminimization_timeout=1800:-Djunit_check_timeout=1800:-Dwrite_junit_timeout=300:-Dinitialization_timeout=300:-Dglobal_timeout=18000:-Dsearch_budget=100000:-Dstopping_condition=MaxStatements:-Dno_runtime_dependency=true:-Dsandbox=false:-Dp_reflection_on_private=0.0:-Dreflection_start_percent=1.0:-Dp_functional_mocking=0.0:-Dfunctional_mocking_percent=1.0:-mem=2000 -ignoredtestcases org.apache.commons.lang.LocaleUtilsTest  -excludeRegression  -maxgen 100000000 ;echo "

Node: `hostname`
";echo "
Date: `date`
"; find /tmp/chart_26_Genprog_local_s1/outputMutation -name "*.class" -type f -delete;echo "removed classes 
"; find . -name bin  -type d -print0|xargs -0 rm -r --; zip -r -q out.zip /tmp/chart_26_Genprog_local_s1/outputMutation; echo "zipped 
";cp out.zip /home/mmartinez/defects4j-repair/src/python/core/../../../results/2016-june/Chart/seed/5/package/26/Genprog; echo "copied zip 
";rm -rf /tmp/chart_26_Genprog_local_s1;

[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:136) - End Repair Loops: Found solution
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:137) - Solution stored at: /tmp/chart_26_Genprog_local_s1/./outputMutation/AstorMain-Chart//src/
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:142) - 
Number solutions:3
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 888 (SOL) , #gens: 951, #ops: 1, parent:887]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 1.0, [Variant id: 926 (SOL) , #gens: 951, #ops: 1, parent:925]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 1530 (SOL) , #gens: 951, #ops: 1, parent:1529]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:146) - 
All variants:
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:148) - f 30.0, [Variant id: 2071, #gens: 952, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:152) - 
Solution details
[INFO ] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:153) - 
 --SOLUTIONS DESCRIPTION--

 ----
ProgramVariant 888
 
time(sec)= 3057
operation: RemoveOp
location= org.jfree.chart.axis.Axis
line= 1113
lineSuspiciousness= 0.699
original statement= if (edge == (org.jfree.chart.util.RectangleEdge.TOP)) {
	java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(getLabelAngle(), labelBounds.getCenterX(), labelBounds.getCenterY());
	java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
	labelBounds = rotatedLabelBounds.getBounds2D();
	float w = ((float)(labelBounds.getWidth()));
	float h = ((float)(labelBounds.getHeight()));
	float labelx = ((float)(dataArea.getCenterX()));
	float labely = ((float)(((state.getCursor()) - (insets.getBottom())) - (h / 2.0)));
	org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle(), org.jfree.chart.text.TextAnchor.CENTER);
	hotspot = new java.awt.geom.Rectangle2D.Float((labelx - (w / 2.0F)) , (labely - (h / 2.0F)) , w , h);
	state.cursorUp((((insets.getTop()) + (labelBounds.getHeight())) + (insets.getBottom())));
} else {
	if (edge == (org.jfree.chart.util.RectangleEdge.BOTTOM)) {
		java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(getLabelAngle(), labelBounds.getCenterX(), labelBounds.getCenterY());
		java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
		labelBounds = rotatedLabelBounds.getBounds2D();
		float w = ((float)(labelBounds.getWidth()));
		float h = ((float)(labelBounds.getHeight()));
		float labelx = ((float)(dataArea.getCenterX()));
		float labely = ((float)(((state.getCursor()) + (insets.getTop())) + (h / 2.0)));
		org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle(), org.jfree.chart.text.TextAnchor.CENTER);
		hotspot = new java.awt.geom.Rectangle2D.Float((labelx - (w / 2.0F)) , (labely - (h / 2.0F)) , w , h);
		state.cursorDown((((insets.getTop()) + (labelBounds.getHeight())) + (insets.getBottom())));
	} else {
		if (edge == (org.jfree.chart.util.RectangleEdge.LEFT)) {
			java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(((getLabelAngle()) - ((java.lang.Math.PI) / 2.0)), labelBounds.getCenterX(), labelBounds.getCenterY());
			java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
			labelBounds = rotatedLabelBounds.getBounds2D();
			float w = ((float)(labelBounds.getWidth()));
			float h = ((float)(labelBounds.getHeight()));
			float labelx = ((float)(((state.getCursor()) - (insets.getRight())) - (w / 2.0)));
			float labely = ((float)(dataArea.getCenterY()));
			org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, org.jfree.chart.text.TextAnchor.CENTER, ((getLabelAngle()) - ((java.lang.Math.PI) / 2.0)), org.jfree.chart.text.TextAnchor.CENTER);
			hotspot = new java.awt.geom.Rectangle2D.Float((labelx - (w / 2.0F)) , (labely - (h / 2.0F)) , w , h);
			state.cursorLeft((((insets.getLeft()) + (labelBounds.getWidth())) + (insets.getRight())));
		} else {
			if (edge == (org.jfree.chart.util.RectangleEdge.RIGHT)) {
				java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(((getLabelAngle()) + ((java.lang.Math.PI) / 2.0)), labelBounds.getCenterX(), labelBounds.getCenterY());
				java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
				labelBounds = rotatedLabelBounds.getBounds2D();
				float w = ((float)(labelBounds.getWidth()));
				float h = ((float)(labelBounds.getHeight()));
				float labelx = ((float)(((state.getCursor()) + (insets.getLeft())) + (w / 2.0)));
				float labely = ((float)((dataArea.getY()) + ((dataArea.getHeight()) / 2.0)));
				org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, org.jfree.chart.text.TextAnchor.CENTER, ((getLabelAngle()) + ((java.lang.Math.PI) / 2.0)), org.jfree.chart.text.TextAnchor.CENTER);
				hotspot = new java.awt.geom.Rectangle2D.Float((labelx - (w / 2.0F)) , (labely - (h / 2.0F)) , w , h);
				state.cursorRight((((insets.getLeft()) + (labelBounds.getWidth())) + (insets.getRight())));
			} 
		}
	}
}
fixed statement= 
generation= 444
ingredientScope= -
validation=
failing: |true|0|129|[]|
manual_regression: |true|0|3191|[]|
evo_regression: |true|0|86|[]|
 ----
ProgramVariant 926
 
time(sec)= 3628
operation: RemoveOp
location= org.jfree.chart.JFreeChart
line= 1181
lineSuspiciousness= 0.67
original statement= nonTitleArea.setRect(chartArea)
fixed statement= 
generation= 463
ingredientScope= -
validation=
failing: |true|0|129|[]|
manual_regression: |true|0|3191|[]|
evo_regression: |false|1|117|[test027(org.jfree.chart.JFreeChart_ESTest): Expecting exception: NullPointerException-]|
 ----
ProgramVariant 1530
 
time(sec)= 5620
operation: RemoveOp
location= org.jfree.chart.axis.Axis
line= 1113
lineSuspiciousness= 0.699
original statement= if (edge == (org.jfree.chart.util.RectangleEdge.TOP)) {
	java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(getLabelAngle(), labelBounds.getCenterX(), labelBounds.getCenterY());
	java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
	labelBounds = rotatedLabelBounds.getBounds2D();
	float w = ((float)(labelBounds.getWidth()));
	float h = ((float)(labelBounds.getHeight()));
	float labelx = ((float)(dataArea.getCenterX()));
	float labely = ((float)(((state.getCursor()) - (insets.getBottom())) - (h / 2.0)));
	org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle(), org.jfree.chart.text.TextAnchor.CENTER);
	hotspot = new java.awt.geom.Rectangle2D.Float((labelx - (w / 2.0F)) , (labely - (h / 2.0F)) , w , h);
	state.cursorUp((((insets.getTop()) + (labelBounds.getHeight())) + (insets.getBottom())));
} else {
	if (edge == (org.jfree.chart.util.RectangleEdge.BOTTOM)) {
		java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(getLabelAngle(), labelBounds.getCenterX(), labelBounds.getCenterY());
		java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
		labelBounds = rotatedLabelBounds.getBounds2D();
		float w = ((float)(labelBounds.getWidth()));
		float h = ((float)(labelBounds.getHeight()));
		float labelx = ((float)(dataArea.getCenterX()));
		float labely = ((float)(((state.getCursor()) + (insets.getTop())) + (h / 2.0)));
		org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle(), org.jfree.chart.text.TextAnchor.CENTER);
		hotspot = new java.awt.geom.Rectangle2D.Float((labelx - (w / 2.0F)) , (labely - (h / 2.0F)) , w , h);
		state.cursorDown((((insets.getTop()) + (labelBounds.getHeight())) + (insets.getBottom())));
	} else {
		if (edge == (org.jfree.chart.util.RectangleEdge.LEFT)) {
			java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(((getLabelAngle()) - ((java.lang.Math.PI) / 2.0)), labelBounds.getCenterX(), labelBounds.getCenterY());
			java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
			labelBounds = rotatedLabelBounds.getBounds2D();
			float w = ((float)(labelBounds.getWidth()));
			float h = ((float)(labelBounds.getHeight()));
			float labelx = ((float)(((state.getCursor()) - (insets.getRight())) - (w / 2.0)));
			float labely = ((float)(dataArea.getCenterY()));
			org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, org.jfree.chart.text.TextAnchor.CENTER, ((getLabelAngle()) - ((java.lang.Math.PI) / 2.0)), org.jfree.chart.text.TextAnchor.CENTER);
			hotspot = new java.awt.geom.Rectangle2D.Float((labelx - (w / 2.0F)) , (labely - (h / 2.0F)) , w , h);
			state.cursorLeft((((insets.getLeft()) + (labelBounds.getWidth())) + (insets.getRight())));
		} else {
			if (edge == (org.jfree.chart.util.RectangleEdge.RIGHT)) {
				java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(((getLabelAngle()) + ((java.lang.Math.PI) / 2.0)), labelBounds.getCenterX(), labelBounds.getCenterY());
				java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
				labelBounds = rotatedLabelBounds.getBounds2D();
				float w = ((float)(labelBounds.getWidth()));
				float h = ((float)(labelBounds.getHeight()));
				float labelx = ((float)(((state.getCursor()) + (insets.getLeft())) + (w / 2.0)));
				float labely = ((float)((dataArea.getY()) + ((dataArea.getHeight()) / 2.0)));
				org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, org.jfree.chart.text.TextAnchor.CENTER, ((getLabelAngle()) + ((java.lang.Math.PI) / 2.0)), org.jfree.chart.text.TextAnchor.CENTER);
				hotspot = new java.awt.geom.Rectangle2D.Float((labelx - (w / 2.0F)) , (labely - (h / 2.0F)) , w , h);
				state.cursorRight((((insets.getLeft()) + (labelBounds.getWidth())) + (insets.getRight())));
			} 
		}
	}
}
fixed statement= 
generation= 765
ingredientScope= -
validation=
failing: |true|0|129|[]|
manual_regression: |true|0|3191|[]|
evo_regression: |true|0|86|[]|
[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:397) - Time Total(s): 8690.677


Node: graphene-9.nancy.grid5000.fr


Date: Thu Jan 12 00:30:38 CET 2017

removed classes 

zipped 

copied zip 


