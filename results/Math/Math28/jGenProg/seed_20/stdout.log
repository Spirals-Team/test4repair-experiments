seed AstorRun 20 
export PATH="/home/mmartinez/defects4j/framework/bin:$PATH";export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;export PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";cd /home/mmartinez/projects/math/math_28;defects4j compile;cp -r /home/mmartinez/projects/math/math_28 /tmp/math_28_Genprog_local_s1;cd /tmp/math_28_Genprog_local_s1;mkdir lib/;cp -r /home/mmartinez/defects4j/framework/projects/lib/* lib/;cp -r /home/mmartinez/defects4j/framework/projects/Math/lib/* lib/;find . -type f -name "package-info.java" -delete;
/home/mmartinez/defects4j-repair/src/python/core/../../../results/2016-june/Math/seed/20/package/28/Genprog/result
cd /tmp/math_28_Genprog_local_s1;export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;TZ="America/New_York"; export TZexport PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";time /home/mmartinez/jdk1.8.0_45/bin//java -Xmx4096m -cp /home/mmartinez/defects4j-repair/src/python/core/../../..//libs/astor.jar fr.inria.main.evolution.MainjGenProg -mode statement -location . -id Math -dependencies lib/ -failing org.apache.commons.math3.optimization.linear.SimplexSolverTest: -package org.apache.commons -jvm4testexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ -jvm4evosuitetestexecution /home/mmartinez/jdk1.8.0_45/bin/ -javacompliancelevel 5 -maxgen 1000000 -seed 20 -scope package -maxtime 120  -stopfirst false -population 1 -srcjavafolder src/main/java/ -srctestfolder src/test/java/ -binjavafolder target/classes/ -bintestfolder target/test-classes/ -flthreshold 0.1  -validation  fr.inria.astor.core.validation.validators.RegressionValidation  -ESParameters -Dassertion_timeout=1800:-Dminimization_timeout=1800:-Djunit_check_timeout=1800:-Dwrite_junit_timeout=300:-Dinitialization_timeout=300:-Dglobal_timeout=18000:-Dsearch_budget=100000:-Dstopping_condition=MaxStatements:-Dno_runtime_dependency=true:-Dsandbox=false:-Dp_reflection_on_private=0.0:-Dreflection_start_percent=1.0:-Dp_functional_mocking=0.0:-Dfunctional_mocking_percent=1.0:-mem=2000 -ignoredtestcases org.apache.commons.lang.LocaleUtilsTest  -excludeRegression  -maxgen 100000000 ;echo "

Node: `hostname`
";echo "
Date: `date`
"; find /tmp/math_28_Genprog_local_s1/outputMutation -name "*.class" -type f -delete;echo "removed classes 
"; find . -name bin  -type d -print0|xargs -0 rm -r --; zip -r -q out.zip /tmp/math_28_Genprog_local_s1/outputMutation; echo "zipped 
";cp out.zip /home/mmartinez/defects4j-repair/src/python/core/../../../results/2016-june/Math/seed/20/package/28/Genprog; echo "copied zip 
";rm -rf /tmp/math_28_Genprog_local_s1;

[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:136) - End Repair Loops: Found solution
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:137) - Solution stored at: /tmp/math_28_Genprog_local_s1/./outputMutation/AstorMain-Math//src/
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:142) - 
Number solutions:13
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 92 (SOL) , #gens: 217, #ops: 1, parent:91]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 734 (SOL) , #gens: 217, #ops: 1, parent:733]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 762 (SOL) , #gens: 217, #ops: 1, parent:761]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 802 (SOL) , #gens: 217, #ops: 1, parent:801]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 816 (SOL) , #gens: 217, #ops: 1, parent:815]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 934 (SOL) , #gens: 217, #ops: 1, parent:933]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 1118 (SOL) , #gens: 217, #ops: 1, parent:1117]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 1138 (SOL) , #gens: 217, #ops: 1, parent:1137]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 1238 (SOL) , #gens: 217, #ops: 1, parent:1237]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 1366 (SOL) , #gens: 217, #ops: 1, parent:1365]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 1468 (SOL) , #gens: 217, #ops: 1, parent:1467]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 1694 (SOL) , #gens: 217, #ops: 1, parent:1693]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 1698 (SOL) , #gens: 217, #ops: 1, parent:1697]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:146) - 
All variants:
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:148) - f 1.0, [Variant id: 1747, #gens: 218, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:152) - 
Solution details
[INFO ] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:153) - 
 --SOLUTIONS DESCRIPTION--

 ----
ProgramVariant 92
 
time(sec)= 399
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 115
lineSuspiciousness= 0.144
original statement= if ((minRatioPositions.size()) > 1) {
	for (java.lang.Integer row : minRatioPositions) {
		for (int i = 0 ; i < (tableau.getNumArtificialVariables()) ; i++) {
			int column = i + (tableau.getArtificialVariableOffset());
			final double entry = tableau.getEntry(row, column);
			if ((org.apache.commons.math3.util.Precision.equals(entry, 1.0, maxUlps)) && (row.equals(tableau.getBasicRow(column)))) {
				return row;
			} 
		}
	}
	java.lang.Integer minRow = null;
	int minIndex = tableau.getWidth();
	for (java.lang.Integer row : minRatioPositions) {
		int i = tableau.getNumObjectiveFunctions();
		for ( ; (i < ((tableau.getWidth()) - 1)) && (minRow != row) ; i++) {
			if (row == (tableau.getBasicRow(i))) {
				if (i < minIndex) {
					minIndex = i;
					minRow = row;
				} 
			} 
		}
	}
	return minRow;
} 
fixed statement= 
generation= 46
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 734
 
time(sec)= 3391
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 104
lineSuspiciousness= 0.224
original statement= minRatioPositions.add(i)
fixed statement= 
generation= 367
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 762
 
time(sec)= 3610
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 120
lineSuspiciousness= 0.224
original statement= for (int i = 0 ; i < (tableau.getNumArtificialVariables()) ; i++) {
	int column = i + (tableau.getArtificialVariableOffset());
	final double entry = tableau.getEntry(row, column);
	if ((org.apache.commons.math3.util.Precision.equals(entry, 1.0, maxUlps)) && (row.equals(tableau.getBasicRow(column)))) {
		return row;
	} 
}
fixed statement= 
generation= 381
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 802
 
time(sec)= 3954
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 77
lineSuspiciousness= 0.144
original statement= minValue = entry
fixed statement= 
generation= 401
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 816
 
time(sec)= 4152
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 120
lineSuspiciousness= 0.224
original statement= for (int i = 0 ; i < (tableau.getNumArtificialVariables()) ; i++) {
	int column = i + (tableau.getArtificialVariableOffset());
	final double entry = tableau.getEntry(row, column);
	if ((org.apache.commons.math3.util.Precision.equals(entry, 1.0, maxUlps)) && (row.equals(tableau.getBasicRow(column)))) {
		return row;
	} 
}
fixed statement= 
generation= 408
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 934
 
time(sec)= 4533
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 120
lineSuspiciousness= 0.224
original statement= for (int i = 0 ; i < (tableau.getNumArtificialVariables()) ; i++) {
	int column = i + (tableau.getArtificialVariableOffset());
	final double entry = tableau.getEntry(row, column);
	if ((org.apache.commons.math3.util.Precision.equals(entry, 1.0, maxUlps)) && (row.equals(tableau.getBasicRow(column)))) {
		return row;
	} 
}
fixed statement= 
generation= 467
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 1118
 
time(sec)= 5345
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 123
lineSuspiciousness= 0.236
original statement= if ((org.apache.commons.math3.util.Precision.equals(entry, 1.0, maxUlps)) && (row.equals(tableau.getBasicRow(column)))) {
	return row;
} 
fixed statement= 
generation= 559
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 1138
 
time(sec)= 5547
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 151
lineSuspiciousness= 0.354
original statement= return minRow
fixed statement= 
generation= 569
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 1238
 
time(sec)= 5873
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 151
lineSuspiciousness= 0.354
original statement= return minRow
fixed statement= 
generation= 619
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 1366
 
time(sec)= 6171
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 119
lineSuspiciousness= 0.224
original statement= for (java.lang.Integer row : minRatioPositions) {
	for (int i = 0 ; i < (tableau.getNumArtificialVariables()) ; i++) {
		int column = i + (tableau.getArtificialVariableOffset());
		final double entry = tableau.getEntry(row, column);
		if ((org.apache.commons.math3.util.Precision.equals(entry, 1.0, maxUlps)) && (row.equals(tableau.getBasicRow(column)))) {
			return row;
		} 
	}
}
fixed statement= 
generation= 683
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 1468
 
time(sec)= 6440
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 145
lineSuspiciousness= 0.354
original statement= minIndex = i
fixed statement= 
generation= 734
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 1694
 
time(sec)= 6893
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 123
lineSuspiciousness= 0.236
original statement= if ((org.apache.commons.math3.util.Precision.equals(entry, 1.0, maxUlps)) && (row.equals(tableau.getBasicRow(column)))) {
	return row;
} 
fixed statement= 
generation= 847
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 1698
 
time(sec)= 7079
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 119
lineSuspiciousness= 0.224
original statement= for (java.lang.Integer row : minRatioPositions) {
	for (int i = 0 ; i < (tableau.getNumArtificialVariables()) ; i++) {
		int column = i + (tableau.getArtificialVariableOffset());
		final double entry = tableau.getEntry(row, column);
		if ((org.apache.commons.math3.util.Precision.equals(entry, 1.0, maxUlps)) && (row.equals(tableau.getBasicRow(column)))) {
			return row;
		} 
	}
}
fixed statement= 
generation= 849
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:397) - Time Total(s): 8253.179


Node: graphene-10.nancy.grid5000.fr


Date: Fri Jan 20 03:34:08 CET 2017

removed classes 

zipped 

copied zip 


