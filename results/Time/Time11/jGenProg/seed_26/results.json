{
    "date": "Fri Jan 27 21:32:04 CET 2017\n\nremoved classes \n\nzipped \n\ncopied zip \n\n", 
    "gens": "208", 
    "node": "graphene-100.nancy.grid5000.fr", 
    "operations": [
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 35, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "46", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "852", 
            "type": "RemoveOp", 
            "variant": 70
        }, 
        {
            "buggyStatement": "if ((tailZone == null) && (i == (ruleSetCount - 1))) {\n\ttailZone = rs.buildTailZone(id);\n} ", 
            "generation": 135, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 371, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "46", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "1490", 
            "type": "RemoveOp", 
            "variant": 270
        }, 
        {
            "buggyStatement": "if (next <= instant) {\n\tnext = chrono.year().add(next, 1);\n\tnext = chrono.monthOfYear().set(next, iMonthOfYear);\n\tnext = setDayOfMonthNext(chrono, next);\n\tnext = setDayOfWeek(chrono, next);\n} ", 
            "generation": 141, 
            "ingredients": null, 
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 574, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "46", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "PACKAGE", 
            "time": "1638", 
            "type": "InsertAfterOp", 
            "variant": 282
        }, 
        {
            "buggyStatement": "if (tailZone != null) {\n\tif (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\t\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t\t} \n\t\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t\t} else {\n\t\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t\t}\n\t} \n} ", 
            "generation": 205, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1457, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "46", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "2238", 
            "type": "RemoveOp", 
            "variant": 410
        }, 
        {
            "buggyStatement": "getLastRuleSet().setStandardOffset(standardOffset)", 
            "generation": 208, 
            "ingredients": null, 
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 268, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "46", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "PACKAGE", 
            "time": "2365", 
            "type": "InsertBeforeOp", 
            "variant": 416
        }, 
        {
            "buggyStatement": "if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t} \n\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t} else {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t}\n} ", 
            "generation": 218, 
            "ingredients": null, 
            "patch": "if ((org.joda.time.tz.ZoneInfoCompiler.cStartOfYear) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cStartOfYear = new org.joda.time.tz.ZoneInfoCompiler.DateTimeOfYear();\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1458, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "46", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "PACKAGE", 
            "time": "2526", 
            "type": "ReplaceOp", 
            "variant": 436
        }, 
        {
            "buggyStatement": "if ((iRules.size()) == 2) {\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);\n\tif (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\t\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n\t} \n} ", 
            "generation": 225, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1141, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "46", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "2664", 
            "type": "RemoveOp", 
            "variant": 450
        }, 
        {
            "buggyStatement": "int saveMillis = 0", 
            "generation": 235, 
            "ingredients": null, 
            "patch": "iRuleSets.add(new org.joda.time.tz.DateTimeZoneBuilder.RuleSet())", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 346, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "46", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "LOCAL", 
            "time": "2949", 
            "type": "InsertBeforeOp", 
            "variant": 470
        }, 
        {
            "buggyStatement": "if ((iRules.size()) == 2) {\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);\n\tif (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\t\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n\t} \n} ", 
            "generation": 318, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1141, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "46", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "3724", 
            "type": "RemoveOp", 
            "variant": 636
        }, 
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 331, 
            "ingredients": null, 
            "patch": "if ((org.joda.time.tz.ZoneInfoCompiler.cLenientISO) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cLenientISO = org.joda.time.chrono.LenientChronology.getInstance(org.joda.time.chrono.ISOChronology.getInstanceUTC());\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "46", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "PACKAGE", 
            "time": "3915", 
            "type": "ReplaceOp", 
            "variant": 662
        }, 
        {
            "buggyStatement": "if ((tailZone == null) && (i == (ruleSetCount - 1))) {\n\ttailZone = rs.buildTailZone(id);\n} ", 
            "generation": 394, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 371, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "46", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "4256", 
            "type": "RemoveOp", 
            "variant": 788
        }, 
        {
            "buggyStatement": "tailZone = rs.buildTailZone(id)", 
            "generation": 420, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 372, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "46", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "4596", 
            "type": "RemoveOp", 
            "variant": 840
        }, 
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 468, 
            "ingredients": null, 
            "patch": "if (id == null) {\n\tthrow new java.lang.IllegalArgumentException();\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "46", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "LOCAL", 
            "time": "4915", 
            "type": "ReplaceOp", 
            "variant": 936
        }, 
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 506, 
            "ingredients": null, 
            "patch": "if (id == null) {\n\treturn null;\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "46", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "PACKAGE", 
            "time": "5149", 
            "type": "ReplaceOp", 
            "variant": 1012
        }, 
        {
            "buggyStatement": "while ((next = rs.nextTransition(millis, saveMillis)) != null) {\n\tif (addTransition(transitions, next)) {\n\t\tif (tailZone != null) {\n\t\t\tbreak;\n\t\t} \n\t} \n\tmillis = next.getMillis();\n\tsaveMillis = next.getSaveMillis();\n\tif ((tailZone == null) && (i == (ruleSetCount - 1))) {\n\t\ttailZone = rs.buildTailZone(id);\n\t} \n}", 
            "generation": 539, 
            "ingredients": null, 
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 362, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "46", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "PACKAGE", 
            "time": "5393", 
            "type": "InsertBeforeOp", 
            "variant": 1078
        }, 
        {
            "buggyStatement": "year = chrono.year().get((next + wallOffset))", 
            "generation": 543, 
            "ingredients": null, 
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 866, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "46", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "PACKAGE", 
            "time": "5524", 
            "type": "InsertBeforeOp", 
            "variant": 1086
        }, 
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 564, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "46", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "5714", 
            "type": "RemoveOp", 
            "variant": 1128
        }, 
        {
            "buggyStatement": "if ((iRules.size()) == 2) {\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);\n\tif (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\t\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n\t} \n} ", 
            "generation": 568, 
            "ingredients": null, 
            "patch": "if (id == null) {\n\tthrow new java.lang.IllegalArgumentException();\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1141, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "46", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "LOCAL", 
            "time": "5850", 
            "type": "ReplaceOp", 
            "variant": 1136
        }, 
        {
            "buggyStatement": "return iWallOffset", 
            "generation": 587, 
            "ingredients": null, 
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 914, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "46", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "PACKAGE", 
            "time": "6153", 
            "type": "InsertBeforeOp", 
            "variant": 1174
        }, 
        {
            "buggyStatement": "tailZone = rs.buildTailZone(id)", 
            "generation": 598, 
            "ingredients": null, 
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cLenientISO = org.joda.time.chrono.LenientChronology.getInstance(org.joda.time.chrono.ISOChronology.getInstanceUTC())", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 372, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "46", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "PACKAGE", 
            "time": "6304", 
            "type": "ReplaceOp", 
            "variant": 1196
        }, 
        {
            "buggyStatement": "if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t} \n\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t} else {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t}\n} ", 
            "generation": 623, 
            "ingredients": null, 
            "patch": "if (id == null) {\n\treturn null;\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1458, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "46", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "PACKAGE", 
            "time": "6524", 
            "type": "ReplaceOp", 
            "variant": 1246
        }, 
        {
            "buggyStatement": "if (next <= instant) {\n\tit.remove();\n\tcontinue;\n} ", 
            "generation": 665, 
            "ingredients": null, 
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1092, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "46", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "PACKAGE", 
            "time": "6828", 
            "type": "InsertAfterOp", 
            "variant": 1330
        }, 
        {
            "buggyStatement": "if ((iRules.size()) == 2) {\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);\n\tif (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\t\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n\t} \n} ", 
            "generation": 726, 
            "ingredients": null, 
            "patch": "if ((org.joda.time.tz.ZoneInfoCompiler.cStartOfYear) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cStartOfYear = new org.joda.time.tz.ZoneInfoCompiler.DateTimeOfYear();\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1141, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "46", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "PACKAGE", 
            "time": "7176", 
            "type": "ReplaceOp", 
            "variant": 1452
        }
    ], 
    "ops": "0", 
    "programVariant": "70", 
    "timeEvaluation": null, 
    "timeTotal": "7439"
}