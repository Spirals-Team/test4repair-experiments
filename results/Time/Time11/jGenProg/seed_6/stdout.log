seed AstorRun 6 
export PATH="/home/mmartinez/defects4j/framework/bin:$PATH";export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;export PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";cd /home/mmartinez/projects/time/time_11;defects4j compile;cp -r /home/mmartinez/projects/time/time_11 /tmp/time_11_Genprog_local_s1;cd /tmp/time_11_Genprog_local_s1;mkdir lib/;cp -r /home/mmartinez/defects4j/framework/projects/lib/* lib/;cp -r /home/mmartinez/defects4j/framework/projects/Time/lib/* lib/;find . -type f -name "package-info.java" -delete;
/home/mmartinez/defects4j-repair/src/python/core/../../../results/2016-june/Time/seed/6/package/11/Genprog/result
cd /tmp/time_11_Genprog_local_s1;export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;TZ="America/New_York"; export TZexport PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";time /home/mmartinez/jdk1.8.0_45/bin//java -Xmx4096m -cp /home/mmartinez/defects4j-repair/src/python/core/../../..//libs/astor.jar fr.inria.main.evolution.MainjGenProg -mode statement -location . -id Time -dependencies lib/ -failing org.joda.time.tz.TestCompiler: -package org.joda -jvm4testexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ -jvm4evosuitetestexecution /home/mmartinez/jdk1.8.0_45/bin/ -javacompliancelevel 5 -maxgen 1000000 -seed 6 -scope package -maxtime 120  -stopfirst false -population 1 -srcjavafolder src/main/java/ -srctestfolder src/test/java/ -binjavafolder target/classes/ -bintestfolder target/test-classes/ -flthreshold 0.1  -validation  fr.inria.astor.core.validation.validators.RegressionValidation  -ESParameters -Dassertion_timeout=1800:-Dminimization_timeout=1800:-Djunit_check_timeout=1800:-Dwrite_junit_timeout=300:-Dinitialization_timeout=300:-Dglobal_timeout=18000:-Dsearch_budget=100000:-Dstopping_condition=MaxStatements:-Dno_runtime_dependency=true:-Dsandbox=false:-Dp_reflection_on_private=0.0:-Dreflection_start_percent=1.0:-Dp_functional_mocking=0.0:-Dfunctional_mocking_percent=1.0:-mem=2000 -ignoredtestcases org.apache.commons.lang.LocaleUtilsTest  -excludeRegression  -maxgen 100000000 ;echo "

Node: `hostname`
";echo "
Date: `date`
"; find /tmp/time_11_Genprog_local_s1/outputMutation -name "*.class" -type f -delete;echo "removed classes 
"; find . -name bin  -type d -print0|xargs -0 rm -r --; zip -r -q out.zip /tmp/time_11_Genprog_local_s1/outputMutation; echo "zipped 
";cp out.zip /home/mmartinez/defects4j-repair/src/python/core/../../../results/2016-june/Time/seed/6/package/11/Genprog; echo "copied zip 
";rm -rf /tmp/time_11_Genprog_local_s1;

[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:136) - End Repair Loops: Found solution
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:137) - Solution stored at: /tmp/time_11_Genprog_local_s1/./outputMutation/AstorMain-Time//src/
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:142) - 
Number solutions:20
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 8 (SOL) , #gens: 207, #ops: 1, parent:7]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 86 (SOL) , #gens: 207, #ops: 1, parent:85]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 106 (SOL) , #gens: 208, #ops: 1, parent:105]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 124 (SOL) , #gens: 207, #ops: 1, parent:123]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 174 (SOL) , #gens: 209, #ops: 1, parent:173]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 232 (SOL) , #gens: 208, #ops: 1, parent:231]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 268 (SOL) , #gens: 207, #ops: 1, parent:267]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 320 (SOL) , #gens: 208, #ops: 1, parent:319]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 532 (SOL) , #gens: 207, #ops: 1, parent:531]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 618 (SOL) , #gens: 207, #ops: 1, parent:617]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 710 (SOL) , #gens: 208, #ops: 1, parent:709]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 818 (SOL) , #gens: 209, #ops: 1, parent:817]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 850 (SOL) , #gens: 208, #ops: 1, parent:849]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 920 (SOL) , #gens: 209, #ops: 1, parent:919]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 1048 (SOL) , #gens: 207, #ops: 1, parent:1047]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 1072 (SOL) , #gens: 207, #ops: 1, parent:1071]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 1182 (SOL) , #gens: 207, #ops: 1, parent:1181]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 1194 (SOL) , #gens: 207, #ops: 1, parent:1193]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 1228 (SOL) , #gens: 208, #ops: 1, parent:1227]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 1388 (SOL) , #gens: 207, #ops: 1, parent:1387]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:146) - 
All variants:
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:148) - f 1.0, [Variant id: 1399, #gens: 208, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:152) - 
Solution details
[INFO ] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:153) - 
 --SOLUTIONS DESCRIPTION--

 ----
ProgramVariant 8
 
time(sec)= 1214
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1457
lineSuspiciousness= 0.327
original statement= if (tailZone != null) {
	if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {
		if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
			java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
		} 
		if ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {
			tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend("-Summer") , tailZone.iEndRecurrence);
		} else {
			tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend("-Summer"));
		}
	} 
} 
fixed statement= 
generation= 4
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |true|0|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|54|[]|
 ----
ProgramVariant 86
 
time(sec)= 1538
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1458
lineSuspiciousness= 0.354
original statement= if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {
	if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
		java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
	} 
	if ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {
		tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend("-Summer") , tailZone.iEndRecurrence);
	} else {
		tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend("-Summer"));
	}
} 
fixed statement= 
generation= 43
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |true|0|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|54|[]|
 ----
ProgramVariant 106
 
time(sec)= 1671
operation: ReplaceOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1457
lineSuspiciousness= 0.327
original statement= if (tailZone != null) {
	if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {
		if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
			java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
		} 
		if ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {
			tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend("-Summer") , tailZone.iEndRecurrence);
		} else {
			tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend("-Summer"));
		}
	} 
} 
fixed statement= if ((org.joda.time.tz.ZoneInfoCompiler.cStartOfYear) == null) {
	org.joda.time.tz.ZoneInfoCompiler.cStartOfYear = new org.joda.time.tz.ZoneInfoCompiler.DateTimeOfYear();
} 
generation= 53
ingredientScope= PACKAGE
validation=
failing: |true|0|8|[]|
manual_regression: |true|0|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|54|[]|
 ----
ProgramVariant 124
 
time(sec)= 1785
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1460
lineSuspiciousness= 0.866
original statement= if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
	java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
} 
fixed statement= 
generation= 62
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |true|0|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|54|[]|
 ----
ProgramVariant 174
 
time(sec)= 1971
operation: InsertBeforeOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1458
lineSuspiciousness= 0.354
original statement= if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {
	if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
		java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
	} 
	if ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {
		tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend("-Summer") , tailZone.iEndRecurrence);
	} else {
		tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend("-Summer"));
	}
} 
fixed statement= org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)
generation= 87
ingredientScope= PACKAGE
validation=
failing: |true|0|8|[]|
manual_regression: |true|0|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|54|[]|
 ----
ProgramVariant 232
 
time(sec)= 2167
operation: ReplaceOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1460
lineSuspiciousness= 0.866
original statement= if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
	java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
} 
fixed statement= if (size == 0) {
	throw new java.lang.IllegalArgumentException();
} 
generation= 116
ingredientScope= LOCAL
validation=
failing: |true|0|8|[]|
manual_regression: |true|0|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|54|[]|
 ----
ProgramVariant 268
 
time(sec)= 2348
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1457
lineSuspiciousness= 0.327
original statement= if (tailZone != null) {
	if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {
		if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
			java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
		} 
		if ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {
			tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend("-Summer") , tailZone.iEndRecurrence);
		} else {
			tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend("-Summer"));
		}
	} 
} 
fixed statement= 
generation= 134
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |true|0|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|54|[]|
 ----
ProgramVariant 320
 
time(sec)= 2577
operation: ReplaceOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1460
lineSuspiciousness= 0.866
original statement= if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
	java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
} 
fixed statement= if ((org.joda.time.tz.ZoneInfoCompiler.cStartOfYear) == null) {
	org.joda.time.tz.ZoneInfoCompiler.cStartOfYear = new org.joda.time.tz.ZoneInfoCompiler.DateTimeOfYear();
} 
generation= 160
ingredientScope= PACKAGE
validation=
failing: |true|0|8|[]|
manual_regression: |true|0|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|54|[]|
 ----
ProgramVariant 532
 
time(sec)= 3538
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 371
lineSuspiciousness= 0.327
original statement= if ((tailZone == null) && (i == (ruleSetCount - 1))) {
	tailZone = rs.buildTailZone(id);
} 
fixed statement= 
generation= 266
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |true|0|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|54|[]|
 ----
ProgramVariant 618
 
time(sec)= 3853
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1154
lineSuspiciousness= 0.354
original statement= return new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence)
fixed statement= 
generation= 309
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |true|0|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|54|[]|
 ----
ProgramVariant 710
 
time(sec)= 4156
operation: ReplaceOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 371
lineSuspiciousness= 0.327
original statement= if ((tailZone == null) && (i == (ruleSetCount - 1))) {
	tailZone = rs.buildTailZone(id);
} 
fixed statement= if (id == null) {
	return null;
} 
generation= 355
ingredientScope= PACKAGE
validation=
failing: |true|0|8|[]|
manual_regression: |true|0|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|54|[]|
 ----
ProgramVariant 818
 
time(sec)= 4656
operation: InsertBeforeOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1101
lineSuspiciousness= 0.327
original statement= nextMillis = next
fixed statement= org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)
generation= 409
ingredientScope= PACKAGE
validation=
failing: |true|0|8|[]|
manual_regression: |true|0|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|54|[]|
 ----
ProgramVariant 850
 
time(sec)= 4813
operation: ReplaceOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 371
lineSuspiciousness= 0.327
original statement= if ((tailZone == null) && (i == (ruleSetCount - 1))) {
	tailZone = rs.buildTailZone(id);
} 
fixed statement= if ((iRuleSets.size()) == 0) {
	addCutover(java.lang.Integer.MIN_VALUE, 'w', 1, 1, 0, false, 0);
} 
generation= 425
ingredientScope= LOCAL
validation=
failing: |true|0|8|[]|
manual_regression: |true|0|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|54|[]|
 ----
ProgramVariant 920
 
time(sec)= 5052
operation: InsertBeforeOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 312
lineSuspiciousness= 0.327
original statement= org.joda.time.tz.DateTimeZoneBuilder.Recurrence recurrence = new org.joda.time.tz.DateTimeZoneBuilder.Recurrence(ofYear , nameKey , saveMillis)
fixed statement= org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)
generation= 460
ingredientScope= PACKAGE
validation=
failing: |true|0|8|[]|
manual_regression: |true|0|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|54|[]|
 ----
ProgramVariant 1048
 
time(sec)= 5471
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 372
lineSuspiciousness= 0.327
original statement= tailZone = rs.buildTailZone(id)
fixed statement= 
generation= 524
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |true|0|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|54|[]|
 ----
ProgramVariant 1072
 
time(sec)= 5608
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1458
lineSuspiciousness= 0.354
original statement= if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {
	if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
		java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
	} 
	if ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {
		tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend("-Summer") , tailZone.iEndRecurrence);
	} else {
		tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend("-Summer"));
	}
} 
fixed statement= 
generation= 536
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |true|0|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|54|[]|
 ----
ProgramVariant 1182
 
time(sec)= 5941
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 372
lineSuspiciousness= 0.327
original statement= tailZone = rs.buildTailZone(id)
fixed statement= 
generation= 591
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |true|0|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|54|[]|
 ----
ProgramVariant 1194
 
time(sec)= 6041
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1460
lineSuspiciousness= 0.866
original statement= if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
	java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
} 
fixed statement= 
generation= 597
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |true|0|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|54|[]|
 ----
ProgramVariant 1228
 
time(sec)= 6314
operation: ReplaceOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1458
lineSuspiciousness= 0.354
original statement= if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {
	if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
		java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
	} 
	if ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {
		tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend("-Summer") , tailZone.iEndRecurrence);
	} else {
		tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend("-Summer"));
	}
} 
fixed statement= if ((org.joda.time.tz.ZoneInfoCompiler.cStartOfYear) == null) {
	org.joda.time.tz.ZoneInfoCompiler.cStartOfYear = new org.joda.time.tz.ZoneInfoCompiler.DateTimeOfYear();
} 
generation= 614
ingredientScope= PACKAGE
validation=
failing: |true|0|8|[]|
manual_regression: |true|0|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|54|[]|
 ----
ProgramVariant 1388
 
time(sec)= 7231
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 372
lineSuspiciousness= 0.327
original statement= tailZone = rs.buildTailZone(id)
fixed statement= 
generation= 694
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |true|0|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|54|[]|
[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:397) - Time Total(s): 7513.12


Node: griffon-8.nancy.grid5000.fr


Date: Thu Jan 12 01:50:06 CET 2017

removed classes 

zipped 

copied zip 


