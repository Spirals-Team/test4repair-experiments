* EvoSuite 1.0.4-SNAPSHOT
* Going to generate test cases for class: org.joda.time.tz.DateTimeZoneBuilder
* Starting client
* Connecting to master process on port 19122
* Analyzing classpath: 
  - target/classes/
  - target/test-classes/
  - lib/joda-convert-1.2.jar
* Finished analyzing classpath
* Generating tests for class org.joda.time.tz.DateTimeZoneBuilder
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 690
  - Branch 461
  - Exception 0
  - MutationFactory 666
  - Output 17
  - Method 54
  - MethodNoException 54
  - CBranchFitnessFactory 461

[Progress:>                             0%] [Cov:>                                  0%]* Using seed 104
* Starting evolution

[Progress:>                             0%] [Cov:>                                  1%]
[Progress:>                             0%] [Cov:=>                                 3%]
[Progress:>                             0%] [Cov:=====>                             15%]
[Progress:>                             0%] [Cov:=====>                             16%]
[Progress:>                             0%] [Cov:=====>                             17%]
[Progress:>                             0%] [Cov:======>                            18%]
[Progress:>                             0%] [Cov:======>                            19%]
[Progress:>                             0%] [Cov:=======>                           20%]
[Progress:>                             0%] [Cov:=======>                           21%]
[Progress:>                             0%] [Cov:=======>                           22%]
[Progress:>                             0%] [Cov:========>                          23%]
[Progress:>                             0%] [Cov:========>                          24%]
[Progress:>                             0%] [Cov:========>                          25%]
[Progress:>                             0%] [Cov:========>                          23%]
[Progress:>                             0%] [Cov:========>                          24%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       33%]
[Progress:>                             0%] [Cov:===========>                       33%]
[Progress:>                             0%] [Cov:===========>                       33%]
[Progress:>                             0%] [Cov:===========>                       33%]
[Progress:>                             0%] [Cov:===========>                       33%]
[Progress:>                             0%] [Cov:===========>                       33%]
[Progress:>                             0%] [Cov:===========>                       33%]
[Progress:>                             0%] [Cov:===========>                       33%]
[Progress:>                             0%] [Cov:===========>                       33%]
[Progress:>                             0%] [Cov:===========>                       33%]
[Progress:>                             0%] [Cov:===========>                       33%]
[Progress:>                             0%] [Cov:===========>                       33%]
[Progress:>                             0%] [Cov:===========>                       33%]
[Progress:>                             0%] [Cov:===========>                       33%]
[Progress:>                             0%] [Cov:===========>                       33%]
[Progress:>                             0%] [Cov:===========>                       33%]
[Progress:>                             0%] [Cov:===========>                       33%]
[Progress:>                             0%] [Cov:===========>                       33%]
[Progress:>                             0%] [Cov:===========>                       33%]
[Progress:>                             0%] [Cov:===========>                       34%]
[Progress:>                             0%] [Cov:===========>                       34%]
[Progress:>                             0%] [Cov:===========>                       34%]
[Progress:>                             0%] [Cov:===========>                       34%]
[Progress:>                             0%] [Cov:===========>                       34%]
[Progress:>                             0%] [Cov:============>                      35%]
[Progress:>                             0%] [Cov:============>                      35%]
[Progress:>                             0%] [Cov:============>                      35%]
[Progress:>                             0%] [Cov:============>                      35%]
[Progress:>                             0%] [Cov:============>                      35%]
[Progress:>                             0%] [Cov:============>                      35%]
[Progress:>                             0%] [Cov:============>                      35%]
[Progress:>                             0%] [Cov:============>                      36%]
[Progress:>                             0%] [Cov:============>                      37%]
[Progress:>                             0%] [Cov:============>                      37%]
[Progress:>                             0%] [Cov:============>                      37%]
[Progress:>                             0%] [Cov:============>                      37%]
[Progress:>                             0%] [Cov:============>                      37%]
[Progress:>                             0%] [Cov:============>                      37%]
[Progress:>                             0%] [Cov:============>                      37%]
[Progress:>                             0%] [Cov:============>                      37%]
[Progress:>                             0%] [Cov:============>                      37%]
[Progress:>                             0%] [Cov:============>                      37%]
[Progress:>                             0%] [Cov:============>                      37%]
[Progress:>                             0%] [Cov:============>                      37%]
[Progress:>                             0%] [Cov:============>                      37%]
[Progress:>                             0%] [Cov:============>                      37%]
[Progress:>                             0%] [Cov:============>                      37%]
[Progress:>                             0%] [Cov:============>                      37%]
[Progress:>                             0%] [Cov:=============>                     38%]
[Progress:>                             0%] [Cov:=============>                     38%]
[Progress:>                             0%] [Cov:=============>                     38%]
[Progress:>                             0%] [Cov:=============>                     38%]
[Progress:>                             0%] [Cov:=============>                     39%]
[Progress:>                             0%] [Cov:==============>                    40%]
[Progress:>                             0%] [Cov:==============>                    40%]
[Progress:>                             0%] [Cov:==============>                    40%]
[Progress:>                             0%] [Cov:==============>                    40%]
[Progress:>                             0%] [Cov:==============>                    40%]
[Progress:>                             1%] [Cov:==============>                    40%]
[Progress:>                             1%] [Cov:==============>                    40%]
[Progress:>                             1%] [Cov:==============>                    40%]
[Progress:>                             1%] [Cov:==============>                    40%]
[Progress:>                             1%] [Cov:==============>                    40%]
[Progress:>                             1%] [Cov:==============>                    40%]
[Progress:>                             1%] [Cov:==============>                    40%]
[Progress:>                             1%] [Cov:==============>                    40%]
[Progress:>                             1%] [Cov:==============>                    40%]
[Progress:>                             1%] [Cov:==============>                    40%]
[Progress:>                             1%] [Cov:==============>                    40%]
[Progress:>                             1%] [Cov:==============>                    40%]
[Progress:>                             1%] [Cov:==============>                    40%]
[Progress:>                             1%] [Cov:==============>                    40%]
[Progress:>                             1%] [Cov:==============>                    40%]
[Progress:>                             1%] [Cov:==============>                    40%]
[Progress:>                             1%] [Cov:==============>                    40%]
[Progress:>                             1%] [Cov:==============>                    40%]
[Progress:>                             1%] [Cov:==============>                    40%]
[Progress:>                             1%] [Cov:==============>                    40%]
[Progress:>                             1%] [Cov:==============>                    40%]
[Progress:>                             1%] [Cov:==============>                    41%]
[Progress:>                             1%] [Cov:==============>                    41%]
[Progress:>                             1%] [Cov:==============>                    41%]
[Progress:>                             1%] [Cov:==============>                    42%]
[Progress:>                             1%] [Cov:==============>                    42%]
[Progress:>                             1%] [Cov:==============>                    42%]
[Progress:>                             1%] [Cov:==============>                    42%]
[Progress:>                             1%] [Cov:==============>                    42%]
[Progress:>                             1%] [Cov:==============>                    42%]
[Progress:>                             1%] [Cov:==============>                    42%]
[Progress:>                             1%] [Cov:==============>                    42%]
[Progress:>                             1%] [Cov:==============>                    42%]
[Progress:>                             1%] [Cov:==============>                    42%]
[Progress:>                             1%] [Cov:==============>                    42%]
[Progress:>                             1%] [Cov:==============>                    42%]
[Progress:>                             1%] [Cov:==============>                    42%]
[Progress:>                             1%] [Cov:==============>                    42%]
[Progress:>                             1%] [Cov:==============>                    42%]
[Progress:>                             1%] [Cov:==============>                    42%]
[Progress:>                             1%] [Cov:==============>                    42%]
[Progress:>                             2%] [Cov:==============>                    42%]
[Progress:>                             2%] [Cov:==============>                    42%]
[Progress:>                             2%] [Cov:==============>                    42%]
[Progress:>                             2%] [Cov:===============>                   43%]
[Progress:>                             2%] [Cov:===============>                   43%]
[Progress:>                             2%] [Cov:===============>                   43%]
[Progress:>                             2%] [Cov:===============>                   43%]
[Progress:>                             2%] [Cov:===============>                   43%]
[Progress:>                             2%] [Cov:===============>                   43%]
[Progress:>                             2%] [Cov:===============>                   45%]
[Progress:>                             2%] [Cov:================>                  46%]
[Progress:>                             2%] [Cov:=================>                 49%]
[Progress:>                             2%] [Cov:=================>                 50%]
[Progress:>                             2%] [Cov:=================>                 50%]
[Progress:>                             2%] [Cov:=================>                 51%]
[Progress:>                             2%] [Cov:=================>                 51%]
[Progress:>                             2%] [Cov:=================>                 51%]
[Progress:>                             2%] [Cov:=================>                 51%]
[Progress:>                             2%] [Cov:=================>                 51%]
[Progress:>                             2%] [Cov:=================>                 51%]
[Progress:>                             2%] [Cov:=================>                 51%]
[Progress:>                             2%] [Cov:=================>                 51%]
[Progress:>                             2%] [Cov:=================>                 51%]
[Progress:>                             2%] [Cov:=================>                 51%]
[Progress:>                             2%] [Cov:=================>                 51%]
[Progress:>                             2%] [Cov:=================>                 51%]
[Progress:>                             2%] [Cov:=================>                 51%]
[Progress:>                             2%] [Cov:=================>                 51%]
[Progress:>                             2%] [Cov:==================>                52%]
[Progress:>                             2%] [Cov:==================>                52%]
[Progress:>                             2%] [Cov:==================>                52%]
[Progress:>                             2%] [Cov:==================>                52%]
[Progress:>                             2%] [Cov:==================>                52%]
[Progress:>                             2%] [Cov:==================>                52%]
[Progress:>                             2%] [Cov:==================>                52%]
[Progress:>                             2%] [Cov:==================>                52%]
[Progress:>                             2%] [Cov:==================>                52%]
[Progress:>                             2%] [Cov:==================>                52%]
[Progress:>                             2%] [Cov:==================>                52%]
[Progress:>                             2%] [Cov:==================>                52%]
[Progress:>                             2%] [Cov:==================>                52%]
[Progress:>                             2%] [Cov:==================>                52%]
[Progress:>                             2%] [Cov:==================>                52%]
[Progress:>                             2%] [Cov:==================>                52%]
[Progress:>                             2%] [Cov:==================>                52%]
[Progress:>                             2%] [Cov:==================>                52%]
[Progress:>                             2%] [Cov:==================>                52%]
[Progress:>                             3%] [Cov:==================>                52%]
[Progress:>                             3%] [Cov:==================>                52%]
[Progress:>                             3%] [Cov:==================>                52%]
[Progress:>                             3%] [Cov:==================>                52%]
[Progress:>                             3%] [Cov:==================>                52%]
[Progress:>                             3%] [Cov:==================>                52%]
[Progress:>                             3%] [Cov:==================>                52%]
[Progress:>                             3%] [Cov:==================>                52%]
[Progress:>                             3%] [Cov:==================>                52%]
[Progress:>                             3%] [Cov:==================>                52%]
[Progress:>                             3%] [Cov:==================>                52%]
[Progress:>                             3%] [Cov:==================>                52%]
[Progress:>                             3%] [Cov:==================>                52%]
[Progress:>                             3%] [Cov:==================>                52%]
[Progress:>                             3%] [Cov:==================>                52%]
[Progress:>                             3%] [Cov:==================>                52%]
[Progress:>                             3%] [Cov:==================>                52%]
[Progress:>                             3%] [Cov:==================>                52%]
[Progress:>                             3%] [Cov:==================>                52%]
[Progress:>                             3%] [Cov:==================>                52%]
[Progress:>                             3%] [Cov:==================>                52%]
[Progress:>                             3%] [Cov:==================>                52%]
[Progress:>                             3%] [Cov:==================>                52%]
[Progress:>                             3%] [Cov:==================>                53%]
[Progress:>                             3%] [Cov:==================>                53%]
[Progress:>                             3%] [Cov:==================>                53%]
[Progress:>                             3%] [Cov:==================>                53%]
[Progress:>                             3%] [Cov:==================>                53%]
[Progress:>                             3%] [Cov:==================>                53%]
[Progress:>                             3%] [Cov:==================>                53%]
[Progress:>                             3%] [Cov:==================>                53%]
[Progress:>                             3%] [Cov:==================>                53%]
[Progress:>                             3%] [Cov:==================>                53%]
[Progress:>                             3%] [Cov:==================>                53%]
[Progress:>                             3%] [Cov:==================>                53%]
[Progress:>                             3%] [Cov:==================>                53%]
[Progress:>                             3%] [Cov:==================>                53%]
[Progress:>                             3%] [Cov:==================>                53%]
[Progress:>                             3%] [Cov:==================>                53%]
[Progress:>                             3%] [Cov:==================>                53%]
[Progress:>                             3%] [Cov:==================>                53%][MASTER] 20:00:14.986 [logback-1] WARN  TimeController - Operation 'update from archive' took too long: 25349ms

* Search finished after 713s and 173 generations, 100762 statements, best individual has fitness: 2954.528922044149
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 76%
* Total number of goals: 690
* Number of covered goals: 523
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 62%
* Total number of goals: 461
* Number of covered goals: 286
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 86%
* Total number of goals: 29
* Number of covered goals: 25
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 61%
* Total number of goals: 666
* Number of covered goals: 408
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 41%
* Total number of goals: 17
* Number of covered goals: 7
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 22%
* Total number of goals: 54
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 20%
* Total number of goals: 54
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 44%
* Total number of goals: 461
* Number of covered goals: 201
* Generated 56 tests with total length 193
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 12%
* Compiling and checking tests
[MASTER] 20:12:55.712 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:12:57.233 [logback-2] ERROR JUnitAnalyzer - 1 test cases failed
[MASTER] 20:12:57.236 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1552)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:115)
org.joda.time.tz.DateTimeZoneBuilder_64_tmp__ESTest.test0(DateTimeZoneBuilder_64_tmp__ESTest.java:26)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:745)

[MASTER] 20:12:57.236 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileDescriptor fileDescriptor0 = new FileDescriptor();
MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) mockFileOutputStream0);
DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) bufferedOutputStream0);
DateTimeZoneBuilder.writeMillis(dataOutputStream0, 2962118941200000L);

[MASTER] 20:12:59.121 [logback-2] ERROR JUnitAnalyzer - 1 test cases failed
[MASTER] 20:12:59.121 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone cannot be cast to org.joda.time.tz.FixedDateTimeZone
[MASTER] 20:12:59.122 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeZoneBuilder dateTimeZoneBuilder0 = new DateTimeZoneBuilder();
dateTimeZoneBuilder0.addRecurringSavings("org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone", (-7), (-2203), 4175, 's', 9, (-2203), (-1), true, (-780));
FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone)dateTimeZoneBuilder0.toDateTimeZone("org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone", true);
assertEquals("org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone", fixedDateTimeZone0.toString());


[MASTER] 20:13:03.825 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:13:04.584 [logback-2] ERROR JUnitAnalyzer - 1 test cases failed
[MASTER] 20:13:04.584 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1552)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:115)
org.joda.time.tz.DateTimeZoneBuilder_96_tmp__ESTest.test0(DateTimeZoneBuilder_96_tmp__ESTest.java:27)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:745)

[MASTER] 20:13:04.584 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileDescriptor fileDescriptor0 = new FileDescriptor();
MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) mockFileOutputStream0);
DateTimeZoneBuilder.writeMillis(dataOutputStream0, (-2091L));

[MASTER] 20:13:04.703 [logback-2] ERROR JUnitAnalyzer - 1 test cases failed
[MASTER] 20:13:04.703 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1552)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:115)
org.joda.time.tz.DateTimeZoneBuilder_98_tmp__ESTest.test0(DateTimeZoneBuilder_98_tmp__ESTest.java:29)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:745)

[MASTER] 20:13:04.703 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeZoneBuilder dateTimeZoneBuilder0 = new DateTimeZoneBuilder();
FileDescriptor fileDescriptor0 = new FileDescriptor();
MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) mockFileOutputStream0);
dateTimeZoneBuilder0.writeTo("org.joda.time.format.PeriodFormatterBuilder", (DataOutput) dataOutputStream0);

[MASTER] 20:13:05.233 [logback-2] ERROR JUnitAnalyzer - 1 test cases failed
[MASTER] 20:13:05.233 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1552)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:115)
org.joda.time.tz.DateTimeZoneBuilder_106_tmp__ESTest.test0(DateTimeZoneBuilder_106_tmp__ESTest.java:28)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:745)

[MASTER] 20:13:05.233 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeZoneBuilder dateTimeZoneBuilder0 = new DateTimeZoneBuilder();
FileDescriptor fileDescriptor0 = new FileDescriptor();
MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) mockFileOutputStream0);
DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) bufferedOutputStream0);
dateTimeZoneBuilder0.writeTo("", (DataOutput) dataOutputStream0);

[MASTER] 20:13:12.211 [logback-2] ERROR JUnitAnalyzer - 3 test cases failed
[MASTER] 20:13:12.211 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test07 -> class java.io.IOException: Simulated IOException
[MASTER] 20:13:12.212 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeZoneBuilder dateTimeZoneBuilder0 = new DateTimeZoneBuilder();
dateTimeZoneBuilder0.addRecurringSavings("org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone", (-7), (-2203), 4175, 's', 9, (-2203), (-1), true, (-780));
MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone", false);
DateTimeZoneBuilder dateTimeZoneBuilder1 = dateTimeZoneBuilder0.setStandardOffset((-780));
dateTimeZoneBuilder0.writeTo("org.joda.time.tz.DateTimeZoneBuilder$DSTZone", (OutputStream) mockFileOutputStream0);
assertSame(dateTimeZoneBuilder0, dateTimeZoneBuilder1);


[MASTER] 20:13:12.212 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test49 -> class java.io.IOException: Simulated IOException
[MASTER] 20:13:12.212 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeZoneBuilder dateTimeZoneBuilder0 = new DateTimeZoneBuilder();
DateTimeZoneBuilder dateTimeZoneBuilder1 = dateTimeZoneBuilder0.addRecurringSavings("org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone", 1708, (-2203), 61, 's', 9, (-2203), (-1), false, (-780));
MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone", false);
dateTimeZoneBuilder0.writeTo("org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone", (OutputStream) mockFileOutputStream0);
assertSame(dateTimeZoneBuilder0, dateTimeZoneBuilder1);


[MASTER] 20:13:12.212 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test20 -> class java.io.IOException: Simulated IOException
[MASTER] 20:13:12.212 [logback-1] WARN  JUnitAnalyzer - Failing test:
 CachedDateTimeZone cachedDateTimeZone0 = (CachedDateTimeZone)DateTimeZone.getDefault();
String string0 = cachedDateTimeZone0.getName(2120L, (Locale) null);
assertEquals("+01:00", string0);


[MASTER] 20:13:18.017 [logback-2] ERROR JUnitAnalyzer - 2 test cases failed
[MASTER] 20:13:18.017 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test09 -> class java.io.IOException: Simulated IOException
[MASTER] 20:13:18.018 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeZoneBuilder dateTimeZoneBuilder0 = new DateTimeZoneBuilder();
dateTimeZoneBuilder0.addRecurringSavings("org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone", 0, (-2203), 4175, 's', (-8), (-2203), (-1), true, (-780));
MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("ir'mEuGX:oc0u]Z");
ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) mockFileOutputStream0);
dateTimeZoneBuilder0.writeTo("Fixing duplicate recurrent name key - ", (DataOutput) objectOutputStream0);

[MASTER] 20:13:18.018 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test28 -> class java.io.IOException: Simulated IOException
[MASTER] 20:13:18.018 [logback-1] WARN  JUnitAnalyzer - Failing test:
 CachedDateTimeZone cachedDateTimeZone0 = (CachedDateTimeZone)DateTimeZone.getDefault();
String string0 = cachedDateTimeZone0.getNameKey(10638633992192L);
assertEquals("CET", string0);


* Writing JUnit test case 'DateTimeZoneBuilder_ESTest' to /home/spirals/zhyu/issta-third/program-set20/evosuite-repair-new/nopol/nopol/src/main/java/fr/inria/lille/spirals/evo/results/2016-December/Time/11/Nopol/104/generatedTests
* Done!

* Computation finished
