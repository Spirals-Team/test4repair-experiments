/**
 * This file was automatically generated by EvoSuite
 * Sun Jan 29 13:33:37 GMT 2017
 */


package org.apache.commons.math.analysis.solvers;

import org.junit.Assert;
import org.evosuite.runtime.EvoAssertions;
import org.apache.commons.math.analysis.Expm1Function;
import org.apache.commons.math.analysis.MonitoredFunction;
import org.apache.commons.math.analysis.QuinticFunction;
import org.apache.commons.math.analysis.SinFunction;
import org.junit.Test;
import org.apache.commons.math.analysis.UnivariateRealFunction;

public class UnivariateRealSolverUtils_ESTest extends UnivariateRealSolverUtils_ESTest_scaffolding {
    @Test(timeout = 4000)
    public void test00() throws Throwable {
        SinFunction sinFunction0 = new SinFunction();
        MonitoredFunction monitoredFunction0 = new MonitoredFunction(((UnivariateRealFunction) (sinFunction0)));
        double[] doubleArray0 = UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (monitoredFunction0)), Double.NaN, Double.NaN, (-2035.862716));
        Assert.assertArrayEquals(new double[]{ Double.NaN , Double.NaN }, doubleArray0, 0.01);
    }

    @Test(timeout = 4000)
    public void test01() throws Throwable {
        SinFunction sinFunction0 = new SinFunction();
        // Undeclared exception!
        try {
            UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (sinFunction0)), Double.NaN, 0.5, (-1.0), 6);
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // invalid bracketing parameters:  lower bound=0.5,  initial=\uFFFD, upper bound=-1
            // 
            EvoAssertions.verifyException("org.apache.commons.math.MathRuntimeException", e);
        }
    }

    @Test(timeout = 4000)
    public void test02() throws Throwable {
        Expm1Function expm1Function0 = new Expm1Function();
        // Undeclared exception!
        try {
            UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (expm1Function0)), ((double) (0)), ((double) (0)), ((double) (0)), 0);
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // bad value for maximum iterations number: 0
            // 
            EvoAssertions.verifyException("org.apache.commons.math.MathRuntimeException", e);
        }
    }

    @Test(timeout = 4000)
    public void test03() throws Throwable {
        QuinticFunction quinticFunction0 = new QuinticFunction();
        double double0 = UnivariateRealSolverUtils.solve(((UnivariateRealFunction) (quinticFunction0)), (-3298.708191593), 2563.13687419414, 2563.13687419414);
        Assert.assertEquals(0.0, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test04() throws Throwable {
        QuinticFunction quinticFunction0 = new QuinticFunction();
        double double0 = UnivariateRealSolverUtils.solve(((UnivariateRealFunction) (quinticFunction0)), (-647.96882), (-1.0), 726.4746547615488);
        Assert.assertEquals((-1.0), double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test05() throws Throwable {
        QuinticFunction quinticFunction0 = new QuinticFunction();
        double double0 = UnivariateRealSolverUtils.solve(((UnivariateRealFunction) (quinticFunction0)), 0.0, 1.0);
        Assert.assertEquals(0.0, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test06() throws Throwable {
        QuinticFunction quinticFunction0 = new QuinticFunction();
        MonitoredFunction monitoredFunction0 = new MonitoredFunction(((UnivariateRealFunction) (quinticFunction0)));
        double double0 = UnivariateRealSolverUtils.solve(((UnivariateRealFunction) (monitoredFunction0)), (-2030.685), 1.0);
        Assert.assertEquals(1.0, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test07() throws Throwable {
        double double0 = UnivariateRealSolverUtils.midpoint(0.0, 0.0);
        Assert.assertEquals(0.0, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test08() throws Throwable {
        double double0 = UnivariateRealSolverUtils.midpoint((-1.0), 4014.4288775715745);
        Assert.assertEquals(2006.7144387857873, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test09() throws Throwable {
        SinFunction sinFunction0 = new SinFunction();
        double[] doubleArray0 = UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (sinFunction0)), (-41.35853959), (-41.35853959), 0.5);
        Assert.assertArrayEquals(new double[]{ -41.35853959 , -40.35853959 }, doubleArray0, 0.01);
    }

    @Test(timeout = 4000)
    public void test10() throws Throwable {
        QuinticFunction quinticFunction0 = new QuinticFunction();
        // Undeclared exception!
        try {
            UnivariateRealSolverUtils.solve(((UnivariateRealFunction) (quinticFunction0)), (-430.9056054618521), (-430.9056054618521));
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // endpoints do not specify an interval: [-430.906, -430.906]
            // 
            EvoAssertions.verifyException("org.apache.commons.math.MathRuntimeException", e);
        }
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        MonitoredFunction monitoredFunction0 = new MonitoredFunction(((UnivariateRealFunction) (null)));
        // Undeclared exception!
        try {
            UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (monitoredFunction0)), (-1.0), (-1515.2332700298), (-1.0), 8);
            Assert.fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            // 
            // no message in exception (getMessage() returned null)
            // 
        }
    }

    @Test(timeout = 4000)
    public void test13() throws Throwable {
        SinFunction sinFunction0 = new SinFunction();
        // Undeclared exception!
        try {
            UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (sinFunction0)), 1011.21956, 468.96713106536, (-568.0), 2677);
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // invalid bracketing parameters:  lower bound=468.967,  initial=1,011.22, upper bound=-568
            // 
            EvoAssertions.verifyException("org.apache.commons.math.MathRuntimeException", e);
        }
    }

    @Test(timeout = 4000)
    public void test14() throws Throwable {
        // Undeclared exception!
        try {
            UnivariateRealSolverUtils.solve(((UnivariateRealFunction) (null)), 846.0472458235859, 846.0472458235859, 846.0472458235859);
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // function is null
            // 
            EvoAssertions.verifyException("org.apache.commons.math.MathRuntimeException", e);
        }
    }

    @Test(timeout = 4000)
    public void test15() throws Throwable {
        Expm1Function expm1Function0 = new Expm1Function();
        MonitoredFunction monitoredFunction0 = new MonitoredFunction(((UnivariateRealFunction) (expm1Function0)));
        try {
            UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (monitoredFunction0)), (-1.0), (-1515.2332700298), (-1.0), 2882);
            Assert.fail("Expecting exception: Exception");
        } catch (Exception e) {
            // 
            // number of iterations=1,515, maximum iterations=2,882, initial=-1, lower bound=-1,515.233, upper bound=-1, final a value=-1,515.233, final b value=-1, f(a)=-1, f(b)=-0.632
            // 
            EvoAssertions.verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test16() throws Throwable {
        Expm1Function expm1Function0 = new Expm1Function();
        MonitoredFunction monitoredFunction0 = new MonitoredFunction(((UnivariateRealFunction) (expm1Function0)));
        try {
            UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (monitoredFunction0)), (-1.0), (-1550.6675894231103), (-1.0), 13);
            Assert.fail("Expecting exception: Exception");
        } catch (Exception e) {
            // 
            // number of iterations=13, maximum iterations=13, initial=-1, lower bound=-1,550.668, upper bound=-1, final a value=-14, final b value=-1, f(a)=-1, f(b)=-0.632
            // 
            EvoAssertions.verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test17() throws Throwable {
        QuinticFunction quinticFunction0 = new QuinticFunction();
        double[] doubleArray0 = UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (quinticFunction0)), (-1053.7172804), (-1053.7172804), 0.25, 1968286330);
        Assert.assertArrayEquals(new double[]{ -1053.7172804 , -0.717280399999936 }, doubleArray0, 0.01);
    }

    @Test(timeout = 4000)
    public void test18() throws Throwable {
        SinFunction sinFunction0 = new SinFunction();
        // Undeclared exception!
        try {
            UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (sinFunction0)), Double.NaN, 1095.45790664, 1095.45790664, 9);
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // invalid bracketing parameters:  lower bound=1,095.458,  initial=\uFFFD, upper bound=1,095.458
            // 
            EvoAssertions.verifyException("org.apache.commons.math.MathRuntimeException", e);
        }
    }

    @Test(timeout = 4000)
    public void test19() throws Throwable {
        QuinticFunction quinticFunction0 = new QuinticFunction();
        // Undeclared exception!
        try {
            UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (quinticFunction0)), 2641.9254502, (-647.96882), (-1.0));
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // invalid bracketing parameters:  lower bound=-647.969,  initial=2,641.925, upper bound=-1
            // 
            EvoAssertions.verifyException("org.apache.commons.math.MathRuntimeException", e);
        }
    }

    @Test(timeout = 4000)
    public void test20() throws Throwable {
        SinFunction sinFunction0 = new SinFunction();
        // Undeclared exception!
        try {
            UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (sinFunction0)), (-2035.862716), 2196.3, Double.NaN, 2335);
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // invalid bracketing parameters:  lower bound=2,196.3,  initial=-2,035.863, upper bound=\uFFFD
            // 
            EvoAssertions.verifyException("org.apache.commons.math.MathRuntimeException", e);
        }
    }

    @Test(timeout = 4000)
    public void test21() throws Throwable {
        Expm1Function expm1Function0 = new Expm1Function();
        // Undeclared exception!
        try {
            UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (expm1Function0)), (-666.3590450283549), (-666.3590450283549), (-666.3590450283549), (-46));
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // bad value for maximum iterations number: -46
            // 
            EvoAssertions.verifyException("org.apache.commons.math.MathRuntimeException", e);
        }
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        // Undeclared exception!
        try {
            UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (null)), (-5908.0), (-5908.0), 0.0, 632);
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // function is null
            // 
            EvoAssertions.verifyException("org.apache.commons.math.MathRuntimeException", e);
        }
    }

    @Test(timeout = 4000)
    public void test23() throws Throwable {
        SinFunction sinFunction0 = new SinFunction();
        double double0 = UnivariateRealSolverUtils.solve(((UnivariateRealFunction) (sinFunction0)), Double.NaN, 1095.45790664, 1095.45790664);
        Assert.assertEquals(1095.45790664, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test24() throws Throwable {
        double double0 = UnivariateRealSolverUtils.midpoint((-1.0), (-1.0));
        Assert.assertEquals((-1.0), double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test25() throws Throwable {
        SinFunction sinFunction0 = new SinFunction();
        double double0 = UnivariateRealSolverUtils.solve(((UnivariateRealFunction) (sinFunction0)), (-5891.161451121), (-1339.34));
        Assert.assertEquals((-4495.6190873142905), double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test26() throws Throwable {
        MonitoredFunction monitoredFunction0 = new MonitoredFunction(((UnivariateRealFunction) (null)));
        // Undeclared exception!
        try {
            UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (monitoredFunction0)), (-854.554675), (-2006.4820207), (-2.0));
            Assert.fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            // 
            // no message in exception (getMessage() returned null)
            // 
        }
    }

    @Test(timeout = 4000)
    public void test12() throws Throwable {
        Expm1Function expm1Function0 = new Expm1Function();
        UnivariateRealFunction univariateRealFunction0 = expm1Function0.derivative();
        {
            UnivariateRealSolverUtils.bracket(univariateRealFunction0, (-4187.96899056633), (-4187.96899056633), 1811.0);
        }
    }
}

