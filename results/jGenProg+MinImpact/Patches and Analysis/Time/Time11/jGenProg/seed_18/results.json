{
    "date": "Thu Jan 19 01:38:51 CET 2017\n\nremoved classes \n\nzipped \n\ncopied zip \n\n\n",
    "node": "grisou-11.nancy.grid5000.fr",
    "patches": [
        {
            "buggyStatement": "return java.lang.Long.MAX_VALUE",
            "generation": 7,
            "ingredients": null,
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1132
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "PACKAGE",
            "time": "528",
            "type": "InsertBeforeOp",
            "variant": 14
        },
        {
            "buggyStatement": "if (tailZone != null) {\n\tif (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\t\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t\t} \n\t\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t\t} else {\n\t\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t\t}\n\t} \n} ",
            "generation": 8,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1457
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "600",
            "type": "RemoveOp",
            "variant": 16
        },
        {
            "buggyStatement": "tailZone = rs.buildTailZone(id)",
            "generation": 42,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 372
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "785",
            "type": "RemoveOp",
            "variant": 84
        },
        {
            "buggyStatement": "if ((tailZone == null) && (i == (ruleSetCount - 1))) {\n\ttailZone = rs.buildTailZone(id);\n} ",
            "generation": 75,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 371
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "961",
            "type": "RemoveOp",
            "variant": 150
        },
        {
            "buggyStatement": "offsetForLast = transitions.get((size - 2)).getWallOffset()",
            "generation": 132,
            "ingredients": null,
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 419
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "PACKAGE",
            "time": "1312",
            "type": "InsertAfterOp",
            "variant": 264
        },
        {
            "buggyStatement": "tailZone = rs.buildTailZone(id)",
            "generation": 164,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 372
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "1474",
            "type": "RemoveOp",
            "variant": 328
        },
        {
            "buggyStatement": "if (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n} ",
            "generation": 178,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1144
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "1578",
            "type": "RemoveOp",
            "variant": 356
        },
        {
            "buggyStatement": "if ((tailZone == null) && (i == (ruleSetCount - 1))) {\n\ttailZone = rs.buildTailZone(id);\n} ",
            "generation": 213,
            "ingredients": null,
            "patch": "if (tailZone != null) {\n\treturn tailZone;\n} ",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 371
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "LOCAL",
            "time": "1764",
            "type": "ReplaceOp",
            "variant": 426
        },
        {
            "buggyStatement": "if ((tailZone == null) && (i == (ruleSetCount - 1))) {\n\ttailZone = rs.buildTailZone(id);\n} ",
            "generation": 235,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 371
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "1884",
            "type": "RemoveOp",
            "variant": 470
        },
        {
            "buggyStatement": "java.lang.String[] nameKeys = new java.lang.String[size]",
            "generation": 241,
            "ingredients": null,
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1397
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "PACKAGE",
            "time": "1970",
            "type": "InsertAfterOp",
            "variant": 482
        },
        {
            "buggyStatement": "if ((iRules.size()) == 2) {\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);\n\tif (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\t\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n\t} \n} ",
            "generation": 246,
            "ingredients": null,
            "patch": "if ((org.joda.time.tz.ZoneInfoCompiler.cStartOfYear) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cStartOfYear = new org.joda.time.tz.ZoneInfoCompiler.DateTimeOfYear();\n} ",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1141
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "PACKAGE",
            "time": "2058",
            "type": "ReplaceOp",
            "variant": 492
        },
        {
            "buggyStatement": "long next = iRecurrence.next(testInstant, standardOffset, saveMillis)",
            "generation": 296,
            "ingredients": null,
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 863
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "PACKAGE",
            "time": "2681",
            "type": "InsertAfterOp",
            "variant": 592
        },
        {
            "buggyStatement": "return iWallOffset",
            "generation": 313,
            "ingredients": null,
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 914
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "PACKAGE",
            "time": "2796",
            "type": "InsertBeforeOp",
            "variant": 626
        },
        {
            "buggyStatement": "if ((tailZone == null) && (i == (ruleSetCount - 1))) {\n\ttailZone = rs.buildTailZone(id);\n} ",
            "generation": 352,
            "ingredients": null,
            "patch": "if (addTransition(transitions, next)) {\n\tif (tailZone != null) {\n\t\tbreak;\n\t} \n} ",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 371
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "LOCAL",
            "time": "2957",
            "type": "ReplaceOp",
            "variant": 704
        },
        {
            "buggyStatement": "if ((iRules.size()) == 2) {\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);\n\tif (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\t\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n\t} \n} ",
            "generation": 424,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1141
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "3332",
            "type": "RemoveOp",
            "variant": 848
        },
        {
            "buggyStatement": "if (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n} ",
            "generation": 435,
            "ingredients": null,
            "patch": "if ((org.joda.time.tz.ZoneInfoCompiler.cLenientISO) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cLenientISO = org.joda.time.chrono.LenientChronology.getInstance(org.joda.time.chrono.ISOChronology.getInstanceUTC());\n} ",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1144
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "PACKAGE",
            "time": "3435",
            "type": "ReplaceOp",
            "variant": 870
        },
        {
            "buggyStatement": "if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t} \n\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t} else {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t}\n} ",
            "generation": 498,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1458
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "3807",
            "type": "RemoveOp",
            "variant": 996
        },
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ",
            "generation": 506,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1460
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "3901",
            "type": "RemoveOp",
            "variant": 1012
        },
        {
            "buggyStatement": "if ((tailZone == null) && (i == (ruleSetCount - 1))) {\n\ttailZone = rs.buildTailZone(id);\n} ",
            "generation": 509,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 371
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "4001",
            "type": "RemoveOp",
            "variant": 1018
        },
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ",
            "generation": 569,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1460
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "4344",
            "type": "RemoveOp",
            "variant": 1138
        },
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ",
            "generation": 599,
            "ingredients": null,
            "patch": "if (size == 0) {\n\tthrow new java.lang.IllegalArgumentException();\n} ",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1460
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "LOCAL",
            "time": "4502",
            "type": "ReplaceOp",
            "variant": 1198
        },
        {
            "buggyStatement": "return new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence)",
            "generation": 691,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1154
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "5008",
            "type": "RemoveOp",
            "variant": 1382
        },
        {
            "buggyStatement": "if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t} \n\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t} else {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t}\n} ",
            "generation": 703,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1458
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "5228",
            "type": "RemoveOp",
            "variant": 1406
        },
        {
            "buggyStatement": "return new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence)",
            "generation": 727,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1154
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "5372",
            "type": "RemoveOp",
            "variant": 1454
        },
        {
            "buggyStatement": "if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t} \n\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t} else {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t}\n} ",
            "generation": 751,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1458
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "5509",
            "type": "RemoveOp",
            "variant": 1502
        },
        {
            "buggyStatement": "tailZone = rs.buildTailZone(id)",
            "generation": 783,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 372
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "5687",
            "type": "RemoveOp",
            "variant": 1566
        },
        {
            "buggyStatement": "if ((tailZone == null) && (i == (ruleSetCount - 1))) {\n\ttailZone = rs.buildTailZone(id);\n} ",
            "generation": 801,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 371
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "5796",
            "type": "RemoveOp",
            "variant": 1602
        },
        {
            "buggyStatement": "if ((iRules.size()) == 2) {\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);\n\tif (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\t\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n\t} \n} ",
            "generation": 871,
            "ingredients": null,
            "patch": "if ((org.joda.time.tz.ZoneInfoCompiler.cLenientISO) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cLenientISO = org.joda.time.chrono.LenientChronology.getInstance(org.joda.time.chrono.ISOChronology.getInstanceUTC());\n} ",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1141
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "PACKAGE",
            "time": "6103",
            "type": "ReplaceOp",
            "variant": 1742
        },
        {
            "buggyStatement": "return new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence)",
            "generation": 998,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1154
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "6661",
            "type": "RemoveOp",
            "variant": 1996
        },
        {
            "buggyStatement": "if ((tailZone == null) && (i == (ruleSetCount - 1))) {\n\ttailZone = rs.buildTailZone(id);\n} ",
            "generation": 1094,
            "ingredients": null,
            "patch": "if ((transitions.size()) == 0) {\n\tif (tailZone != null) {\n\t\treturn tailZone;\n\t} \n\treturn org.joda.time.tz.DateTimeZoneBuilder.buildFixedZone(id, \"UTC\", 0, 0);\n} ",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 371
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "LOCAL",
            "time": "7015",
            "type": "ReplaceOp",
            "variant": 2188
        },
        {
            "buggyStatement": "if (nextRule == null) {\n\treturn null;\n} ",
            "generation": 1107,
            "ingredients": null,
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1105
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "PACKAGE",
            "time": "7122",
            "type": "InsertAfterOp",
            "variant": 2214
        },
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ",
            "generation": 1126,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1460
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "40",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "7245",
            "type": "RemoveOp",
            "variant": 2252
        }
    ],
    "timeTotal": "7410"
}