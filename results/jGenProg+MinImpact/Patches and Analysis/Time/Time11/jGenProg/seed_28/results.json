{
    "date": "Sat Jan 28 11:28:28 CET 2017\n\nremoved classes \n\nzipped \n\ncopied zip \n\n", 
    "gens": "208", 
    "node": "graphene-100.nancy.grid5000.fr", 
    "operations": [
        {
            "buggyStatement": "tailZone = rs.buildTailZone(id)", 
            "generation": 46, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 372, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "49", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "785", 
            "type": "RemoveOp", 
            "variant": 92
        }, 
        {
            "buggyStatement": "if ((iRules.size()) == 2) {\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);\n\tif (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\t\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n\t} \n} ", 
            "generation": 49, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1141, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "49", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "916", 
            "type": "RemoveOp", 
            "variant": 98
        }, 
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 77, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "49", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "1142", 
            "type": "RemoveOp", 
            "variant": 154
        }, 
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 147, 
            "ingredients": null, 
            "patch": "if ((org.joda.time.tz.ZoneInfoCompiler.cStartOfYear) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cStartOfYear = new org.joda.time.tz.ZoneInfoCompiler.DateTimeOfYear();\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "49", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "PACKAGE", 
            "time": "1538", 
            "type": "ReplaceOp", 
            "variant": 294
        }, 
        {
            "buggyStatement": "if ((tailZone == null) && (i == (ruleSetCount - 1))) {\n\ttailZone = rs.buildTailZone(id);\n} ", 
            "generation": 274, 
            "ingredients": null, 
            "patch": "if (tailZone != null) {\n\tbreak;\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 371, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "49", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "LOCAL", 
            "time": "2208", 
            "type": "ReplaceOp", 
            "variant": 548
        }, 
        {
            "buggyStatement": "if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t} \n\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t} else {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t}\n} ", 
            "generation": 364, 
            "ingredients": null, 
            "patch": "if ((org.joda.time.tz.ZoneInfoCompiler.cStartOfYear) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cStartOfYear = new org.joda.time.tz.ZoneInfoCompiler.DateTimeOfYear();\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1458, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "49", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "PACKAGE", 
            "time": "2681", 
            "type": "ReplaceOp", 
            "variant": 728
        }, 
        {
            "buggyStatement": "if (tailZone != null) {\n\tif (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\t\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t\t} \n\t\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t\t} else {\n\t\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t\t}\n\t} \n} ", 
            "generation": 459, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1457, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "49", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "3179", 
            "type": "RemoveOp", 
            "variant": 918
        }, 
        {
            "buggyStatement": "tailZone = rs.buildTailZone(id)", 
            "generation": 470, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 372, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "49", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "3342", 
            "type": "RemoveOp", 
            "variant": 940
        }, 
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 558, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "49", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "3782", 
            "type": "RemoveOp", 
            "variant": 1116
        }, 
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 622, 
            "ingredients": null, 
            "patch": "if (size == 0) {\n\tthrow new java.lang.IllegalArgumentException();\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "49", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "LOCAL", 
            "time": "4216", 
            "type": "ReplaceOp", 
            "variant": 1244
        }, 
        {
            "buggyStatement": "if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t} \n\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t} else {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t}\n} ", 
            "generation": 654, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1458, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "49", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "4452", 
            "type": "RemoveOp", 
            "variant": 1308
        }, 
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 669, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "49", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "4619", 
            "type": "RemoveOp", 
            "variant": 1338
        }, 
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 679, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "49", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "4765", 
            "type": "RemoveOp", 
            "variant": 1358
        }, 
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 719, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "49", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "5347", 
            "type": "RemoveOp", 
            "variant": 1438
        }, 
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 780, 
            "ingredients": null, 
            "patch": "if ((org.joda.time.tz.ZoneInfoCompiler.cLenientISO) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cLenientISO = org.joda.time.chrono.LenientChronology.getInstance(org.joda.time.chrono.ISOChronology.getInstanceUTC());\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "49", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "PACKAGE", 
            "time": "5900", 
            "type": "ReplaceOp", 
            "variant": 1560
        }, 
        {
            "buggyStatement": "if (tailZone != null) {\n\tif (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\t\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t\t} \n\t\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t\t} else {\n\t\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t\t}\n\t} \n} ", 
            "generation": 786, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1457, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "49", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "6063", 
            "type": "RemoveOp", 
            "variant": 1572
        }, 
        {
            "buggyStatement": "if ((tailZone == null) && (i == (ruleSetCount - 1))) {\n\ttailZone = rs.buildTailZone(id);\n} ", 
            "generation": 844, 
            "ingredients": null, 
            "patch": "if ((org.joda.time.tz.ZoneInfoCompiler.cStartOfYear) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cStartOfYear = new org.joda.time.tz.ZoneInfoCompiler.DateTimeOfYear();\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 371, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "49", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "PACKAGE", 
            "time": "6380", 
            "type": "ReplaceOp", 
            "variant": 1688
        }, 
        {
            "buggyStatement": "if (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n} ", 
            "generation": 1042, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1144, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "49", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "7383", 
            "type": "RemoveOp", 
            "variant": 2084
        }
    ], 
    "ops": "0", 
    "programVariant": "92", 
    "timeEvaluation": null, 
    "timeTotal": "7564"
}