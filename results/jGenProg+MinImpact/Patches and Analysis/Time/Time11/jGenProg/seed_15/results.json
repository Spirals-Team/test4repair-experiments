{
    "date": "Mon Jan 16 02:51:35 CET 2017\n\nremoved classes \n\nzipped \n\ncopied zip \n\n\n",
    "node": "graphene-73.nancy.grid5000.fr",
    "patches": [
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ",
            "generation": 107,
            "ingredients": null,
            "patch": "if (size == 0) {\n\tthrow new java.lang.IllegalArgumentException();\n} ",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1460
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "47",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "LOCAL",
            "time": "1067",
            "type": "ReplaceOp",
            "variant": 214
        },
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ",
            "generation": 160,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1460
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "47",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "1331",
            "type": "RemoveOp",
            "variant": 320
        },
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ",
            "generation": 206,
            "ingredients": null,
            "patch": "if ((org.joda.time.tz.ZoneInfoCompiler.cStartOfYear) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cStartOfYear = new org.joda.time.tz.ZoneInfoCompiler.DateTimeOfYear();\n} ",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1460
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "47",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "PACKAGE",
            "time": "1559",
            "type": "ReplaceOp",
            "variant": 412
        },
        {
            "buggyStatement": "if ((iRules.size()) == 2) {\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);\n\tif (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\t\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n\t} \n} ",
            "generation": 223,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1141
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "47",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "1686",
            "type": "RemoveOp",
            "variant": 446
        },
        {
            "buggyStatement": "if ((iRules.size()) == 2) {\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);\n\tif (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\t\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n\t} \n} ",
            "generation": 273,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1141
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "47",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "2156",
            "type": "RemoveOp",
            "variant": 546
        },
        {
            "buggyStatement": "if (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n} ",
            "generation": 340,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1144
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "47",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "2708",
            "type": "RemoveOp",
            "variant": 680
        },
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ",
            "generation": 443,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1460
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "47",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "3156",
            "type": "RemoveOp",
            "variant": 886
        },
        {
            "buggyStatement": "int[] standardOffsets = new int[size]",
            "generation": 453,
            "ingredients": null,
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1396
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "47",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "PACKAGE",
            "time": "3258",
            "type": "InsertAfterOp",
            "variant": 906
        },
        {
            "buggyStatement": "if (tailZone != null) {\n\tif (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\t\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t\t} \n\t\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t\t} else {\n\t\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t\t}\n\t} \n} ",
            "generation": 496,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1457
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "47",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "3483",
            "type": "RemoveOp",
            "variant": 992
        },
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ",
            "generation": 500,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1460
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "47",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "3574",
            "type": "RemoveOp",
            "variant": 1000
        },
        {
            "buggyStatement": "if (tailZone != null) {\n\tif (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\t\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t\t} \n\t\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t\t} else {\n\t\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t\t}\n\t} \n} ",
            "generation": 503,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1457
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "47",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "3657",
            "type": "RemoveOp",
            "variant": 1006
        },
        {
            "buggyStatement": "tailZone = rs.buildTailZone(id)",
            "generation": 531,
            "ingredients": null,
            "patch": "saveMillis = next.getSaveMillis()",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 372
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "47",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "LOCAL",
            "time": "3953",
            "type": "ReplaceOp",
            "variant": 1062
        },
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ",
            "generation": 534,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1460
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "47",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "4037",
            "type": "RemoveOp",
            "variant": 1068
        },
        {
            "buggyStatement": "java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition> transitions = new java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>()",
            "generation": 629,
            "ingredients": null,
            "patch": "iRuleSets.add(new org.joda.time.tz.DateTimeZoneBuilder.RuleSet())",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 339
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "47",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "LOCAL",
            "time": "4572",
            "type": "InsertBeforeOp",
            "variant": 1258
        },
        {
            "buggyStatement": "return new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence)",
            "generation": 650,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1154
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "47",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "4734",
            "type": "RemoveOp",
            "variant": 1300
        },
        {
            "buggyStatement": "if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t} \n\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t} else {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t}\n} ",
            "generation": 651,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1458
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "47",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "4810",
            "type": "RemoveOp",
            "variant": 1302
        },
        {
            "buggyStatement": "if (size >= 2) {\n\toffsetForLast = transitions.get((size - 2)).getWallOffset();\n} ",
            "generation": 663,
            "ingredients": null,
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 418
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "47",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "PACKAGE",
            "time": "4921",
            "type": "InsertBeforeOp",
            "variant": 1326
        },
        {
            "buggyStatement": "tailZone = rs.buildTailZone(id)",
            "generation": 701,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 372
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "47",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "5257",
            "type": "RemoveOp",
            "variant": 1402
        },
        {
            "buggyStatement": "tailZone = rs.buildTailZone(id)",
            "generation": 723,
            "ingredients": null,
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cLenientISO = org.joda.time.chrono.LenientChronology.getInstance(org.joda.time.chrono.ISOChronology.getInstanceUTC())",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 372
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "47",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "PACKAGE",
            "time": "5407",
            "type": "ReplaceOp",
            "variant": 1446
        },
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ",
            "generation": 748,
            "ingredients": null,
            "patch": "if ((org.joda.time.tz.ZoneInfoCompiler.cLenientISO) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cLenientISO = org.joda.time.chrono.LenientChronology.getInstance(org.joda.time.chrono.ISOChronology.getInstanceUTC());\n} ",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1460
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "47",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "PACKAGE",
            "time": "5555",
            "type": "ReplaceOp",
            "variant": 1496
        },
        {
            "buggyStatement": "tailZone = rs.buildTailZone(id)",
            "generation": 760,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 372
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "47",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "5668",
            "type": "RemoveOp",
            "variant": 1520
        },
        {
            "buggyStatement": "if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t} \n\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t} else {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t}\n} ",
            "generation": 807,
            "ingredients": null,
            "patch": "if (id == null) {\n\treturn null;\n} ",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1458
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "47",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "PACKAGE",
            "time": "5900",
            "type": "ReplaceOp",
            "variant": 1614
        },
        {
            "buggyStatement": "java.lang.String[] set = zoneStrings[j]",
            "generation": 889,
            "ingredients": null,
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1420
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "47",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "PACKAGE",
            "time": "6239",
            "type": "InsertAfterOp",
            "variant": 1778
        },
        {
            "buggyStatement": "iRules.add(rule)",
            "generation": 910,
            "ingredients": null,
            "patch": "if (!(iRules.contains(rule))) {\n\tiRules.add(rule);\n} ",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 995
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "47",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "LOCAL",
            "time": "6371",
            "type": "InsertBeforeOp",
            "variant": 1820
        },
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ",
            "generation": 911,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1460
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "47",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "6447",
            "type": "RemoveOp",
            "variant": 1822
        },
        {
            "buggyStatement": "if (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n} ",
            "generation": 995,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1144
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "47",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "6836",
            "type": "RemoveOp",
            "variant": 1990
        },
        {
            "buggyStatement": "tailZone = rs.buildTailZone(id)",
            "generation": 1005,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 372
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "47",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "7058",
            "type": "RemoveOp",
            "variant": 2010
        }
    ],
    "timeTotal": "7442"
}