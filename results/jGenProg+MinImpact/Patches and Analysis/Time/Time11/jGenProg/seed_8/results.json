{
    "date": "Fri Jan 13 00:24:10 CET 2017\n\nremoved classes \n\nzipped \n\ncopied zip \n\n\n",
    "node": "graphene-115.nancy.grid5000.fr",
    "patches": [
        {
            "buggyStatement": "if ((iRules.size()) == 2) {\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);\n\tif (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\t\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n\t} \n} ",
            "generation": 98,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1141
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "743",
            "type": "RemoveOp",
            "variant": 196
        },
        {
            "buggyStatement": "org.joda.time.Chronology chrono = org.joda.time.chrono.ISOChronology.getInstanceUTC()",
            "generation": 132,
            "ingredients": null,
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 843
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "PACKAGE",
            "time": "938",
            "type": "InsertBeforeOp",
            "variant": 264
        },
        {
            "buggyStatement": "if ((tailZone == null) && (i == (ruleSetCount - 1))) {\n\ttailZone = rs.buildTailZone(id);\n} ",
            "generation": 174,
            "ingredients": null,
            "patch": "if ((org.joda.time.tz.ZoneInfoCompiler.cLenientISO) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cLenientISO = org.joda.time.chrono.LenientChronology.getInstance(org.joda.time.chrono.ISOChronology.getInstanceUTC());\n} ",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 371
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "PACKAGE",
            "time": "1164",
            "type": "ReplaceOp",
            "variant": 348
        },
        {
            "buggyStatement": "if ((tailZone == null) && (i == (ruleSetCount - 1))) {\n\ttailZone = rs.buildTailZone(id);\n} ",
            "generation": 214,
            "ingredients": null,
            "patch": "if (((transitions.size()) == 1) && (tailZone == null)) {\n\torg.joda.time.tz.DateTimeZoneBuilder.Transition tr = transitions.get(0);\n\treturn org.joda.time.tz.DateTimeZoneBuilder.buildFixedZone(id, tr.getNameKey(), tr.getWallOffset(), tr.getStandardOffset());\n} ",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 371
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "LOCAL",
            "time": "1493",
            "type": "ReplaceOp",
            "variant": 428
        },
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ",
            "generation": 219,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1460
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "1578",
            "type": "RemoveOp",
            "variant": 438
        },
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ",
            "generation": 283,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1460
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "2005",
            "type": "RemoveOp",
            "variant": 566
        },
        {
            "buggyStatement": "return iOfYear.next(instant, standardOffset, saveMillis)",
            "generation": 287,
            "ingredients": null,
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 761
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "PACKAGE",
            "time": "2208",
            "type": "InsertBeforeOp",
            "variant": 574
        },
        {
            "buggyStatement": "return new org.joda.time.tz.DateTimeZoneBuilder.Transition(nextMillis , nextRule , iStandardOffset)",
            "generation": 311,
            "ingredients": null,
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1124
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "PACKAGE",
            "time": "2351",
            "type": "InsertBeforeOp",
            "variant": 622
        },
        {
            "buggyStatement": "tailZone = rs.buildTailZone(id)",
            "generation": 336,
            "ingredients": null,
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 372
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "PACKAGE",
            "time": "2534",
            "type": "InsertBeforeOp",
            "variant": 672
        },
        {
            "buggyStatement": "org.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1)",
            "generation": 389,
            "ingredients": null,
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1143
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "PACKAGE",
            "time": "2816",
            "type": "InsertAfterOp",
            "variant": 778
        },
        {
            "buggyStatement": "org.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0)",
            "generation": 398,
            "ingredients": null,
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1142
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "PACKAGE",
            "time": "2926",
            "type": "InsertAfterOp",
            "variant": 796
        },
        {
            "buggyStatement": "for (int i = 0 ; i < ((nameKeys.length) - 1) ; i++) {\n\tjava.lang.String curNameKey = nameKeys[i];\n\tjava.lang.String nextNameKey = nameKeys[(i + 1)];\n\tlong curOffset = wallOffsets[i];\n\tlong nextOffset = wallOffsets[(i + 1)];\n\tlong curStdOffset = standardOffsets[i];\n\tlong nextStdOffset = standardOffsets[(i + 1)];\n\torg.joda.time.Period p = new org.joda.time.Period(trans[i] , trans[(i + 1)] , org.joda.time.PeriodType.yearMonthDay() , chrono);\n\tif ((((((((curOffset != nextOffset) && (curStdOffset == nextStdOffset)) && (curNameKey.equals(nextNameKey))) && ((p.getYears()) == 0)) && ((p.getMonths()) > 4)) && ((p.getMonths()) < 8)) && (curNameKey.equals(zoneNameData[2]))) && (curNameKey.equals(zoneNameData[4]))) {\n\t\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\t\tjava.lang.System.out.println((\"Fixing duplicate name key - \" + nextNameKey));\n\t\t\tjava.lang.System.out.println((((\"     - \" + (new org.joda.time.DateTime(trans[i] , chrono))) + \" - \") + (new org.joda.time.DateTime(trans[(i + 1)] , chrono))));\n\t\t} \n\t\tif (curOffset > nextOffset) {\n\t\t\tnameKeys[i] = (curNameKey + \"-Summer\").intern();\n\t\t} else {\n\t\t\tif (curOffset < nextOffset) {\n\t\t\t\tnameKeys[(i + 1)] = (nextNameKey + \"-Summer\").intern();\n\t\t\t\ti++;\n\t\t\t} \n\t\t}\n\t} \n}",
            "generation": 421,
            "ingredients": null,
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1428
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "PACKAGE",
            "time": "3064",
            "type": "InsertAfterOp",
            "variant": 842
        },
        {
            "buggyStatement": "if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t} \n\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t} else {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t}\n} ",
            "generation": 424,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1458
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "3150",
            "type": "RemoveOp",
            "variant": 848
        },
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ",
            "generation": 443,
            "ingredients": null,
            "patch": "if (size == 0) {\n\tthrow new java.lang.IllegalArgumentException();\n} ",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1460
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "LOCAL",
            "time": "3285",
            "type": "ReplaceOp",
            "variant": 886
        },
        {
            "buggyStatement": "if ((iRules.size()) == 2) {\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);\n\tif (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\t\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n\t} \n} ",
            "generation": 457,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1141
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "3520",
            "type": "RemoveOp",
            "variant": 914
        },
        {
            "buggyStatement": "return new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence)",
            "generation": 478,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1154
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "3774",
            "type": "RemoveOp",
            "variant": 956
        },
        {
            "buggyStatement": "if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t} \n\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t} else {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t}\n} ",
            "generation": 511,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1458
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "3977",
            "type": "RemoveOp",
            "variant": 1022
        },
        {
            "buggyStatement": "if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t} \n\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t} else {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t}\n} ",
            "generation": 526,
            "ingredients": null,
            "patch": "if ((org.joda.time.tz.ZoneInfoCompiler.cLenientISO) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cLenientISO = org.joda.time.chrono.LenientChronology.getInstance(org.joda.time.chrono.ISOChronology.getInstanceUTC());\n} ",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1458
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "PACKAGE",
            "time": "4101",
            "type": "ReplaceOp",
            "variant": 1052
        },
        {
            "buggyStatement": "if ((tailZone == null) && (i == (ruleSetCount - 1))) {\n\ttailZone = rs.buildTailZone(id);\n} ",
            "generation": 547,
            "ingredients": null,
            "patch": "if ((org.joda.time.tz.ZoneInfoCompiler.cStartOfYear) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cStartOfYear = new org.joda.time.tz.ZoneInfoCompiler.DateTimeOfYear();\n} ",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 371
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "PACKAGE",
            "time": "4247",
            "type": "ReplaceOp",
            "variant": 1094
        },
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ",
            "generation": 595,
            "ingredients": null,
            "patch": "if (id == null) {\n\tthrow new java.lang.IllegalArgumentException();\n} ",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1460
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "LOCAL",
            "time": "4621",
            "type": "ReplaceOp",
            "variant": 1190
        },
        {
            "buggyStatement": "if (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n} ",
            "generation": 600,
            "ingredients": null,
            "patch": "if ((org.joda.time.tz.ZoneInfoCompiler.cStartOfYear) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cStartOfYear = new org.joda.time.tz.ZoneInfoCompiler.DateTimeOfYear();\n} ",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1144
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "PACKAGE",
            "time": "4708",
            "type": "ReplaceOp",
            "variant": 1200
        },
        {
            "buggyStatement": "if ((iRules.size()) == 2) {\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);\n\tif (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\t\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n\t} \n} ",
            "generation": 658,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1141
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "5096",
            "type": "RemoveOp",
            "variant": 1316
        },
        {
            "buggyStatement": "if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t} \n\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t} else {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t}\n} ",
            "generation": 703,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1458
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "5337",
            "type": "RemoveOp",
            "variant": 1406
        },
        {
            "buggyStatement": "if (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n} ",
            "generation": 723,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1144
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "5484",
            "type": "RemoveOp",
            "variant": 1446
        },
        {
            "buggyStatement": "if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t} \n\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t} else {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t}\n} ",
            "generation": 728,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1458
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "5574",
            "type": "RemoveOp",
            "variant": 1456
        },
        {
            "buggyStatement": "tailZone = rs.buildTailZone(id)",
            "generation": 748,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 372
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "5715",
            "type": "RemoveOp",
            "variant": 1496
        },
        {
            "buggyStatement": "if ((tailZone == null) && (i == (ruleSetCount - 1))) {\n\ttailZone = rs.buildTailZone(id);\n} ",
            "generation": 764,
            "ingredients": null,
            "patch": "if (next == null) {\n\tcontinue;\n} ",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 371
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "LOCAL",
            "time": "5836",
            "type": "ReplaceOp",
            "variant": 1528
        },
        {
            "buggyStatement": "if ((tailZone == null) && (i == (ruleSetCount - 1))) {\n\ttailZone = rs.buildTailZone(id);\n} ",
            "generation": 848,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 371
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "6452",
            "type": "RemoveOp",
            "variant": 1696
        },
        {
            "buggyStatement": "if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t} \n\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t} else {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t}\n} ",
            "generation": 939,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1458
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "6942",
            "type": "RemoveOp",
            "variant": 1878
        },
        {
            "buggyStatement": "if ((iRules.size()) == 2) {\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);\n\tif (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\t\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n\t} \n} ",
            "generation": 964,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 1141
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "7098",
            "type": "RemoveOp",
            "variant": 1928
        },
        {
            "buggyStatement": "if ((tailZone == null) && (i == (ruleSetCount - 1))) {\n\ttailZone = rs.buildTailZone(id);\n} ",
            "generation": 969,
            "ingredients": null,
            "patch": "remove",
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder",
                "line": 371
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "48",
                "numberAllTestRegression": "11852",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "-",
            "time": "7186",
            "type": "RemoveOp",
            "variant": 1938
        }
    ],
    "timeTotal": "7440"
}