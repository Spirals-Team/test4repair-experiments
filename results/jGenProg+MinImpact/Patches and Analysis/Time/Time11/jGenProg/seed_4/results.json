{
    "date": "Wed Jan 11 02:07:19 CET 2017\n\nremoved classes \n\nzipped \n\ncopied zip \n\n", 
    "gens": "208", 
    "node": "grimoire-4.nancy.grid5000.fr", 
    "operations": [
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 234, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "-", 
            "time": "1477", 
            "type": "RemoveOp", 
            "variant": 468
        }, 
        {
            "buggyStatement": "if (size >= 2) {\n\toffsetForLast = transitions.get((size - 2)).getWallOffset();\n} ", 
            "generation": 265, 
            "ingredients": null, 
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 418, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "PACKAGE", 
            "time": "1641", 
            "type": "InsertAfterOp", 
            "variant": 530
        }, 
        {
            "buggyStatement": "if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t} \n\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t} else {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t}\n} ", 
            "generation": 336, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1458, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "-", 
            "time": "1929", 
            "type": "RemoveOp", 
            "variant": 672
        }, 
        {
            "buggyStatement": "if ((iRules.size()) == 2) {\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);\n\tif (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\t\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n\t} \n} ", 
            "generation": 340, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1141, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "-", 
            "time": "2012", 
            "type": "RemoveOp", 
            "variant": 680
        }, 
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 411, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "-", 
            "time": "2271", 
            "type": "RemoveOp", 
            "variant": 822
        }, 
        {
            "buggyStatement": "if (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n} ", 
            "generation": 414, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1144, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "-", 
            "time": "2346", 
            "type": "RemoveOp", 
            "variant": 828
        }, 
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 427, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "-", 
            "time": "2455", 
            "type": "RemoveOp", 
            "variant": 854
        }, 
        {
            "buggyStatement": "if (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n} ", 
            "generation": 476, 
            "ingredients": null, 
            "patch": "if (id == null) {\n\treturn null;\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1144, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "PACKAGE", 
            "time": "2685", 
            "type": "ReplaceOp", 
            "variant": 952
        }, 
        {
            "buggyStatement": "org.joda.time.tz.DateTimeZoneBuilder.Transition last = transitions.get((size - 1))", 
            "generation": 594, 
            "ingredients": null, 
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 410, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "PACKAGE", 
            "time": "3113", 
            "type": "InsertAfterOp", 
            "variant": 1188
        }, 
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 629, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "-", 
            "time": "3414", 
            "type": "RemoveOp", 
            "variant": 1258
        }, 
        {
            "buggyStatement": "java.lang.String nextNameKey = nameKeys[(i + 1)]", 
            "generation": 632, 
            "ingredients": null, 
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1430, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "PACKAGE", 
            "time": "3492", 
            "type": "InsertBeforeOp", 
            "variant": 1264
        }, 
        {
            "buggyStatement": "org.joda.time.Chronology chrono = org.joda.time.chrono.ISOChronology.getInstanceUTC()", 
            "generation": 644, 
            "ingredients": null, 
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1082, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "PACKAGE", 
            "time": "3592", 
            "type": "InsertAfterOp", 
            "variant": 1288
        }, 
        {
            "buggyStatement": "if ((iRules.size()) == 2) {\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);\n\tif (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\t\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n\t} \n} ", 
            "generation": 648, 
            "ingredients": null, 
            "patch": "if ((org.joda.time.tz.ZoneInfoCompiler.cLenientISO) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cLenientISO = org.joda.time.chrono.LenientChronology.getInstance(org.joda.time.chrono.ISOChronology.getInstanceUTC());\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1141, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "PACKAGE", 
            "time": "3675", 
            "type": "ReplaceOp", 
            "variant": 1296
        }, 
        {
            "buggyStatement": "if ((tailZone == null) && (i == (ruleSetCount - 1))) {\n\ttailZone = rs.buildTailZone(id);\n} ", 
            "generation": 683, 
            "ingredients": null, 
            "patch": "if (addTransition(transitions, next)) {\n\tif (tailZone != null) {\n\t\tbreak;\n\t} \n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 371, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "LOCAL", 
            "time": "3842", 
            "type": "ReplaceOp", 
            "variant": 1366
        }, 
        {
            "buggyStatement": "if ((iRules.size()) == 2) {\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);\n\tif (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\t\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n\t} \n} ", 
            "generation": 720, 
            "ingredients": null, 
            "patch": "if (id == null) {\n\treturn null;\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1141, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "PACKAGE", 
            "time": "4156", 
            "type": "ReplaceOp", 
            "variant": 1440
        }, 
        {
            "buggyStatement": "tailZone = rs.buildTailZone(id)", 
            "generation": 741, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 372, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "-", 
            "time": "4406", 
            "type": "RemoveOp", 
            "variant": 1482
        }, 
        {
            "buggyStatement": "return new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence)", 
            "generation": 762, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1154, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "-", 
            "time": "4539", 
            "type": "RemoveOp", 
            "variant": 1524
        }, 
        {
            "buggyStatement": "iStandardOffset = standardOffset", 
            "generation": 810, 
            "ingredients": null, 
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 985, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "PACKAGE", 
            "time": "4849", 
            "type": "InsertAfterOp", 
            "variant": 1620
        }, 
        {
            "buggyStatement": "return new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence)", 
            "generation": 982, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1154, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "-", 
            "time": "5805", 
            "type": "RemoveOp", 
            "variant": 1964
        }, 
        {
            "buggyStatement": "if (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n} ", 
            "generation": 1003, 
            "ingredients": null, 
            "patch": "if ((org.joda.time.tz.ZoneInfoCompiler.cStartOfYear) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cStartOfYear = new org.joda.time.tz.ZoneInfoCompiler.DateTimeOfYear();\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1144, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "PACKAGE", 
            "time": "5929", 
            "type": "ReplaceOp", 
            "variant": 2006
        }, 
        {
            "buggyStatement": "if (tailZone != null) {\n\tif (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\t\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t\t} \n\t\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t\t} else {\n\t\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t\t}\n\t} \n} ", 
            "generation": 1008, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1457, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "-", 
            "time": "6010", 
            "type": "RemoveOp", 
            "variant": 2016
        }, 
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 1095, 
            "ingredients": null, 
            "patch": "if (id == null) {\n\treturn null;\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "PACKAGE", 
            "time": "6315", 
            "type": "ReplaceOp", 
            "variant": 2190
        }, 
        {
            "buggyStatement": "if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t} \n\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t} else {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t}\n} ", 
            "generation": 1106, 
            "ingredients": null, 
            "patch": "if (id == null) {\n\treturn null;\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1458, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "PACKAGE", 
            "time": "6414", 
            "type": "ReplaceOp", 
            "variant": 2212
        }, 
        {
            "buggyStatement": "if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t} \n\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t} else {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t}\n} ", 
            "generation": 1147, 
            "ingredients": null, 
            "patch": "if ((org.joda.time.tz.ZoneInfoCompiler.cLenientISO) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cLenientISO = org.joda.time.chrono.LenientChronology.getInstance(org.joda.time.chrono.ISOChronology.getInstanceUTC());\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1458, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "PACKAGE", 
            "time": "6591", 
            "type": "ReplaceOp", 
            "variant": 2294
        }, 
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 1160, 
            "ingredients": null, 
            "patch": "if ((org.joda.time.tz.ZoneInfoCompiler.cLenientISO) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cLenientISO = org.joda.time.chrono.LenientChronology.getInstance(org.joda.time.chrono.ISOChronology.getInstanceUTC());\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "PACKAGE", 
            "time": "6696", 
            "type": "ReplaceOp", 
            "variant": 2320
        }, 
        {
            "buggyStatement": "if (tailZone != null) {\n\tif (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\t\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t\t} \n\t\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t\t} else {\n\t\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t\t}\n\t} \n} ", 
            "generation": 1242, 
            "ingredients": null, 
            "patch": "if (id == null) {\n\tthrow new java.lang.IllegalArgumentException();\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1457, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "LOCAL", 
            "time": "6979", 
            "type": "ReplaceOp", 
            "variant": 2484
        }, 
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 1244, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "-", 
            "time": "7055", 
            "type": "RemoveOp", 
            "variant": 2488
        }, 
        {
            "buggyStatement": "if ((iRules.size()) == 2) {\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);\n\tif (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\t\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n\t} \n} ", 
            "generation": 1267, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1141, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "-", 
            "time": "7206", 
            "type": "RemoveOp", 
            "variant": 2534
        }, 
        {
            "buggyStatement": "if ((iRules.size()) == 2) {\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);\n\tif (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\t\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n\t} \n} ", 
            "generation": 1270, 
            "ingredients": null, 
            "patch": "if (id == null) {\n\tthrow new java.lang.IllegalArgumentException();\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1141, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "true", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "0"
            }, 
            "scope": "LOCAL", 
            "time": "7291", 
            "type": "ReplaceOp", 
            "variant": 2540
        }
    ], 
    "ops": "0", 
    "programVariant": "468", 
    "timeEvaluation": null, 
    "timeTotal": "7432"
}