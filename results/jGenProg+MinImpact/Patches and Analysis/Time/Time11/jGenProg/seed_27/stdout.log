seed AstorRun 27 
export PATH="/home/mmartinez/defects4j/framework/bin:$PATH";export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;export PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";cd /home/mmartinez/projects/time/time_11;defects4j compile;cp -r /home/mmartinez/projects/time/time_11 /tmp/time_11_Genprog_local_s1;cd /tmp/time_11_Genprog_local_s1;mkdir lib/;cp -r /home/mmartinez/defects4j/framework/projects/lib/* lib/;cp -r /home/mmartinez/defects4j/framework/projects/Time/lib/* lib/;find . -type f -name "package-info.java" -delete;
/home/mmartinez/defects4j-repair/src/python/core/../../../results/2016-june/Time/seed/27/package/11/Genprog/result
cd /tmp/time_11_Genprog_local_s1;export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;TZ="America/New_York"; export TZexport PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";time /home/mmartinez/jdk1.8.0_45/bin//java -Xmx4096m -cp /home/mmartinez/defects4j-repair/src/python/core/../../..//libs/astor.jar fr.inria.main.evolution.MainjGenProg -mode statement -location . -id Time -dependencies lib/ -failing org.joda.time.tz.TestCompiler: -package org.joda -jvm4testexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ -jvm4evosuitetestexecution /home/mmartinez/jdk1.8.0_45/bin/ -javacompliancelevel 5 -maxgen 1000000 -seed 27 -scope package -maxtime 120  -stopfirst false -population 1 -srcjavafolder src/main/java/ -srctestfolder src/test/java/ -binjavafolder target/classes/ -bintestfolder target/test-classes/ -flthreshold 0.1  -validation  fr.inria.astor.core.validation.validators.RegressionValidation  -ESParameters -Dassertion_timeout=1800:-Dminimization_timeout=1800:-Djunit_check_timeout=1800:-Dwrite_junit_timeout=300:-Dinitialization_timeout=300:-Dglobal_timeout=18000:-Dsearch_budget=100000:-Dstopping_condition=MaxStatements:-Dno_runtime_dependency=true:-Dsandbox=false:-Dp_reflection_on_private=0.0:-Dreflection_start_percent=1.0:-Dp_functional_mocking=0.0:-Dfunctional_mocking_percent=1.0:-mem=2000 -testbystep  -ignoredtestcases org.apache.commons.lang.LocaleUtilsTest  -excludeRegression  -maxgen 100000000 ;echo "

Node: `hostname`
";echo "
Date: `date`
"; find /tmp/time_11_Genprog_local_s1/outputMutation -name "*.class" -type f -delete;echo "removed classes 
"; find . -name bin  -type d -print0|xargs -0 rm -r --; zip -r -q out.zip /tmp/time_11_Genprog_local_s1/outputMutation; echo "zipped 
";cp out.zip /home/mmartinez/defects4j-repair/src/python/core/../../../results/2016-june/Time/seed/27/package/11/Genprog; echo "copied zip 
";rm -rf /tmp/time_11_Genprog_local_s1;

[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:136) - End Repair Loops: Found solution
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:137) - Solution stored at: /tmp/time_11_Genprog_local_s1/./outputMutation/AstorMain-Time//src/
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:142) - 
Number solutions:24
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 1.0, [Variant id: 204 (SOL) , #gens: 207, #ops: 1, parent:203]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 1.0, [Variant id: 220 (SOL) , #gens: 207, #ops: 1, parent:219]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 1.0, [Variant id: 338 (SOL) , #gens: 207, #ops: 1, parent:337]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 1.0, [Variant id: 412 (SOL) , #gens: 208, #ops: 1, parent:411]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 1.0, [Variant id: 636 (SOL) , #gens: 207, #ops: 1, parent:635]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 1.0, [Variant id: 748 (SOL) , #gens: 207, #ops: 1, parent:747]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 1.0, [Variant id: 792 (SOL) , #gens: 207, #ops: 1, parent:791]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 1.0, [Variant id: 794 (SOL) , #gens: 207, #ops: 1, parent:793]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 1.0, [Variant id: 846 (SOL) , #gens: 209, #ops: 1, parent:845]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 1.0, [Variant id: 868 (SOL) , #gens: 207, #ops: 1, parent:867]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 1.0, [Variant id: 956 (SOL) , #gens: 207, #ops: 1, parent:955]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 1.0, [Variant id: 1034 (SOL) , #gens: 208, #ops: 1, parent:1033]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 1.0, [Variant id: 1044 (SOL) , #gens: 207, #ops: 1, parent:1043]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 1.0, [Variant id: 1090 (SOL) , #gens: 207, #ops: 1, parent:1089]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 1.0, [Variant id: 1158 (SOL) , #gens: 207, #ops: 1, parent:1157]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 1.0, [Variant id: 1268 (SOL) , #gens: 208, #ops: 1, parent:1267]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 1.0, [Variant id: 1610 (SOL) , #gens: 207, #ops: 1, parent:1609]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 1.0, [Variant id: 1634 (SOL) , #gens: 208, #ops: 1, parent:1633]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 1.0, [Variant id: 1640 (SOL) , #gens: 207, #ops: 1, parent:1639]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 1.0, [Variant id: 1734 (SOL) , #gens: 207, #ops: 1, parent:1733]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 1.0, [Variant id: 2080 (SOL) , #gens: 209, #ops: 1, parent:2079]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 1.0, [Variant id: 2084 (SOL) , #gens: 208, #ops: 1, parent:2083]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 1.0, [Variant id: 2086 (SOL) , #gens: 208, #ops: 1, parent:2085]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 1.0, [Variant id: 2098 (SOL) , #gens: 207, #ops: 1, parent:2097]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:146) - 
All variants:
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:148) - f 1.0, [Variant id: 2099, #gens: 208, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:152) - 
Solution details
[INFO ] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:153) - 
 --SOLUTIONS DESCRIPTION--

 ----
ProgramVariant 204
 
time(sec)= 835
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1460
lineSuspiciousness= 0.866
original statement= if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
	java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
} 
fixed statement= 
generation= 102
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|44|[]|
 ----
ProgramVariant 220
 
time(sec)= 972
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1141
lineSuspiciousness= 0.327
original statement= if ((iRules.size()) == 2) {
	org.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);
	org.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);
	if (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {
		return new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);
	} 
} 
fixed statement= 
generation= 110
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|44|[]|
 ----
ProgramVariant 338
 
time(sec)= 1494
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 372
lineSuspiciousness= 0.327
original statement= tailZone = rs.buildTailZone(id)
fixed statement= 
generation= 169
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|44|[]|
 ----
ProgramVariant 412
 
time(sec)= 1720
operation: ReplaceOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1457
lineSuspiciousness= 0.327
original statement= if (tailZone != null) {
	if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {
		if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
			java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
		} 
		if ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {
			tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend("-Summer") , tailZone.iEndRecurrence);
		} else {
			tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend("-Summer"));
		}
	} 
} 
fixed statement= if (id == null) {
	return null;
} 
generation= 206
ingredientScope= PACKAGE
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|44|[]|
 ----
ProgramVariant 636
 
time(sec)= 2408
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1457
lineSuspiciousness= 0.327
original statement= if (tailZone != null) {
	if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {
		if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
			java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
		} 
		if ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {
			tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend("-Summer") , tailZone.iEndRecurrence);
		} else {
			tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend("-Summer"));
		}
	} 
} 
fixed statement= 
generation= 318
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|44|[]|
 ----
ProgramVariant 748
 
time(sec)= 2706
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1457
lineSuspiciousness= 0.327
original statement= if (tailZone != null) {
	if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {
		if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
			java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
		} 
		if ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {
			tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend("-Summer") , tailZone.iEndRecurrence);
		} else {
			tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend("-Summer"));
		}
	} 
} 
fixed statement= 
generation= 374
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|44|[]|
 ----
ProgramVariant 792
 
time(sec)= 2871
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1460
lineSuspiciousness= 0.866
original statement= if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
	java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
} 
fixed statement= 
generation= 396
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|44|[]|
 ----
ProgramVariant 794
 
time(sec)= 2979
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1458
lineSuspiciousness= 0.354
original statement= if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {
	if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
		java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
	} 
	if ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {
		tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend("-Summer") , tailZone.iEndRecurrence);
	} else {
		tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend("-Summer"));
	}
} 
fixed statement= 
generation= 397
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|44|[]|
 ----
ProgramVariant 846
 
time(sec)= 3155
operation: InsertAfterOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1011
lineSuspiciousness= 0.306
original statement= if ((iInitialNameKey) != null) {
	return new org.joda.time.tz.DateTimeZoneBuilder.Transition(firstMillis , iInitialNameKey , ((iStandardOffset) + (iInitialSaveMillis)) , iStandardOffset);
} 
fixed statement= org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)
generation= 423
ingredientScope= PACKAGE
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|44|[]|
 ----
ProgramVariant 868
 
time(sec)= 3413
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 371
lineSuspiciousness= 0.327
original statement= if ((tailZone == null) && (i == (ruleSetCount - 1))) {
	tailZone = rs.buildTailZone(id);
} 
fixed statement= 
generation= 434
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|44|[]|
 ----
ProgramVariant 956
 
time(sec)= 3750
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1457
lineSuspiciousness= 0.327
original statement= if (tailZone != null) {
	if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {
		if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
			java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
		} 
		if ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {
			tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend("-Summer") , tailZone.iEndRecurrence);
		} else {
			tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend("-Summer"));
		}
	} 
} 
fixed statement= 
generation= 478
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|44|[]|
 ----
ProgramVariant 1034
 
time(sec)= 3967
operation: ReplaceOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1154
lineSuspiciousness= 0.354
original statement= return new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence)
fixed statement= return null
generation= 517
ingredientScope= LOCAL
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|44|[]|
 ----
ProgramVariant 1044
 
time(sec)= 4085
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 372
lineSuspiciousness= 0.327
original statement= tailZone = rs.buildTailZone(id)
fixed statement= 
generation= 522
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|44|[]|
 ----
ProgramVariant 1090
 
time(sec)= 4280
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1141
lineSuspiciousness= 0.327
original statement= if ((iRules.size()) == 2) {
	org.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);
	org.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);
	if (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {
		return new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);
	} 
} 
fixed statement= 
generation= 545
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|44|[]|
 ----
ProgramVariant 1158
 
time(sec)= 4487
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 372
lineSuspiciousness= 0.327
original statement= tailZone = rs.buildTailZone(id)
fixed statement= 
generation= 579
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|44|[]|
 ----
ProgramVariant 1268
 
time(sec)= 4795
operation: ReplaceOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1458
lineSuspiciousness= 0.354
original statement= if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {
	if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
		java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
	} 
	if ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {
		tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend("-Summer") , tailZone.iEndRecurrence);
	} else {
		tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend("-Summer"));
	}
} 
fixed statement= if ((org.joda.time.tz.ZoneInfoCompiler.cStartOfYear) == null) {
	org.joda.time.tz.ZoneInfoCompiler.cStartOfYear = new org.joda.time.tz.ZoneInfoCompiler.DateTimeOfYear();
} 
generation= 634
ingredientScope= PACKAGE
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|44|[]|
 ----
ProgramVariant 1610
 
time(sec)= 5456
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1154
lineSuspiciousness= 0.354
original statement= return new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence)
fixed statement= 
generation= 805
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|44|[]|
 ----
ProgramVariant 1634
 
time(sec)= 5606
operation: ReplaceOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1460
lineSuspiciousness= 0.866
original statement= if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
	java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
} 
fixed statement= if ((org.joda.time.tz.ZoneInfoCompiler.cLenientISO) == null) {
	org.joda.time.tz.ZoneInfoCompiler.cLenientISO = org.joda.time.chrono.LenientChronology.getInstance(org.joda.time.chrono.ISOChronology.getInstanceUTC());
} 
generation= 817
ingredientScope= PACKAGE
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|44|[]|
 ----
ProgramVariant 1640
 
time(sec)= 5722
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1141
lineSuspiciousness= 0.327
original statement= if ((iRules.size()) == 2) {
	org.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);
	org.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);
	if (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {
		return new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);
	} 
} 
fixed statement= 
generation= 820
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|44|[]|
 ----
ProgramVariant 1734
 
time(sec)= 6079
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1458
lineSuspiciousness= 0.354
original statement= if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {
	if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
		java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
	} 
	if ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {
		tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend("-Summer") , tailZone.iEndRecurrence);
	} else {
		tailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend("-Summer"));
	}
} 
fixed statement= 
generation= 867
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|44|[]|
 ----
ProgramVariant 2080
 
time(sec)= 6843
operation: InsertBeforeOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 348
lineSuspiciousness= 0.306
original statement= int ruleSetCount = iRuleSets.size()
fixed statement= iRuleSets.add(new org.joda.time.tz.DateTimeZoneBuilder.RuleSet())
generation= 1040
ingredientScope= LOCAL
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|44|[]|
 ----
ProgramVariant 2084
 
time(sec)= 6959
operation: ReplaceOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1460
lineSuspiciousness= 0.866
original statement= if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
	java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
} 
fixed statement= if (id == null) {
	return null;
} 
generation= 1042
ingredientScope= PACKAGE
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|44|[]|
 ----
ProgramVariant 2086
 
time(sec)= 7068
operation: ReplaceOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 371
lineSuspiciousness= 0.327
original statement= if ((tailZone == null) && (i == (ruleSetCount - 1))) {
	tailZone = rs.buildTailZone(id);
} 
fixed statement= if (id == null) {
	throw new java.lang.IllegalArgumentException();
} 
generation= 1043
ingredientScope= LOCAL
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|44|[]|
 ----
ProgramVariant 2098
 
time(sec)= 7313
operation: RemoveOp
location= org.joda.time.tz.DateTimeZoneBuilder
line= 1460
lineSuspiciousness= 0.866
original statement= if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {
	java.lang.System.out.println(("Fixing duplicate recurrent name key - " + (tailZone.iStartRecurrence.getNameKey())));
} 
fixed statement= 
generation= 1049
ingredientScope= -
validation=
failing: |true|0|8|[]|
manual_regression: |false|1|11852|[warning(junit.framework.TestSuite$1): Class org.joda.time.chrono.gj.MainTest has no public constructor TestCase(String name) or TestCase()-]|
evo_regression: |true|0|44|[]|
[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:397) - Time Total(s): 7455.766


Node: grisou-10.nancy.grid5000.fr


Date: Sat Jan 28 11:26:36 CET 2017

removed classes 

zipped 

copied zip 


