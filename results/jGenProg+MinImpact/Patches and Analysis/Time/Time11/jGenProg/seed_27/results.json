{
    "date": "Sat Jan 28 11:26:36 CET 2017\n\nremoved classes \n\nzipped \n\ncopied zip \n\n", 
    "gens": "208", 
    "node": "grisou-10.nancy.grid5000.fr", 
    "operations": [
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 102, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "835", 
            "type": "RemoveOp", 
            "variant": 204
        }, 
        {
            "buggyStatement": "if ((iRules.size()) == 2) {\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);\n\tif (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\t\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n\t} \n} ", 
            "generation": 110, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1141, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "972", 
            "type": "RemoveOp", 
            "variant": 220
        }, 
        {
            "buggyStatement": "tailZone = rs.buildTailZone(id)", 
            "generation": 169, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 372, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "1494", 
            "type": "RemoveOp", 
            "variant": 338
        }, 
        {
            "buggyStatement": "if (tailZone != null) {\n\tif (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\t\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t\t} \n\t\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t\t} else {\n\t\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t\t}\n\t} \n} ", 
            "generation": 206, 
            "ingredients": null, 
            "patch": "if (id == null) {\n\treturn null;\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1457, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "PACKAGE", 
            "time": "1720", 
            "type": "ReplaceOp", 
            "variant": 412
        }, 
        {
            "buggyStatement": "if (tailZone != null) {\n\tif (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\t\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t\t} \n\t\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t\t} else {\n\t\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t\t}\n\t} \n} ", 
            "generation": 318, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1457, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "2408", 
            "type": "RemoveOp", 
            "variant": 636
        }, 
        {
            "buggyStatement": "if (tailZone != null) {\n\tif (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\t\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t\t} \n\t\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t\t} else {\n\t\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t\t}\n\t} \n} ", 
            "generation": 374, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1457, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "2706", 
            "type": "RemoveOp", 
            "variant": 748
        }, 
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 396, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "2871", 
            "type": "RemoveOp", 
            "variant": 792
        }, 
        {
            "buggyStatement": "if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t} \n\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t} else {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t}\n} ", 
            "generation": 397, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1458, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "2979", 
            "type": "RemoveOp", 
            "variant": 794
        }, 
        {
            "buggyStatement": "if ((iInitialNameKey) != null) {\n\treturn new org.joda.time.tz.DateTimeZoneBuilder.Transition(firstMillis , iInitialNameKey , ((iStandardOffset) + (iInitialSaveMillis)) , iStandardOffset);\n} ", 
            "generation": 423, 
            "ingredients": null, 
            "patch": "org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1011, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "PACKAGE", 
            "time": "3155", 
            "type": "InsertAfterOp", 
            "variant": 846
        }, 
        {
            "buggyStatement": "if ((tailZone == null) && (i == (ruleSetCount - 1))) {\n\ttailZone = rs.buildTailZone(id);\n} ", 
            "generation": 434, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 371, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "3413", 
            "type": "RemoveOp", 
            "variant": 868
        }, 
        {
            "buggyStatement": "if (tailZone != null) {\n\tif (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\t\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t\t} \n\t\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t\t} else {\n\t\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t\t}\n\t} \n} ", 
            "generation": 478, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1457, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "3750", 
            "type": "RemoveOp", 
            "variant": 956
        }, 
        {
            "buggyStatement": "return new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence)", 
            "generation": 517, 
            "ingredients": null, 
            "patch": "return null", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1154, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "LOCAL", 
            "time": "3967", 
            "type": "ReplaceOp", 
            "variant": 1034
        }, 
        {
            "buggyStatement": "tailZone = rs.buildTailZone(id)", 
            "generation": 522, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 372, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "4085", 
            "type": "RemoveOp", 
            "variant": 1044
        }, 
        {
            "buggyStatement": "if ((iRules.size()) == 2) {\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);\n\tif (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\t\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n\t} \n} ", 
            "generation": 545, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1141, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "4280", 
            "type": "RemoveOp", 
            "variant": 1090
        }, 
        {
            "buggyStatement": "tailZone = rs.buildTailZone(id)", 
            "generation": 579, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 372, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "4487", 
            "type": "RemoveOp", 
            "variant": 1158
        }, 
        {
            "buggyStatement": "if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t} \n\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t} else {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t}\n} ", 
            "generation": 634, 
            "ingredients": null, 
            "patch": "if ((org.joda.time.tz.ZoneInfoCompiler.cStartOfYear) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cStartOfYear = new org.joda.time.tz.ZoneInfoCompiler.DateTimeOfYear();\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1458, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "PACKAGE", 
            "time": "4795", 
            "type": "ReplaceOp", 
            "variant": 1268
        }, 
        {
            "buggyStatement": "return new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence)", 
            "generation": 805, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1154, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "5456", 
            "type": "RemoveOp", 
            "variant": 1610
        }, 
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 817, 
            "ingredients": null, 
            "patch": "if ((org.joda.time.tz.ZoneInfoCompiler.cLenientISO) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cLenientISO = org.joda.time.chrono.LenientChronology.getInstance(org.joda.time.chrono.ISOChronology.getInstanceUTC());\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "PACKAGE", 
            "time": "5606", 
            "type": "ReplaceOp", 
            "variant": 1634
        }, 
        {
            "buggyStatement": "if ((iRules.size()) == 2) {\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule startRule = iRules.get(0);\n\torg.joda.time.tz.DateTimeZoneBuilder.Rule endRule = iRules.get(1);\n\tif (((startRule.getToYear()) == (java.lang.Integer.MAX_VALUE)) && ((endRule.getToYear()) == (java.lang.Integer.MAX_VALUE))) {\n\t\treturn new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(id , iStandardOffset , startRule.iRecurrence , endRule.iRecurrence);\n\t} \n} ", 
            "generation": 820, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1141, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "5722", 
            "type": "RemoveOp", 
            "variant": 1640
        }, 
        {
            "buggyStatement": "if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {\n\tif (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\t\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n\t} \n\tif ((tailZone.iStartRecurrence.getSaveMillis()) > 0) {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence.renameAppend(\"-Summer\") , tailZone.iEndRecurrence);\n\t} else {\n\t\ttailZone = new org.joda.time.tz.DateTimeZoneBuilder.DSTZone(tailZone.getID() , tailZone.iStandardOffset , tailZone.iStartRecurrence , tailZone.iEndRecurrence.renameAppend(\"-Summer\"));\n\t}\n} ", 
            "generation": 867, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1458, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "6079", 
            "type": "RemoveOp", 
            "variant": 1734
        }, 
        {
            "buggyStatement": "int ruleSetCount = iRuleSets.size()", 
            "generation": 1040, 
            "ingredients": null, 
            "patch": "iRuleSets.add(new org.joda.time.tz.DateTimeZoneBuilder.RuleSet())", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 348, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "LOCAL", 
            "time": "6843", 
            "type": "InsertBeforeOp", 
            "variant": 2080
        }, 
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 1042, 
            "ingredients": null, 
            "patch": "if (id == null) {\n\treturn null;\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "PACKAGE", 
            "time": "6959", 
            "type": "ReplaceOp", 
            "variant": 2084
        }, 
        {
            "buggyStatement": "if ((tailZone == null) && (i == (ruleSetCount - 1))) {\n\ttailZone = rs.buildTailZone(id);\n} ", 
            "generation": 1043, 
            "ingredients": null, 
            "patch": "if (id == null) {\n\tthrow new java.lang.IllegalArgumentException();\n} ", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 371, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "LOCAL", 
            "time": "7068", 
            "type": "ReplaceOp", 
            "variant": 2086
        }, 
        {
            "buggyStatement": "if (org.joda.time.tz.ZoneInfoCompiler.verbose()) {\n\tjava.lang.System.out.println((\"Fixing duplicate recurrent name key - \" + (tailZone.iStartRecurrence.getNameKey())));\n} ", 
            "generation": 1049, 
            "ingredients": null, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.joda.time.tz.DateTimeZoneBuilder", 
                "line": 1460, 
                "lineSusp": "0"
            }, 
            "patchvalidation": {
                "evalresult": "true", 
                "evaltcall": "44", 
                "evaltcfailing": "0", 
                "fvalresult": "true", 
                "fvaltcall": "8", 
                "fvaltcfailing": "0", 
                "mvalresult": "false", 
                "mvaltcall": "11852", 
                "mvaltcfailing": "1"
            }, 
            "scope": "-", 
            "time": "7313", 
            "type": "RemoveOp", 
            "variant": 2098
        }
    ], 
    "ops": "0", 
    "programVariant": "204", 
    "timeEvaluation": null, 
    "timeTotal": "7455"
}