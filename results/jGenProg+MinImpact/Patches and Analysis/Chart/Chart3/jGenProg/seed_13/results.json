{
    "date": "Sun Jan 15 13:07:17 CET 2017\n\nremoved classes \n\nzipped \n\ncopied zip \n\n\n",
    "node": "graphene-84.nancy.grid5000.fr",
    "patches": [
        {
            "buggyStatement": "if ((item.getPeriod().compareTo(last)) > 0) {\n\torg.jfree.data.time.TimeSeries.this.data.add(item);\n\tadded = true;\n} else {\n\tint index = java.util.Collections.binarySearch(org.jfree.data.time.TimeSeries.this.data, item);\n\tif (index < 0) {\n\t\torg.jfree.data.time.TimeSeries.this.data.add(((-index) - 1), item);\n\t\tadded = true;\n\t} else {\n\t\tjava.lang.StringBuffer b = new java.lang.StringBuffer();\n\t\tb.append(\"You are attempting to add an observation for \");\n\t\tb.append(\"the time period \");\n\t\tb.append(item.getPeriod().toString());\n\t\tb.append(\" but the series already contains an observation\");\n\t\tb.append(\" for that time period. Duplicates are not \");\n\t\tb.append(\"permitted.  Try using the addOrUpdate() method.\");\n\t\tthrow new org.jfree.data.general.SeriesException(b.toString());\n\t}\n}",
            "generation": 870,
            "ingredients": null,
            "patch": "org.jfree.data.time.TimeSeriesDataItem oldItem = addOrUpdate(item.getPeriod(), item.getValue())",
            "patchLocation": {
                "className": "org.jfree.data.time.TimeSeries",
                "line": 604
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "142",
                "numberAllTestRegression": "4390",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "LOCAL",
            "time": "2436",
            "type": "InsertAfterOp",
            "variant": 1740
        },
        {
            "buggyStatement": "add(item, true)",
            "generation": 1504,
            "ingredients": null,
            "patch": "updateBoundsForRemovedItem(item)",
            "patchLocation": {
                "className": "org.jfree.data.time.TimeSeries",
                "line": 564
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "142",
                "numberAllTestRegression": "4390",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "LOCAL",
            "time": "4137",
            "type": "InsertAfterOp",
            "variant": 3008
        },
        {
            "buggyStatement": "if (item == null) {\n\tthrow new java.lang.IllegalArgumentException(\"Null 'item' argument.\");\n} ",
            "generation": 1552,
            "ingredients": null,
            "patch": "updateBoundsForRemovedItem(item)",
            "patchLocation": {
                "className": "org.jfree.data.time.TimeSeries",
                "line": 576
            },
            "patchvalidation": {
                "evoFailingTest": [
                    {
                        "failingClassName": "org.jfree.data.time.TimeSeries_ESTest",
                        "failingTestName": "074"
                    },
                    {
                        "failingClassName": "org.jfree.data.time.TimeSeries_ESTest",
                        "failingTestName": "116"
                    }
                ],
                "numberAllEvosuiteTestGenerated": "142",
                "numberAllTestRegression": "4390",
                "numberEvosuiteFailing": "2",
                "numberInitialFailing": "0"
            },
            "scope": "LOCAL",
            "time": "4313",
            "type": "InsertBeforeOp",
            "variant": 3104
        },
        {
            "buggyStatement": "if (notify) {\n\tfireSeriesChanged();\n} ",
            "generation": 2237,
            "ingredients": null,
            "patch": "findBoundsByIteration()",
            "patchLocation": {
                "className": "org.jfree.data.time.TimeSeries",
                "line": 637
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "142",
                "numberAllTestRegression": "4390",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "LOCAL",
            "time": "6031",
            "type": "InsertAfterOp",
            "variant": 4474
        },
        {
            "buggyStatement": "if ((org.jfree.data.time.TimeSeries.this.timePeriodClass) == null) {\n\torg.jfree.data.time.TimeSeries.this.timePeriodClass = c;\n} else {\n\tif (!(org.jfree.data.time.TimeSeries.this.timePeriodClass.equals(c))) {\n\t\tjava.lang.StringBuffer b = new java.lang.StringBuffer();\n\t\tb.append(\"You are trying to add data where the time period class \");\n\t\tb.append(\"is \");\n\t\tb.append(item.getPeriod().getClass().getName());\n\t\tb.append(\", but the TimeSeries is expecting an instance of \");\n\t\tb.append(org.jfree.data.time.TimeSeries.this.timePeriodClass.getName());\n\t\tb.append(\".\");\n\t\tthrow new org.jfree.data.general.SeriesException(b.toString());\n\t} \n}",
            "generation": 2396,
            "ingredients": null,
            "patch": "findBoundsByIteration()",
            "patchLocation": {
                "className": "org.jfree.data.time.TimeSeries",
                "line": 581
            },
            "patchvalidation": {
                "evoFailingTest": [],
                "numberAllEvosuiteTestGenerated": "142",
                "numberAllTestRegression": "4390",
                "numberEvosuiteFailing": "0",
                "numberInitialFailing": "0"
            },
            "scope": "LOCAL",
            "time": "6567",
            "type": "InsertAfterOp",
            "variant": 4792
        }
    ],
    "timeTotal": "7334"
}