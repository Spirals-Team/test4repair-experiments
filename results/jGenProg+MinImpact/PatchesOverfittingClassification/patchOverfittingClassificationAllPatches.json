[{"project": "Math", "result": [{"bugid": "Math2", "a_overfit": [], "b_overfit": [{"patch": "org.apache.commons.math3.distribution.HypergeometricDistribution_308_numericalVarianceIsCalculated = true_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.apache.commons.math3.distribution.HypergeometricDistribution_321_numericalVarianceIsCalculated = true_InsertBeforeOp", "count_overfit": 2}]}, {"bugid": "Math28", "a_overfit": [], "b_overfit": []}, {"bugid": "Math40", "a_overfit": [{"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_241_signChangeIndex = 2_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_265_signChangeIndex++_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_265_if (!((nextX > xA) && (nextX < xB))) {\n\tif ((signChangeIndex - start) >= (end - signChangeIndex)) {\n\t\t++start;\n\t} else {\n\t\t--end;\n\t}\n\tnextX = java.lang.Double.NaN;\n} _InsertBeforeOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_323_signChangeIndex = 2_InsertAfterOp", "count_overfit": 2}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_204_signChangeIndex++_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_299_signChangeIndex = 2_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_265_signChangeIndex++_ReplaceOp", "count_overfit": 5}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_204_signChangeIndex = 2_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_265_targetY = (-(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR)) * yA_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_265_x[signChangeIndex] = nextX_InsertBeforeOp", "count_overfit": 3}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_265_end = signChangeIndex_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_205_signChangeIndex = 2_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_200_signChangeIndex = 2_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_295_java.lang.System.arraycopy(x, 1, x, 0, nbPoints)_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_326_signChangeIndex = 2_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_246_signChangeIndex = 2_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_327_signChangeIndex = 2_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_269_signChangeIndex = 2_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_329_signChangeIndex++_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_235_signChangeIndex = 2_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_202_signChangeIndex = 2_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_241_signChangeIndex = 2_InsertBeforeOp", "count_overfit": 1}], "b_overfit": [{"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_265_signChangeIndex++_ReplaceOp", "count_overfit": 6}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_246_signChangeIndex = 2_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_241_signChangeIndex = 2_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_265_targetY = (-(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR)) * yA_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_260_signChangeIndex = 2_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_265_signChangeIndex++_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_323_signChangeIndex = 2_InsertAfterOp", "count_overfit": 2}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_202_signChangeIndex = 2_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_213_signChangeIndex = 2_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_204_signChangeIndex++_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_200_signChangeIndex = 2_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_265_if (!((nextX > xA) && (nextX < xB))) {\n\tif ((signChangeIndex - start) >= (end - signChangeIndex)) {\n\t\t++start;\n\t} else {\n\t\t--end;\n\t}\n\tnextX = java.lang.Double.NaN;\n} _InsertBeforeOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_241_signChangeIndex = 2_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_204_signChangeIndex = 2_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_295_java.lang.System.arraycopy(x, 1, x, 0, nbPoints)_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_326_signChangeIndex = 2_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver_265_x[signChangeIndex] = nextX_InsertBeforeOp", "count_overfit": 3}]}, {"bugid": "Math49", "a_overfit": [{"patch": "org.apache.commons.math.linear.OpenMapRealVector_667_entries.put(index, value)_ReplaceOp", "count_overfit": 8}], "b_overfit": [{"patch": "org.apache.commons.math.util.OpenIntToDoubleHashMap_396_int count = 1_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.util.OpenIntToDoubleHashMap_394_int count = 1_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.util.OpenIntToDoubleHashMap_399_remove_RemoveOp", "count_overfit": 13}, {"patch": "org.apache.commons.math.util.OpenIntToDoubleHashMap_395_int count = 1_InsertAfterOp", "count_overfit": 2}, {"patch": "org.apache.commons.math.util.OpenIntToDoubleHashMap_397_int count = 1_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.OpenMapRealVector_667_entries.put(index, value)_ReplaceOp", "count_overfit": 23}, {"patch": "org.apache.commons.math.util.OpenIntToDoubleHashMap_398_int count = 1_InsertAfterOp", "count_overfit": 1}]}, {"bugid": "Math5", "a_overfit": [{"patch": "org.apache.commons.math3.complex.Complex_305_return org.apache.commons.math3.complex.Complex.INF_ReplaceOp", "count_overfit": 21}], "b_overfit": []}, {"bugid": "Math50", "a_overfit": [{"patch": "org.apache.commons.math.analysis.solvers.BaseSecantSolver_188_f0 = computeObjectiveValue(x0)_ReplaceOp", "count_overfit": 16}, {"patch": "org.apache.commons.math.analysis.solvers.BaseSecantSolver_188_f0 = f1_ReplaceOp", "count_overfit": 17}, {"patch": "org.apache.commons.math.analysis.solvers.BaseSecantSolver_188_org.apache.commons.math.analysis.solvers.BaseSecantSolver.this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE_ReplaceOp", "count_overfit": 10}, {"patch": "org.apache.commons.math.analysis.solvers.BaseSecantSolver_189_f0 = f1_InsertAfterOp", "count_overfit": 4}, {"patch": "org.apache.commons.math.analysis.solvers.BaseSecantSolver_188_inverted = !inverted_ReplaceOp", "count_overfit": 16}, {"patch": "org.apache.commons.math.analysis.solvers.BaseSecantSolver_189_return doSolve()_InsertAfterOp", "count_overfit": 5}, {"patch": "org.apache.commons.math.analysis.solvers.BaseSecantSolver_188_x1 = x_ReplaceOp", "count_overfit": 17}, {"patch": "org.apache.commons.math.analysis.solvers.BaseSecantSolver_188_remove_RemoveOp", "count_overfit": 17}, {"patch": "org.apache.commons.math.analysis.solvers.BaseSecantSolver_189_f0 = f1_ReplaceOp", "count_overfit": 16}, {"patch": "org.apache.commons.math.analysis.solvers.BaseSecantSolver_188_f1 = fx_ReplaceOp", "count_overfit": 17}], "b_overfit": [{"patch": "org.apache.commons.math.analysis.solvers.BaseSecantSolver_188_inverted = !inverted_ReplaceOp", "count_overfit": 2}, {"patch": "org.apache.commons.math.analysis.solvers.BaseSecantSolver_188_org.apache.commons.math.analysis.solvers.BaseSecantSolver.this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE_ReplaceOp", "count_overfit": 4}]}, {"bugid": "Math53", "a_overfit": [{"patch": "org.apache.commons.math.complex.Complex_152_if ((isNaN) || (rhs.isNaN)) {\n\treturn org.apache.commons.math.complex.Complex.NaN;\n} _InsertBeforeOp", "count_overfit": 20}, {"patch": "org.apache.commons.math.complex.Complex_152_if ((isNaN) || (rhs.isNaN)) {\n\treturn org.apache.commons.math.complex.Complex.NaN;\n} _InsertAfterOp", "count_overfit": 19}, {"patch": "org.apache.commons.math.complex.Complex_153_if ((isNaN) || (rhs.isNaN)) {\n\treturn org.apache.commons.math.complex.Complex.NaN;\n} _InsertBeforeOp", "count_overfit": 21}], "b_overfit": [{"patch": "org.apache.commons.math.complex.Complex_152_if ((isNaN) || (rhs.isNaN)) {\n\treturn org.apache.commons.math.complex.Complex.NaN;\n} _InsertBeforeOp", "count_overfit": 26}]}, {"bugid": "Math70", "a_overfit": [{"patch": "org.apache.commons.math.analysis.solvers.BisectionSolver_72_return solve(f, initial, max)_ReplaceOp", "count_overfit": 27}, {"patch": "org.apache.commons.math.analysis.solvers.BisectionSolver_72_return solve(f, min, max)_ReplaceOp", "count_overfit": 27}], "b_overfit": [{"patch": "org.apache.commons.math.analysis.solvers.BisectionSolver_72_return solve(f, initial, max)_ReplaceOp", "count_overfit": 27}]}, {"bugid": "Math71", "a_overfit": [], "b_overfit": []}, {"bugid": "Math73", "a_overfit": [{"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_132_verifyBracketing(min, max, f)_InsertAfterOp", "count_overfit": 26}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_107_verifyBracketing(min, max, f)_InsertAfterOp", "count_overfit": 28}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_138_return solve(f, min, max)_ReplaceOp", "count_overfit": 29}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_120_verifyBracketing(min, max, f)_InsertBeforeOp", "count_overfit": 25}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_125_verifyBracketing(min, max, f)_InsertBeforeOp", "count_overfit": 27}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_113_verifyBracketing(min, max, f)_InsertAfterOp", "count_overfit": 27}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_138_return solve(f, min, initial)_ReplaceOp", "count_overfit": 29}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_114_verifyBracketing(min, max, f)_InsertBeforeOp", "count_overfit": 26}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_138_verifyBracketing(min, max, f)_InsertBeforeOp", "count_overfit": 28}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_125_verifyBracketing(min, max, f)_InsertAfterOp", "count_overfit": 25}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_113_verifyBracketing(min, max, f)_InsertBeforeOp", "count_overfit": 27}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_126_verifyBracketing(min, max, f)_InsertAfterOp", "count_overfit": 25}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_138_return solve(f, initial, max)_ReplaceOp", "count_overfit": 29}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_126_verifyBracketing(min, max, f)_InsertBeforeOp", "count_overfit": 27}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_132_verifyBracketing(min, max, f)_InsertBeforeOp", "count_overfit": 26}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_114_verifyBracketing(min, max, f)_InsertAfterOp", "count_overfit": 28}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_120_verifyBracketing(min, max, f)_InsertAfterOp", "count_overfit": 29}], "b_overfit": [{"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_132_verifyBracketing(min, max, f)_InsertAfterOp", "count_overfit": 17}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_107_verifyBracketing(min, max, f)_InsertAfterOp", "count_overfit": 29}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_138_return solve(f, min, max)_ReplaceOp", "count_overfit": 27}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_120_verifyBracketing(min, max, f)_InsertBeforeOp", "count_overfit": 24}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_125_verifyBracketing(min, max, f)_InsertBeforeOp", "count_overfit": 26}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_113_verifyBracketing(min, max, f)_InsertAfterOp", "count_overfit": 28}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_138_return solve(f, min, initial)_ReplaceOp", "count_overfit": 26}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_114_verifyBracketing(min, max, f)_InsertBeforeOp", "count_overfit": 27}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_138_verifyBracketing(min, max, f)_InsertBeforeOp", "count_overfit": 19}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_125_verifyBracketing(min, max, f)_InsertAfterOp", "count_overfit": 24}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_113_verifyBracketing(min, max, f)_InsertBeforeOp", "count_overfit": 28}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_138_return solve(f, initial, max)_ReplaceOp", "count_overfit": 26}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_126_verifyBracketing(min, max, f)_InsertAfterOp", "count_overfit": 17}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_126_verifyBracketing(min, max, f)_InsertBeforeOp", "count_overfit": 25}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_132_verifyBracketing(min, max, f)_InsertBeforeOp", "count_overfit": 18}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_114_verifyBracketing(min, max, f)_InsertAfterOp", "count_overfit": 27}, {"patch": "org.apache.commons.math.analysis.solvers.BrentSolver_120_verifyBracketing(min, max, f)_InsertAfterOp", "count_overfit": 27}]}, {"bugid": "Math78", "a_overfit": [], "b_overfit": []}, {"bugid": "Math8", "a_overfit": [{"patch": "org.apache.commons.math3.distribution.DiscreteDistribution_189_remove_RemoveOp", "count_overfit": 18}, {"patch": "org.apache.commons.math3.distribution.DiscreteDistribution_190_remove_RemoveOp", "count_overfit": 18}], "b_overfit": [{"patch": "org.apache.commons.math3.distribution.DiscreteDistribution_189_remove_RemoveOp", "count_overfit": 10}, {"patch": "org.apache.commons.math3.distribution.DiscreteDistribution_190_remove_RemoveOp", "count_overfit": 10}]}, {"bugid": "Math80", "a_overfit": [{"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1139_qMax = java.lang.Math.max(qMax, java.lang.Math.max(work[(3 + (pingPong))], work[(7 + (pingPong))]))_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1139_tau = -(dMin)_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1139_tType = -5_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_601_findEigenvalues()_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1133_if ((tType) == (-18)) {\n\tg = 0.25 * 0.333;\n} else {\n\tg = 0.25;\n}_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1139_cachedV = org.apache.commons.math.linear.MatrixUtils.createRealMatrix(n, n)_ReplaceOp", "count_overfit": 2}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1133_if ((dMin1) > 0.0) {\n\ttau = ((tau) + (dMin)) * (1.0 - (2.0 * (org.apache.commons.math.util.MathUtils.EPSILON)));\n\ttType -= 11;\n} else {\n\ttau *= 0.25;\n\ttType -= 12;\n}_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1139_cachedD = org.apache.commons.math.linear.MatrixUtils.createRealDiagonalMatrix(realEigenvalues)_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1139_g = 0.25_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1139_tau = 0.25 * (dMin2)_ReplaceOp", "count_overfit": 2}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1139_dMin1 = dMin_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_840_remove_RemoveOp", "count_overfit": 5}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1136_for (int i = 0 ; i < (squaredSecondary.length) ; ++i) {\n\tfinal double s = secondary[i];\n\tsquaredSecondary[i] = s * s;\n}_ReplaceOp", "count_overfit": 9}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1139_remove_RemoveOp", "count_overfit": 18}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1136_remove_RemoveOp", "count_overfit": 15}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1139_squaredSecondary = new double[secondary.length]_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1137_remove_RemoveOp", "count_overfit": 19}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1139_tau = 0.25 * (dMin1)_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1139_dMin = java.lang.Math.min(dMin, dN)_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1139_pingPong = 1 - (pingPong)_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1136_for (int i = 0 ; i < (realEigenvalues.length) ; ++i) {\n\tif (((realEigenvalues[i]) == 0) && ((imagEigenvalues[i]) == 0)) {\n\t\treturn false;\n\t} \n}_ReplaceOp", "count_overfit": 11}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1139_tType = -7_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1135_for (int i = 0 ; i < (realEigenvalues.length) ; ++i) {\n\tif (((realEigenvalues[i]) == 0) && ((imagEigenvalues[i]) == 0)) {\n\t\treturn false;\n\t} \n}_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1139_dMin = dN1_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1262_flipIfWarranted(n, 2)_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1139_org.apache.commons.math.linear.EigenDecompositionImpl.this.secondary = secondary.clone()_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1139_tType = -9_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1217_pingPong = 1 - (pingPong)_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1139_tau = 0.0_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1139_dN2 = 0_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1139_cachedVt = null_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1133_remove_RemoveOp", "count_overfit": 4}], "b_overfit": [{"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_601_findEigenvalues()_InsertAfterOp", "count_overfit": 1}]}, {"bugid": "Math81", "a_overfit": [{"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1480_imagEigenvalues = new double[main.length]_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1543_remove_RemoveOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1052_work[(((4 * deflatedEnd) - 3) - (pingPong))] = 0.0_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1544_s = (gam * (1 - (java.lang.Math.sqrt(a2)))) / (1 + a2)_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1480_dMin2 = dMin_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1526_remove_RemoveOp", "count_overfit": 3}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1543_if ((cachedD) == null) {\n\tcachedD = org.apache.commons.math.linear.MatrixUtils.createRealDiagonalMatrix(realEigenvalues);\n} _ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1484_remove_RemoveOp", "count_overfit": 3}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1544_dMin = -0.0_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1480_tau = (gam * (1 - (java.lang.Math.sqrt(a2)))) / (1 + a2)_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1480_remove_RemoveOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1521_dMin2 = dMin_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1544_remove_RemoveOp", "count_overfit": 2}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1480_sigmaLow = 0_ReplaceOp", "count_overfit": 1}], "b_overfit": [{"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1484_np = nn - 13_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1043_dMin = dN_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1520_if (((100 * (java.lang.Math.max(b2, b1))) < a2) || (cnst1 < a2)) {\n\tbreak;\n} _ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1689_dMin = 0.0_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1480_tType = 0_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1480_tau = ((tau) + (dMin)) * (1.0 - (2.0 * (org.apache.commons.math.util.MathUtils.EPSILON)))_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1544_s = (gam * (1 - (java.lang.Math.sqrt(a2)))) / (1 + a2)_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1526_if ((dMin1) == (dN1)) {\n\ttau = 0.5 * (dMin1);\n} _ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1521_tType = -2_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1544_dN = 0_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1480_sigmaLow = 0_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1480_dMin2 = 0_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1484_tau = java.lang.Math.max(s, (0.333 * (dMin)))_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1544_org.apache.commons.math.linear.EigenDecompositionImpl.this.splitTolerance = splitTolerance_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1438_dMin = dN_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1484_dMin = java.lang.Math.min(dMin, dN)_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1484_remove_RemoveOp", "count_overfit": 9}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1484_tau = java.lang.Math.max(s, (a2 * (1 - (cnst2 * b2))))_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1052_work[(((4 * deflatedEnd) - 3) - (pingPong))] = 0.0_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1480_dMin2 = dMin_ReplaceOp", "count_overfit": 2}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1480_cachedD = org.apache.commons.math.linear.MatrixUtils.createRealDiagonalMatrix(realEigenvalues)_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1543_if ((cachedD) == null) {\n\tcachedD = org.apache.commons.math.linear.MatrixUtils.createRealDiagonalMatrix(realEigenvalues);\n} _ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1480_tau = -(dMin)_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1521_tType = -4_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1521_cachedD = null_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1003_dMin = dN_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1484_b2 = b2 + b1_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1485_b2 = (work[(nn - 9)]) / (work[(nn - 11)])_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1480_org.apache.commons.math.linear.EigenDecompositionImpl.this.secondary = secondary.clone()_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1521_remove_RemoveOp", "count_overfit": 8}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1526_remove_RemoveOp", "count_overfit": 4}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1521_dMin = 0.0_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1520_if ((work[(nn - 9)]) > (work[(nn - 11)])) {\n\treturn ;\n} _ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1480_upperSpectra = java.lang.Double.NEGATIVE_INFINITY_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1544_tau = 0.25 * (dMin2)_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1480_b1 = b2_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1484_tType = -2_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1520_s = java.lang.Math.min(s, (a2 - (b1 + b2)))_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1536_b2 = (work[(nn - 5)]) / (work[(nn - 7)])_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1480_b2 = (work[(nn - 5)]) / (work[(nn - 7)])_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1313_dMin = dN1_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1543_if ((dMin1) > 0.0) {\n\ttau = ((tau) + (dMin)) * (1.0 - (2.0 * (org.apache.commons.math.util.MathUtils.EPSILON)));\n\ttType -= 11;\n} else {\n\ttau *= 0.25;\n\ttType -= 12;\n}_ReplaceOp", "count_overfit": 2}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1543_remove_RemoveOp", "count_overfit": 5}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1484_imagEigenvalues = new double[main.length]_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_828_initialSplits(n)_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1544_tau = (gam * (1 - (java.lang.Math.sqrt(a2)))) / (1 + a2)_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1544_tau = java.lang.Math.max(s, (0.333 * (dMin)))_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_828_initialSplits(n)_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1521_tType = -8_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1543_if (((work[(np - 8)]) > b2) || ((work[(np - 4)]) > b1)) {\n\treturn ;\n} _ReplaceOp", "count_overfit": 2}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1543_if ((dN) > b1) {\n\ts = (dN) - b1;\n} _ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1484_lowerSpectra = java.lang.Double.POSITIVE_INFINITY_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1526_if ((work[(nn - 5)]) > (work[(nn - 7)])) {\n\treturn ;\n} _ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1521_dMin2 = dMin_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1480_g = 0.25_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1544_cachedVt = null_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1484_b2 = (work[(nn - 9)]) / (work[(nn - 11)])_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1480_tau = (gam * (1 - (java.lang.Math.sqrt(a2)))) / (1 + a2)_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1003_dN2 = 0_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1484_org.apache.commons.math.linear.EigenDecompositionImpl.this.main = main.clone()_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1543_if (b2 != 0.0) {\n\tfor (int i4 = ((4 * end) - 10) + (pingPong) ; i4 >= (((4 * start) + 2) + (pingPong)) ; i4 -= 4) {\n\t\tfinal double oldB1 = b1;\n\t\tif ((work[i4]) > (work[(i4 - 2)])) {\n\t\t\treturn ;\n\t\t} \n\t\tb1 = b1 * ((work[i4]) / (work[(i4 - 2)]));\n\t\tb2 = b2 + b1;\n\t\tif ((100 * (java.lang.Math.max(b1, oldB1))) < b2) {\n\t\t\tbreak;\n\t\t} \n\t}\n} _ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1544_tType = -8_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1544_b2 = (work[(nn - 5)]) / (work[(nn - 7)])_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1484_tType = -6_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1526_if ((tType) < (-22)) {\n\ttau = 0.0;\n} else {\n\tif ((dMin1) > 0.0) {\n\t\ttau = ((tau) + (dMin)) * (1.0 - (2.0 * (org.apache.commons.math.util.MathUtils.EPSILON)));\n\t\ttType -= 11;\n\t} else {\n\t\ttau *= 0.25;\n\t\ttType -= 12;\n\t}\n}_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1544_a2 = cnst3 * a2_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1520_if ((100 * b1) < b2) {\n\tbreak;\n} _ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1682_dMin = dN_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1480_np = nn - 9_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1536_if (b2 != 0.0) {\n\tfor (int i4 = ((4 * end) - 9) + (pingPong) ; i4 >= (((4 * start) + 2) + (pingPong)) ; i4 -= 4) {\n\t\tif ((work[i4]) > (work[(i4 - 2)])) {\n\t\t\treturn ;\n\t\t} \n\t\tb1 *= (work[i4]) / (work[(i4 - 2)]);\n\t\tb2 += b1;\n\t\tif ((100 * b1) < b2) {\n\t\t\tbreak;\n\t\t} \n\t}\n} _InsertBeforeOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1521_org.apache.commons.math.linear.EigenDecompositionImpl.this.main = main.clone()_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1543_if (b2 == 0.0) {\n\tbreak;\n} _ReplaceOp", "count_overfit": 2}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1520_if ((dMin1) == (dN1)) {\n\ttau = 0.5 * (dMin1);\n} _ReplaceOp", "count_overfit": 2}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1520_if (a2 > (b1 + b2)) {\n\ts = java.lang.Math.min(s, (a2 - (b1 + b2)));\n} _ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1540_for (int i4 = ((4 * end) - 9) + (pingPong) ; i4 >= (((4 * start) + 2) + (pingPong)) ; i4 -= 4) {\n\tif ((work[i4]) > (work[(i4 - 2)])) {\n\t\treturn ;\n\t} \n\tb1 *= (work[i4]) / (work[(i4 - 2)]);\n\tb2 += b1;\n\tif ((100 * b1) < b2) {\n\t\tbreak;\n\t} \n}_InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1544_tType = -3_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1480_g = 0.25 * 0.333_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1484_dMin = dN1_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1480_remove_RemoveOp", "count_overfit": 7}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1544_remove_RemoveOp", "count_overfit": 6}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1480_imagEigenvalues = new double[main.length]_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1544_eigenvectors = null_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1544_tType = -9_ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1520_remove_RemoveOp", "count_overfit": 7}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1521_if (a2 > (b1 + b2)) {\n\ts = java.lang.Math.min(s, (a2 - (b1 + b2)));\n} _InsertAfterOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1543_if ((dMin) <= 0.0) {\n\ttau = -(dMin);\n\ttType = -1;\n\treturn ;\n} _ReplaceOp", "count_overfit": 1}, {"patch": "org.apache.commons.math.linear.EigenDecompositionImpl_1480_squaredSecondary = new double[secondary.length]_ReplaceOp", "count_overfit": 1}]}, {"bugid": "Math82", "a_overfit": [], "b_overfit": []}, {"bugid": "Math84", "a_overfit": [], "b_overfit": []}, {"bugid": "Math85", "a_overfit": [{"patch": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils_198_remove_RemoveOp", "count_overfit": 29}, {"patch": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils_198_if (maximumIterations <= 0) {\n\tthrow org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\", maximumIterations);\n} _ReplaceOp", "count_overfit": 28}, {"patch": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils_199_remove_RemoveOp", "count_overfit": 30}, {"patch": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils_198_if (function == null) {\n\tthrow org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(\"function is null\");\n} _ReplaceOp", "count_overfit": 22}, {"patch": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils_198_if (((initial < lowerBound) || (initial > upperBound)) || (lowerBound >= upperBound)) {\n\tthrow org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\", lowerBound, initial, upperBound);\n} _ReplaceOp", "count_overfit": 20}], "b_overfit": [{"patch": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils_198_remove_RemoveOp", "count_overfit": 29}, {"patch": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils_198_if (maximumIterations <= 0) {\n\tthrow org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\", maximumIterations);\n} _ReplaceOp", "count_overfit": 28}, {"patch": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils_199_remove_RemoveOp", "count_overfit": 30}, {"patch": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils_198_if (function == null) {\n\tthrow org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(\"function is null\");\n} _ReplaceOp", "count_overfit": 22}, {"patch": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils_198_if (((initial < lowerBound) || (initial > upperBound)) || (lowerBound >= upperBound)) {\n\tthrow org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\", lowerBound, initial, upperBound);\n} _ReplaceOp", "count_overfit": 20}]}, {"bugid": "Math95", "a_overfit": [{"patch": "org.apache.commons.math.distribution.FDistributionImpl_147_ret = 0.0_InsertAfterOp", "count_overfit": 5}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_147_ret = 1.0_ReplaceOp", "count_overfit": 24}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_148_return 1.0_ReplaceOp", "count_overfit": 17}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_148_return java.lang.Double.MIN_VALUE_ReplaceOp", "count_overfit": 7}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_147_ret = 0.0_ReplaceOp", "count_overfit": 10}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_148_return 0_ReplaceOp", "count_overfit": 8}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_148_return p_ReplaceOp", "count_overfit": 6}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_148_ret = 0.5_InsertBeforeOp", "count_overfit": 10}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_148_return numeratorDegreesOfFreedom_ReplaceOp", "count_overfit": 7}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_148_ret = 0.0_InsertBeforeOp", "count_overfit": 4}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_147_ret = 1.0_InsertAfterOp", "count_overfit": 13}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_148_return denominatorDegreesOfFreedom_ReplaceOp", "count_overfit": 4}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_147_ret = 0.5_ReplaceOp", "count_overfit": 24}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_148_return 0.0_ReplaceOp", "count_overfit": 5}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_147_ret = 0.5_InsertAfterOp", "count_overfit": 12}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_148_ret = 1.0_InsertBeforeOp", "count_overfit": 10}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_148_return 1_ReplaceOp", "count_overfit": 12}], "b_overfit": [{"patch": "org.apache.commons.math.distribution.FDistributionImpl_147_ret = 0.0_InsertAfterOp", "count_overfit": 10}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_147_ret = 1.0_ReplaceOp", "count_overfit": 4}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_147_ret = 0.0_ReplaceOp", "count_overfit": 22}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_148_return 0_ReplaceOp", "count_overfit": 16}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_148_return java.lang.Double.MIN_VALUE_ReplaceOp", "count_overfit": 17}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_148_return 1.0_ReplaceOp", "count_overfit": 3}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_148_ret = 1.0_InsertBeforeOp", "count_overfit": 3}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_148_ret = 0.5_InsertBeforeOp", "count_overfit": 10}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_148_return numeratorDegreesOfFreedom_ReplaceOp", "count_overfit": 17}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_148_ret = 0.0_InsertBeforeOp", "count_overfit": 12}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_147_ret = 1.0_InsertAfterOp", "count_overfit": 2}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_148_return denominatorDegreesOfFreedom_ReplaceOp", "count_overfit": 11}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_147_ret = 0.5_ReplaceOp", "count_overfit": 22}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_148_return 0.0_ReplaceOp", "count_overfit": 11}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_147_ret = 0.5_InsertAfterOp", "count_overfit": 11}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_148_return p_ReplaceOp", "count_overfit": 15}, {"patch": "org.apache.commons.math.distribution.FDistributionImpl_148_return 1_ReplaceOp", "count_overfit": 3}]}]}, {"project": "Chart", "result": [{"bugid": "Chart1", "a_overfit": [{"patch": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer_1797_if (dataset == null) {\n\treturn null;\n} _ReplaceOp", "count_overfit": 1}], "b_overfit": [{"patch": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer_1797_if (dataset == null) {\n\treturn null;\n} _ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer_1797_if (dataset != null) {\n\torg.jfree.chart.renderer.category.AbstractCategoryItemRenderer.this.rowCount = dataset.getRowCount();\n\torg.jfree.chart.renderer.category.AbstractCategoryItemRenderer.this.columnCount = dataset.getColumnCount();\n} else {\n\torg.jfree.chart.renderer.category.AbstractCategoryItemRenderer.this.rowCount = 0;\n\torg.jfree.chart.renderer.category.AbstractCategoryItemRenderer.this.columnCount = 0;\n}_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer_1797_remove_RemoveOp", "count_overfit": 1}, {"patch": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer_1798_remove_RemoveOp", "count_overfit": 1}]}, {"bugid": "Chart13", "a_overfit": [], "b_overfit": [{"patch": "org.jfree.chart.block.AbstractBlock_492_org.jfree.chart.block.AbstractBlock.this.width = 0.0_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.block.BorderArrangement_453_if ((org.jfree.chart.block.BorderArrangement.this.leftBlock) != null) {\n\torg.jfree.chart.block.BorderArrangement.this.leftBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0 , h[0] , w[2] , h[2]));\n} _ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.block.AbstractBlock_474_org.jfree.chart.block.AbstractBlock.this.width = 0.0_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.jfree.chart.block.BorderArrangement_297_org.jfree.chart.block.BorderArrangement.this.leftBlock = null_ReplaceOp", "count_overfit": 2}, {"patch": "org.jfree.chart.block.BorderArrangement_444_if ((org.jfree.chart.block.BorderArrangement.this.centerBlock) != null) {\n\torg.jfree.chart.block.BorderArrangement.this.centerBlock.setBounds(new java.awt.geom.Rectangle2D.Double(w[2] , h[0] , w[4] , h[4]));\n} _ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.block.BorderArrangement_450_org.jfree.chart.block.BorderArrangement.this.centerBlock = null_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.block.BorderArrangement_444_remove_RemoveOp", "count_overfit": 2}, {"patch": "org.jfree.chart.block.BorderArrangement_322_org.jfree.chart.block.BorderArrangement.this.rightBlock = null_InsertAfterOp", "count_overfit": 1}, {"patch": "org.jfree.chart.block.BorderArrangement_298_org.jfree.chart.block.BorderArrangement.this.leftBlock = null_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.jfree.chart.block.BorderArrangement_450_w[0] = constraint.getWidth()_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.block.BorderArrangement_453_if ((org.jfree.chart.block.BorderArrangement.this.topBlock) != null) {\n\torg.jfree.chart.block.BorderArrangement.this.topBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0 , 0.0 , w[0] , h[0]));\n} _ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.block.BorderArrangement_444_if ((org.jfree.chart.block.BorderArrangement.this.topBlock) != null) {\n\torg.jfree.chart.block.BorderArrangement.this.topBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0 , 0.0 , w[0] , h[0]));\n} _ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.block.BorderArrangement_444_if ((org.jfree.chart.block.BorderArrangement.this.rightBlock) != null) {\n\torg.jfree.chart.block.BorderArrangement.this.rightBlock.setBounds(new java.awt.geom.Rectangle2D.Double(((w[2]) + (w[4])) , h[0] , w[3] , h[3]));\n} _ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.block.BorderArrangement_453_if ((org.jfree.chart.block.BorderArrangement.this.rightBlock) != null) {\n\torg.jfree.chart.block.BorderArrangement.this.rightBlock.setBounds(new java.awt.geom.Rectangle2D.Double(((w[2]) + (w[4])) , h[0] , w[3] , h[3]));\n} _ReplaceOp", "count_overfit": 2}, {"patch": "org.jfree.chart.block.BorderArrangement_443_org.jfree.chart.block.BorderArrangement.this.rightBlock = null_ReplaceOp", "count_overfit": 2}, {"patch": "org.jfree.chart.block.BorderArrangement_450_org.jfree.chart.block.BorderArrangement.this.rightBlock = null_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.block.AbstractBlock_477_org.jfree.chart.block.AbstractBlock.this.width = 0.0_InsertAfterOp", "count_overfit": 1}, {"patch": "org.jfree.chart.block.BorderArrangement_450_h[2] = ((constraint.getHeight()) - (h[1])) - (h[0])_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.block.BorderArrangement_312_org.jfree.chart.block.BorderArrangement.this.leftBlock = null_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.block.AbstractBlock_476_org.jfree.chart.block.AbstractBlock.this.width = 0.0_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.block.BorderArrangement_450_h[4] = h[2]_ReplaceOp", "count_overfit": 2}, {"patch": "org.jfree.chart.block.BorderArrangement_298_org.jfree.chart.block.BorderArrangement.this.leftBlock = null_InsertAfterOp", "count_overfit": 1}, {"patch": "org.jfree.chart.block.BorderArrangement_308_org.jfree.chart.block.BorderArrangement.this.leftBlock = null_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.jfree.chart.block.BorderArrangement_444_if ((org.jfree.chart.block.BorderArrangement.this.bottomBlock) != null) {\n\torg.jfree.chart.block.BorderArrangement.this.bottomBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0 , ((h[0]) + (h[2])) , w[1] , h[1]));\n} _ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.block.AbstractBlock_489_org.jfree.chart.block.AbstractBlock.this.width = 0.0_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.jfree.chart.block.BorderArrangement_450_w[1] = w[0]_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.block.AbstractBlock_489_org.jfree.chart.block.AbstractBlock.this.width = 0.0_InsertAfterOp", "count_overfit": 1}, {"patch": "org.jfree.chart.block.BorderArrangement_453_if ((org.jfree.chart.block.BorderArrangement.this.bottomBlock) != null) {\n\torg.jfree.chart.block.BorderArrangement.this.bottomBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0 , ((h[0]) + (h[2])) , w[1] , h[1]));\n} _ReplaceOp", "count_overfit": 2}, {"patch": "org.jfree.chart.block.BorderArrangement_323_org.jfree.chart.block.BorderArrangement.this.leftBlock = null_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.jfree.chart.block.BorderArrangement_427_org.jfree.chart.block.BorderArrangement.this.leftBlock = null_InsertAfterOp", "count_overfit": 1}, {"patch": "org.jfree.chart.block.BorderArrangement_444_if ((org.jfree.chart.block.BorderArrangement.this.leftBlock) != null) {\n\torg.jfree.chart.block.BorderArrangement.this.leftBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0 , h[0] , w[2] , h[2]));\n} _ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.block.BorderArrangement_450_org.jfree.chart.block.BorderArrangement.this.topBlock = null_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.block.BorderArrangement_453_remove_RemoveOp", "count_overfit": 2}, {"patch": "org.jfree.chart.block.BorderArrangement_450_h[3] = h[2]_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.block.BorderArrangement_450_remove_RemoveOp", "count_overfit": 2}, {"patch": "org.jfree.chart.block.AbstractBlock_475_org.jfree.chart.block.AbstractBlock.this.width = 0.0_ReplaceOp", "count_overfit": 1}]}, {"bugid": "Chart15", "a_overfit": [{"patch": "org.jfree.chart.plot.PiePlot3D_252_if (org.jfree.data.general.DatasetUtilities.isEmptyOrNull(getDataset())) {\n\tdrawNoDataMessage(g2, plotArea);\n\tg2.setClip(savedClip);\n\tdrawOutline(g2, plotArea);\n\treturn ;\n} _InsertAfterOp", "count_overfit": 1}, {"patch": "org.jfree.chart.plot.PiePlot3D_272_if (org.jfree.data.general.DatasetUtilities.isEmptyOrNull(getDataset())) {\n\tdrawNoDataMessage(g2, plotArea);\n\tg2.setClip(savedClip);\n\tdrawOutline(g2, plotArea);\n\treturn ;\n} _ReplaceOp", "count_overfit": 4}, {"patch": "org.jfree.chart.JFreeChart_1219_org.jfree.chart.JFreeChart.this.subtitles.remove(title)_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.JFreeChart_1219_g2.setXORMode(java.awt.Color.orange)_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.plot.PiePlot3D_268_if (org.jfree.data.general.DatasetUtilities.isEmptyOrNull(getDataset())) {\n\tdrawNoDataMessage(g2, plotArea);\n\tg2.setClip(savedClip);\n\tdrawOutline(g2, plotArea);\n\treturn ;\n} _InsertBeforeOp", "count_overfit": 1}, {"patch": "org.jfree.chart.JFreeChart_1219_removeSubtitle(getLegend())_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.plot.PiePlot3D_252_if (org.jfree.data.general.DatasetUtilities.isEmptyOrNull(getDataset())) {\n\tdrawNoDataMessage(g2, plotArea);\n\tg2.setClip(savedClip);\n\tdrawOutline(g2, plotArea);\n\treturn ;\n} _InsertBeforeOp", "count_overfit": 1}, {"patch": "org.jfree.chart.JFreeChart_1219_setTextAntiAlias(java.awt.RenderingHints.VALUE_TEXT_ANTIALIAS_OFF)_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.JFreeChart_1219_g2.setPaintMode()_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.JFreeChart_1219_remove_RemoveOp", "count_overfit": 6}, {"patch": "org.jfree.chart.plot.PiePlot3D_247_if (org.jfree.data.general.DatasetUtilities.isEmptyOrNull(getDataset())) {\n\tdrawNoDataMessage(g2, plotArea);\n\tg2.setClip(savedClip);\n\tdrawOutline(g2, plotArea);\n\treturn ;\n} _ReplaceOp", "count_overfit": 3}, {"patch": "org.jfree.chart.plot.PiePlot3D_246_if (org.jfree.data.general.DatasetUtilities.isEmptyOrNull(getDataset())) {\n\tdrawNoDataMessage(g2, plotArea);\n\tg2.setClip(savedClip);\n\tdrawOutline(g2, plotArea);\n\treturn ;\n} _InsertBeforeOp", "count_overfit": 1}, {"patch": "org.jfree.chart.plot.PiePlot3D_266_if (org.jfree.data.general.DatasetUtilities.isEmptyOrNull(getDataset())) {\n\tdrawNoDataMessage(g2, plotArea);\n\tg2.setClip(savedClip);\n\tdrawOutline(g2, plotArea);\n\treturn ;\n} _InsertBeforeOp", "count_overfit": 2}], "b_overfit": [{"patch": "org.jfree.chart.JFreeChart_1219_org.jfree.chart.JFreeChart.this.subtitles.clear()_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.plot.PiePlot3D_272_if (org.jfree.data.general.DatasetUtilities.isEmptyOrNull(getDataset())) {\n\tdrawNoDataMessage(g2, plotArea);\n\tg2.setClip(savedClip);\n\tdrawOutline(g2, plotArea);\n\treturn ;\n} _ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.JFreeChart_1219_org.jfree.chart.JFreeChart.this.subtitles.remove(title)_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.JFreeChart_1219_g2.setXORMode(java.awt.Color.orange)_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.JFreeChart_1219_g2.clip(chartArea)_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.JFreeChart_1219_removeSubtitle(getLegend())_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.JFreeChart_1219_setTextAntiAlias(java.awt.RenderingHints.VALUE_TEXT_ANTIALIAS_OFF)_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.JFreeChart_1219_remove_RemoveOp", "count_overfit": 8}, {"patch": "org.jfree.chart.plot.PiePlot3D_247_if (org.jfree.data.general.DatasetUtilities.isEmptyOrNull(getDataset())) {\n\tdrawNoDataMessage(g2, plotArea);\n\tg2.setClip(savedClip);\n\tdrawOutline(g2, plotArea);\n\treturn ;\n} _ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.JFreeChart_1219_g2.setPaintMode()_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.JFreeChart_1207_return _InsertAfterOp", "count_overfit": 1}, {"patch": "org.jfree.chart.plot.PiePlot3D_252_if (org.jfree.data.general.DatasetUtilities.isEmptyOrNull(getDataset())) {\n\tdrawNoDataMessage(g2, plotArea);\n\tg2.setClip(savedClip);\n\tdrawOutline(g2, plotArea);\n\treturn ;\n} _InsertBeforeOp", "count_overfit": 1}]}, {"bugid": "Chart25", "a_overfit": [], "b_overfit": [{"patch": "org.jfree.data.statistics.DefaultStatisticalCategoryDataset_111_org.jfree.data.statistics.DefaultStatisticalCategoryDataset.this.minimumRangeValueIncStdDev = java.lang.Double.NaN_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.data.statistics.DefaultStatisticalCategoryDataset_111_remove_RemoveOp", "count_overfit": 4}, {"patch": "org.jfree.chart.JFreeChart_1393_notifyListeners(new org.jfree.chart.event.ChartProgressEvent(org.jfree.chart.JFreeChart.this , org.jfree.chart.JFreeChart.this , org.jfree.chart.event.ChartProgressEvent.DRAWING_STARTED , 0))_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.data.KeyedObjects2D_95_return 1_ReplaceOp", "count_overfit": 2}, {"patch": "org.jfree.data.statistics.DefaultStatisticalCategoryDataset_318_org.jfree.data.statistics.DefaultStatisticalCategoryDataset.this.data = new org.jfree.data.KeyedObjects2D()_InsertAfterOp", "count_overfit": 1}, {"patch": "org.jfree.data.KeyedObjects2D_113_remove_RemoveOp", "count_overfit": 7}, {"patch": "org.jfree.chart.renderer.category.StatisticalBarRenderer_207_if (!(data instanceof org.jfree.data.statistics.StatisticalCategoryDataset)) {\n\tthrow new java.lang.IllegalArgumentException(\"Requires StatisticalCategoryDataset.\");\n} _ReplaceOp", "count_overfit": 2}, {"patch": "org.jfree.chart.plot.CategoryPlot_2000_org.jfree.chart.plot.CategoryPlot.this.datasets = new org.jfree.chart.util.ObjectList()_InsertAfterOp", "count_overfit": 1}, {"patch": "org.jfree.data.KeyedObjects2D_239_remove_RemoveOp", "count_overfit": 6}, {"patch": "org.jfree.chart.renderer.category.StatisticalBarRenderer_207_remove_RemoveOp", "count_overfit": 4}, {"patch": "org.jfree.data.general.DatasetUtilities_577_remove_RemoveOp", "count_overfit": 5}, {"patch": "org.jfree.chart.renderer.category.StatisticalBarRenderer_207_if (plot == null) {\n\tthrow new java.lang.IllegalArgumentException(\"Null 'plot' argument.\");\n} _ReplaceOp", "count_overfit": 2}, {"patch": "org.jfree.data.KeyedObjects2D_236_remove_RemoveOp", "count_overfit": 4}, {"patch": "org.jfree.data.general.DatasetUtilities_576_remove_RemoveOp", "count_overfit": 9}, {"patch": "org.jfree.chart.plot.CategoryPlot_2960_org.jfree.chart.plot.CategoryPlot.this.datasets = new org.jfree.chart.util.ObjectList()_InsertAfterOp", "count_overfit": 1}, {"patch": "org.jfree.chart.plot.CategoryPlot_2867_remove_RemoveOp", "count_overfit": 1}, {"patch": "org.jfree.data.statistics.DefaultStatisticalCategoryDataset_111_org.jfree.data.statistics.DefaultStatisticalCategoryDataset.this.minimumRangeValue = java.lang.Double.NaN_ReplaceOp", "count_overfit": 2}, {"patch": "org.jfree.chart.JFreeChart_1393_remove_RemoveOp", "count_overfit": 5}, {"patch": "org.jfree.data.statistics.DefaultStatisticalCategoryDataset_325_org.jfree.data.statistics.DefaultStatisticalCategoryDataset.this.data = new org.jfree.data.KeyedObjects2D()_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.jfree.data.statistics.DefaultStatisticalCategoryDataset_126_return null_ReplaceOp", "count_overfit": 2}, {"patch": "org.jfree.data.statistics.DefaultStatisticalCategoryDataset_301_fireDatasetChanged()_ReplaceOp", "count_overfit": 2}, {"patch": "org.jfree.data.statistics.DefaultStatisticalCategoryDataset_301_remove_RemoveOp", "count_overfit": 8}, {"patch": "org.jfree.data.general.DatasetUtilities_577_return true_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.data.statistics.DefaultStatisticalCategoryDataset_264_return -1_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.chart.plot.CategoryPlot_2672_remove_RemoveOp", "count_overfit": 1}, {"patch": "org.jfree.data.KeyedObjects2D_111_org.jfree.data.KeyedObjects2D.this.rowKeys = new java.util.ArrayList()_InsertAfterOp", "count_overfit": 1}, {"patch": "org.jfree.chart.plot.CategoryPlot_1756_org.jfree.chart.plot.CategoryPlot.this.datasets = new org.jfree.chart.util.ObjectList()_InsertAfterOp", "count_overfit": 1}, {"patch": "org.jfree.data.general.DatasetUtilities_574_remove_RemoveOp", "count_overfit": 7}, {"patch": "org.jfree.data.general.DatasetUtilities_575_remove_RemoveOp", "count_overfit": 3}, {"patch": "org.jfree.data.statistics.DefaultStatisticalCategoryDataset_264_return 0_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.data.KeyedObjects2D_86_return -1_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.data.KeyedObjects2D_236_org.jfree.data.KeyedObjects2D.this.rows.add(row)_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.data.KeyedObjects2D_113_org.jfree.data.KeyedObjects2D.this.rowKeys = new java.util.ArrayList()_ReplaceOp", "count_overfit": 2}, {"patch": "org.jfree.data.statistics.MeanAndStandardDeviation_95_return null_ReplaceOp", "count_overfit": 2}, {"patch": "org.jfree.chart.plot.CategoryPlot_2855_remove_RemoveOp", "count_overfit": 1}, {"patch": "org.jfree.data.statistics.DefaultStatisticalCategoryDataset_111_return null_InsertAfterOp", "count_overfit": 2}, {"patch": "org.jfree.data.KeyedObjects2D_238_remove_RemoveOp", "count_overfit": 8}, {"patch": "org.jfree.data.KeyedObjects2D_112_if (columnKey == null) {\n\tthrow new java.lang.IllegalArgumentException(\"Null 'columnKey' argument.\");\n} _ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.data.general.DatasetUtilities_576_if ((rowCount == 0) || (columnCount == 0)) {\n\treturn true;\n} _ReplaceOp", "count_overfit": 3}, {"patch": "org.jfree.data.statistics.DefaultStatisticalCategoryDataset_113_return null_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.data.KeyedObjects2D_239_org.jfree.data.KeyedObjects2D.this.columnKeys = new java.util.ArrayList()_InsertAfterOp", "count_overfit": 1}, {"patch": "org.jfree.data.KeyedObjects2D_110_remove_RemoveOp", "count_overfit": 2}, {"patch": "org.jfree.data.KeyedObjects2D_112_remove_RemoveOp", "count_overfit": 4}, {"patch": "org.jfree.chart.renderer.category.StatisticalBarRenderer_207_if ((org.jfree.chart.renderer.category.StatisticalBarRenderer.this.errorIndicatorStroke) != null) {\n\tg2.setStroke(org.jfree.chart.renderer.category.StatisticalBarRenderer.this.errorIndicatorStroke);\n} else {\n\tg2.setStroke(getItemOutlineStroke(row, column));\n}_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.data.statistics.DefaultStatisticalCategoryDataset_110_remove_RemoveOp", "count_overfit": 8}, {"patch": "org.jfree.data.statistics.DefaultStatisticalCategoryDataset_111_org.jfree.data.statistics.DefaultStatisticalCategoryDataset.this.maximumRangeValueIncStdDev = java.lang.Double.NaN_ReplaceOp", "count_overfit": 1}]}, {"bugid": "Chart3", "a_overfit": [], "b_overfit": [{"patch": "org.jfree.data.time.TimeSeries_254_findBoundsByIteration()_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.jfree.data.time.TimeSeries_564_updateBoundsForRemovedItem(item)_InsertBeforeOp", "count_overfit": 3}, {"patch": "org.jfree.data.time.TimeSeries_581_updateBoundsForRemovedItem(item)_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.jfree.data.time.TimeSeries_576_updateBoundsForRemovedItem(item)_InsertBeforeOp", "count_overfit": 2}]}, {"bugid": "Chart5", "a_overfit": [{"patch": "org.jfree.data.xy.XYSeries_564_org.jfree.data.xy.XYSeries.this.data.add(new org.jfree.data.xy.XYDataItem(x , y))_ReplaceOp", "count_overfit": 22}, {"patch": "org.jfree.data.xy.XYSeries_564_add(x, y, true)_ReplaceOp", "count_overfit": 22}], "b_overfit": [{"patch": "org.jfree.data.xy.XYSeries_564_org.jfree.data.xy.XYSeries.this.data.add(new org.jfree.data.xy.XYDataItem(x , y))_ReplaceOp", "count_overfit": 3}, {"patch": "org.jfree.data.xy.XYSeries_564_add(x, y, true)_ReplaceOp", "count_overfit": 1}]}, {"bugid": "Chart7", "a_overfit": [{"patch": "org.jfree.data.time.TimePeriodValues_552_return org.jfree.data.time.TimePeriodValues.this.maxStartIndex_ReplaceOp", "count_overfit": 1}, {"patch": "org.jfree.data.time.TimePeriodValues_552_return org.jfree.data.time.TimePeriodValues.this.maxEndIndex_ReplaceOp", "count_overfit": 1}], "b_overfit": [{"patch": "org.jfree.data.time.TimePeriodValues_552_return org.jfree.data.time.TimePeriodValues.this.maxStartIndex_ReplaceOp", "count_overfit": 2}, {"patch": "org.jfree.data.time.TimePeriodValues_552_return org.jfree.data.time.TimePeriodValues.this.maxEndIndex_ReplaceOp", "count_overfit": 1}]}]}, {"project": "Time", "result": [{"bugid": "Time11", "a_overfit": [], "b_overfit": [{"patch": "org.joda.time.tz.DateTimeZoneBuilder_1144_if (id == null) {\n\treturn null;\n} _ReplaceOp", "count_overfit": 1}, {"patch": "org.joda.time.tz.DateTimeZoneBuilder_1417_org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.joda.time.tz.DateTimeZoneBuilder_1043_org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)_InsertAfterOp", "count_overfit": 1}, {"patch": "org.joda.time.tz.DateTimeZoneBuilder_846_org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.joda.time.tz.DateTimeZoneBuilder_371_remove_RemoveOp", "count_overfit": 1}, {"patch": "org.joda.time.tz.DateTimeZoneBuilder_1458_if (size == 0) {\n\tthrow new java.lang.IllegalArgumentException();\n} _ReplaceOp", "count_overfit": 1}, {"patch": "org.joda.time.tz.DateTimeZoneBuilder_1426_org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)_InsertAfterOp", "count_overfit": 1}, {"patch": "org.joda.time.tz.DateTimeZoneBuilder_1457_remove_RemoveOp", "count_overfit": 1}, {"patch": "org.joda.time.tz.DateTimeZoneBuilder_1458_if ((org.joda.time.tz.ZoneInfoCompiler.cLenientISO) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cLenientISO = org.joda.time.chrono.LenientChronology.getInstance(org.joda.time.chrono.ISOChronology.getInstanceUTC());\n} _ReplaceOp", "count_overfit": 1}, {"patch": "org.joda.time.tz.DateTimeZoneBuilder_1460_if ((org.joda.time.tz.ZoneInfoCompiler.cStartOfYear) == null) {\n\torg.joda.time.tz.ZoneInfoCompiler.cStartOfYear = new org.joda.time.tz.ZoneInfoCompiler.DateTimeOfYear();\n} _ReplaceOp", "count_overfit": 1}, {"patch": "org.joda.time.tz.DateTimeZoneBuilder_372_remove_RemoveOp", "count_overfit": 1}, {"patch": "org.joda.time.tz.ZoneInfoCompiler_78_return false_ReplaceOp", "count_overfit": 2}, {"patch": "org.joda.time.tz.ZoneInfoCompiler_78_return true_ReplaceOp", "count_overfit": 4}, {"patch": "org.joda.time.tz.DateTimeZoneBuilder_1460_remove_RemoveOp", "count_overfit": 1}, {"patch": "org.joda.time.tz.DateTimeZoneBuilder_1434_org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.joda.time.tz.DateTimeZoneBuilder_371_if (tailZone != null) {\n\treturn tailZone;\n} _ReplaceOp", "count_overfit": 1}, {"patch": "org.joda.time.tz.DateTimeZoneBuilder_320_org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)_InsertBeforeOp", "count_overfit": 1}, {"patch": "org.joda.time.tz.DateTimeZoneBuilder_428_org.joda.time.tz.ZoneInfoCompiler.cVerbose.set(java.lang.Boolean.FALSE)_InsertBeforeOp", "count_overfit": 1}]}, {"bugid": "Time4", "a_overfit": [], "b_overfit": [{"patch": "org.joda.time.field.ZeroIsMaxDateTimeField_178_return 1_ReplaceOp", "count_overfit": 22}, {"patch": "org.joda.time.field.ZeroIsMaxDateTimeField_178_return 2_ReplaceOp", "count_overfit": 20}, {"patch": "org.joda.time.field.ZeroIsMaxDateTimeField_178_return getMinimumValue(instant)_ReplaceOp", "count_overfit": 22}, {"patch": "org.joda.time.field.ZeroIsMaxDateTimeField_111_return (getWrappedField().getMaximumValue()) + 1_ReplaceOp", "count_overfit": 6}, {"patch": "org.joda.time.field.ZeroIsMaxDateTimeField_111_return getName().hashCode()_ReplaceOp", "count_overfit": 12}, {"patch": "org.joda.time.field.ZeroIsMaxDateTimeField_178_return 3_ReplaceOp", "count_overfit": 24}, {"patch": "org.joda.time.field.ZeroIsMaxDateTimeField_178_return getMinimumValue()_ReplaceOp", "count_overfit": 22}, {"patch": "org.joda.time.field.ZeroIsMaxDateTimeField_178_return 0_ReplaceOp", "count_overfit": 23}, {"patch": "org.joda.time.field.ZeroIsMaxDateTimeField_138_return getMaximumValue(instant)_ReplaceOp", "count_overfit": 11}, {"patch": "org.joda.time.field.ZeroIsMaxDateTimeField_138_return (getWrappedField().getMaximumValue(instant, values)) + 1_ReplaceOp", "count_overfit": 9}, {"patch": "org.joda.time.field.ZeroIsMaxDateTimeField_138_return (getWrappedField().getMaximumValue()) + 1_ReplaceOp", "count_overfit": 16}, {"patch": "org.joda.time.field.ZeroIsMaxDateTimeField_111_return getMaximumValue()_ReplaceOp", "count_overfit": 9}, {"patch": "org.joda.time.field.ZeroIsMaxDateTimeField_138_return getName().hashCode()_ReplaceOp", "count_overfit": 11}, {"patch": "org.joda.time.field.ZeroIsMaxDateTimeField_178_return -1_ReplaceOp", "count_overfit": 24}, {"patch": "org.joda.time.field.ZeroIsMaxDateTimeField_138_return getMaximumValue()_ReplaceOp", "count_overfit": 12}]}]}]