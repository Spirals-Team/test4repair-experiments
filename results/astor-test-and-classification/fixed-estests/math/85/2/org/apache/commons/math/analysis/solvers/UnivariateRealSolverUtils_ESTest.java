/**
 * This file was automatically generated by EvoSuite
 * Tue Jan 17 23:09:31 GMT 2017
 */


package org.apache.commons.math.analysis.solvers;

import org.junit.Assert;
import org.evosuite.runtime.EvoAssertions;
import org.apache.commons.math.analysis.Expm1Function;
import org.apache.commons.math.analysis.MonitoredFunction;
import org.apache.commons.math.analysis.QuinticFunction;
import org.apache.commons.math.analysis.SinFunction;
import org.junit.Test;
import org.apache.commons.math.analysis.UnivariateRealFunction;

public class UnivariateRealSolverUtils_ESTest extends UnivariateRealSolverUtils_ESTest_scaffolding {
    @Test(timeout = 4000)
    public void test00() throws Throwable {
        QuinticFunction quinticFunction0 = new QuinticFunction();
        double[] doubleArray0 = UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (quinticFunction0)), Double.NaN, Double.NaN, (-1398.715113563202), 2062);
        Assert.assertArrayEquals(new double[]{ Double.NaN , Double.NaN }, doubleArray0, 0.01);
    }

    @Test(timeout = 4000)
    public void test01() throws Throwable {
        SinFunction sinFunction0 = new SinFunction();
        // Undeclared exception!
        try {
            UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (sinFunction0)), 0.0, 527.4833089831926, 527.4833089831926, (-1));
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // bad value for maximum iterations number: -1
            // 
            EvoAssertions.verifyException("org.apache.commons.math.MathRuntimeException", e);
        }
    }

    @Test(timeout = 4000)
    public void test02() throws Throwable {
        SinFunction sinFunction0 = new SinFunction();
        double double0 = UnivariateRealSolverUtils.solve(((UnivariateRealFunction) (sinFunction0)), 0.0, 527.4833089831926, 0.0);
        Assert.assertEquals(0.0, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test03() throws Throwable {
        QuinticFunction quinticFunction0 = new QuinticFunction();
        double double0 = UnivariateRealSolverUtils.solve(((UnivariateRealFunction) (quinticFunction0)), (-3059.604180157), 0.5, 3482.6186398348);
        Assert.assertEquals(0.5, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test04() throws Throwable {
        SinFunction sinFunction0 = new SinFunction();
        double double0 = UnivariateRealSolverUtils.solve(((UnivariateRealFunction) (sinFunction0)), (-597.71), 1214.3063023087773, 0.0);
        Assert.assertEquals((-351.8583772020568), double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test05() throws Throwable {
        QuinticFunction quinticFunction0 = new QuinticFunction();
        double double0 = UnivariateRealSolverUtils.solve(((UnivariateRealFunction) (quinticFunction0)), 0.0, 155.4534);
        Assert.assertEquals(0.0, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test06() throws Throwable {
        QuinticFunction quinticFunction0 = new QuinticFunction();
        MonitoredFunction monitoredFunction0 = new MonitoredFunction(((UnivariateRealFunction) (quinticFunction0)));
        double double0 = UnivariateRealSolverUtils.solve(((UnivariateRealFunction) (monitoredFunction0)), ((double) (1)), 1315.983635968154);
        Assert.assertEquals(1.0, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test07() throws Throwable {
        QuinticFunction quinticFunction0 = new QuinticFunction();
        MonitoredFunction monitoredFunction0 = new MonitoredFunction(((UnivariateRealFunction) (quinticFunction0)));
        double double0 = UnivariateRealSolverUtils.solve(((UnivariateRealFunction) (monitoredFunction0)), (-1.0), 1318.53);
        Assert.assertEquals((-1.0), double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test08() throws Throwable {
        double double0 = UnivariateRealSolverUtils.midpoint(0.0, 0.0);
        Assert.assertEquals(0.0, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test09() throws Throwable {
        double double0 = UnivariateRealSolverUtils.midpoint(0.5, 0.5);
        Assert.assertEquals(0.5, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test10() throws Throwable {
        SinFunction sinFunction0 = new SinFunction();
        double[] doubleArray0 = UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (sinFunction0)), 0.5, 0.5, 125.42897836782993);
        Assert.assertArrayEquals(new double[]{ 0.5 , 3.5 }, doubleArray0, 0.01);
    }

    @Test(timeout = 4000)
    public void test12() throws Throwable {
        MonitoredFunction monitoredFunction0 = new MonitoredFunction(((UnivariateRealFunction) (null)));
        // Undeclared exception!
        try {
            UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (monitoredFunction0)), 0.0, (-664.87429019), 0.0);
            Assert.fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            // 
            // no message in exception (getMessage() returned null)
            // 
        }
    }

    @Test(timeout = 4000)
    public void test13() throws Throwable {
        QuinticFunction quinticFunction0 = new QuinticFunction();
        // Undeclared exception!
        try {
            UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (quinticFunction0)), (-1.0), (-1.0), (-1.0), 1661);
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // invalid bracketing parameters:  lower bound=-1,  initial=-1, upper bound=-1
            // 
            EvoAssertions.verifyException("org.apache.commons.math.MathRuntimeException", e);
        }
    }

    @Test(timeout = 4000)
    public void test14() throws Throwable {
        // Undeclared exception!
        try {
            UnivariateRealSolverUtils.solve(((UnivariateRealFunction) (null)), 0.0, 0.0);
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // function is null
            // 
            EvoAssertions.verifyException("org.apache.commons.math.MathRuntimeException", e);
        }
    }

    @Test(timeout = 4000)
    public void test15() throws Throwable {
        Expm1Function expm1Function0 = new Expm1Function();
        try {
            UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (expm1Function0)), 556.581858, 1.0, 4123.787629, 1668107760);
            Assert.fail("Expecting exception: Exception");
        } catch (Exception e) {
            // 
            // number of iterations=3,568, maximum iterations=1,668,107,760, initial=556.582, lower bound=1, upper bound=4,123.788, final a value=1, final b value=4,123.788, f(a)=1.718, f(b)=\u221E
            // 
            EvoAssertions.verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test16() throws Throwable {
        Expm1Function expm1Function0 = new Expm1Function();
        try {
            UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (expm1Function0)), 556.581858, 556.581858, 4124.302959888475, 3499);
            Assert.fail("Expecting exception: Exception");
        } catch (Exception e) {
            // 
            // number of iterations=3,499, maximum iterations=3,499, initial=556.582, lower bound=556.582, upper bound=4,124.303, final a value=556.582, final b value=4,055.582, f(a)=52,532,692,045,688,996,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000, f(b)=\u221E
            // 
            EvoAssertions.verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test17() throws Throwable {
        Expm1Function expm1Function0 = new Expm1Function();
        // Undeclared exception!
        try {
            UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (expm1Function0)), 1364.97721733306, 1364.97721733306, 1.0, 705);
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // invalid bracketing parameters:  lower bound=1,364.977,  initial=1,364.977, upper bound=1
            // 
            EvoAssertions.verifyException("org.apache.commons.math.MathRuntimeException", e);
        }
    }

    @Test(timeout = 4000)
    public void test18() throws Throwable {
        Expm1Function expm1Function0 = new Expm1Function();
        // Undeclared exception!
        try {
            UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (expm1Function0)), (-855.1070781371583), ((double) (43)), (-855.1070781371583), 43);
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // invalid bracketing parameters:  lower bound=43,  initial=-855.107, upper bound=-855.107
            // 
            EvoAssertions.verifyException("org.apache.commons.math.MathRuntimeException", e);
        }
    }

    @Test(timeout = 4000)
    public void test19() throws Throwable {
        Expm1Function expm1Function0 = new Expm1Function();
        // Undeclared exception!
        try {
            UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (expm1Function0)), 0.5, (-1601.125), 0.5, 0);
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // bad value for maximum iterations number: 0
            // 
            EvoAssertions.verifyException("org.apache.commons.math.MathRuntimeException", e);
        }
    }

    @Test(timeout = 4000)
    public void test20() throws Throwable {
        // Undeclared exception!
        try {
            UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (null)), (-2520.98582), (-2520.98582), (-2520.98582), 2);
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // function is null
            // 
            EvoAssertions.verifyException("org.apache.commons.math.MathRuntimeException", e);
        }
    }

    @Test(timeout = 4000)
    public void test21() throws Throwable {
        Expm1Function expm1Function0 = new Expm1Function();
        // Undeclared exception!
        try {
            UnivariateRealSolverUtils.solve(((UnivariateRealFunction) (expm1Function0)), 1854.0, 0.0, (-1853.267572405));
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // endpoints do not specify an interval: [1,854, 0]
            // 
            EvoAssertions.verifyException("org.apache.commons.math.MathRuntimeException", e);
        }
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        double double0 = UnivariateRealSolverUtils.midpoint((-1332), 0.5);
        Assert.assertEquals((-665.75), double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test23() throws Throwable {
        MonitoredFunction monitoredFunction0 = new MonitoredFunction(((UnivariateRealFunction) (null)));
        // Undeclared exception!
        try {
            UnivariateRealSolverUtils.solve(((UnivariateRealFunction) (monitoredFunction0)), ((double) (16)), 1318.53);
            Assert.fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            // 
            // no message in exception (getMessage() returned null)
            // 
        }
    }

    @Test(timeout = 4000)
    public void test24() throws Throwable {
        SinFunction sinFunction0 = new SinFunction();
        // Undeclared exception!
        try {
            UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (sinFunction0)), Double.NaN, 178.495, ((double) (-3798)));
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // invalid bracketing parameters:  lower bound=178.495,  initial=\uFFFD, upper bound=-3,798
            // 
            EvoAssertions.verifyException("org.apache.commons.math.MathRuntimeException", e);
        }
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        QuinticFunction quinticFunction0 = new QuinticFunction();
        {
            UnivariateRealSolverUtils.bracket(((UnivariateRealFunction) (quinticFunction0)), 421.0, (-840.33196009), 421.0);
        }
    }
}

