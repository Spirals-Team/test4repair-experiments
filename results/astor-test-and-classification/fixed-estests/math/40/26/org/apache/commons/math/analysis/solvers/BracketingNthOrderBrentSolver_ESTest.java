/**
 * This file was automatically generated by EvoSuite
 * Fri Jan 27 21:22:10 GMT 2017
 */


package org.apache.commons.math.analysis.solvers;

import org.junit.Assert;
import org.evosuite.runtime.EvoAssertions;
import org.apache.commons.math.analysis.Expm1Function;
import org.apache.commons.math.analysis.MonitoredFunction;
import org.apache.commons.math.analysis.QuinticFunction;
import org.apache.commons.math.analysis.SinFunction;
import org.apache.commons.math.analysis.SincFunction;
import org.junit.Test;
import org.apache.commons.math.analysis.UnivariateFunction;
import org.apache.commons.math.analysis.XMinus5Function;

public class BracketingNthOrderBrentSolver_ESTest extends BracketingNthOrderBrentSolver_ESTest_scaffolding {
    @Test(timeout = 4000)
    public void test00() throws Throwable {
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
        XMinus5Function xMinus5Function0 = new XMinus5Function();
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        double double0 = bracketingNthOrderBrentSolver0.solve(1258, ((UnivariateFunction) (xMinus5Function0)), 1.12336517720221E-12, ((double) (1258)), 1.0, allowedSolution0);
        Assert.assertEquals(5.0, double0, 0.01);
        Assert.assertEquals(5, bracketingNthOrderBrentSolver0.getMaximalOrder());
    }

    @Test(timeout = 4000)
    public void test01() throws Throwable {
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
        SincFunction sincFunction0 = new SincFunction();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        bracketingNthOrderBrentSolver0.solve(1315, ((UnivariateFunction) (sincFunction0)), (-444.9468412), 84.82300164591014, 4.295320740958858E-8, allowedSolution0);
        double double0 = bracketingNthOrderBrentSolver0.doSolve();
        Assert.assertEquals(5, bracketingNthOrderBrentSolver0.getMaximalOrder());
        Assert.assertEquals((-436.681378848981), double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test02() throws Throwable {
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
        XMinus5Function xMinus5Function0 = new XMinus5Function();
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        // Undeclared exception!
        try {
            bracketingNthOrderBrentSolver0.solve((-1005), ((UnivariateFunction) (xMinus5Function0)), (-3773.996), 0.0, allowedSolution0);
            Assert.fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            // 
            // illegal state: maximal count (-1,005) exceeded: evaluations
            // 
            EvoAssertions.verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
        }
    }

    @Test(timeout = 4000)
    public void test03() throws Throwable {
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
        XMinus5Function xMinus5Function0 = new XMinus5Function();
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        // Undeclared exception!
        try {
            bracketingNthOrderBrentSolver0.solve(471, ((UnivariateFunction) (xMinus5Function0)), ((double) (471)), ((double) (471)), allowedSolution0);
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // endpoints do not specify an interval: [471, 471]
            // 
            EvoAssertions.verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test04() throws Throwable {
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
        XMinus5Function xMinus5Function0 = new XMinus5Function();
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        // Undeclared exception!
        try {
            bracketingNthOrderBrentSolver0.solve(471, ((UnivariateFunction) (xMinus5Function0)), ((double) (471)), 682.33, allowedSolution0);
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // function values at endpoints do not have different signs, endpoints: [471, 682.33], values: [466, 677.33]
            // 
            EvoAssertions.verifyException("org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver", e);
        }
    }

    @Test(timeout = 4000)
    public void test05() throws Throwable {
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
        XMinus5Function xMinus5Function0 = new XMinus5Function();
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        // Undeclared exception!
        try {
            bracketingNthOrderBrentSolver0.solve(1258, ((UnivariateFunction) (xMinus5Function0)), 5.0, 1.0, ((double) (1258)), allowedSolution0);
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // endpoints do not specify an interval: [1,258, 1]
            // 
            EvoAssertions.verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test06() throws Throwable {
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver(2.244414150254963E-158, 2.244414150254963E-158, 1089);
        SinFunction sinFunction0 = new SinFunction();
        bracketingNthOrderBrentSolver0.setup((-125), sinFunction0, (-3423.1841220915), 1089, 0.0);
        // Undeclared exception!
        try {
            bracketingNthOrderBrentSolver0.doSolve();
            Assert.fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            // 
            // illegal state: maximal count (-125) exceeded: evaluations
            // 
            EvoAssertions.verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
        }
    }

    @Test(timeout = 4000)
    public void test07() throws Throwable {
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver(804.0180065726, 804.0180065726, 804.0180065726, 2);
        // Undeclared exception!
        try {
            bracketingNthOrderBrentSolver0.doSolve();
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // endpoints do not specify an interval: [0, 0]
            // 
            EvoAssertions.verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test08() throws Throwable {
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver(3296.6519661196, 3296.6519661196, 4);
        QuinticFunction quinticFunction0 = new QuinticFunction();
        MonitoredFunction monitoredFunction0 = new MonitoredFunction(((UnivariateFunction) (quinticFunction0)));
        bracketingNthOrderBrentSolver0.setup(1155, monitoredFunction0, 1155, 3296.6519661196, 2591.0644);
        // Undeclared exception!
        try {
            bracketingNthOrderBrentSolver0.doSolve();
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // function values at endpoints do not have different signs, endpoints: [1,155, 3,296.652], values: [2,055,462,293,223,570, 389,372,657,583,971,970]
            // 
            EvoAssertions.verifyException("org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver", e);
        }
    }

    @Test(timeout = 4000)
    public void test09() throws Throwable {
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver((-3115.6249883), 1313);
        Expm1Function expm1Function0 = new Expm1Function();
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        double double0 = bracketingNthOrderBrentSolver0.solve(1313, ((UnivariateFunction) (expm1Function0)), (-1149.0960196908725), 0.7342136964836072, allowedSolution0);
        Assert.assertEquals(1313, bracketingNthOrderBrentSolver0.getMaximalOrder());
        Assert.assertEquals(0.0, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        SincFunction sincFunction0 = new SincFunction();
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = bracketingNthOrderBrentSolver0.solve(1023, ((UnivariateFunction) (sincFunction0)), 1.0, ((double) (1023)), allowedSolution0);
        Assert.assertEquals(713.1415323648916, double0, 0.01);
        double double1 = bracketingNthOrderBrentSolver0.doSolve();
        Assert.assertEquals(5, bracketingNthOrderBrentSolver0.getMaximalOrder());
        Assert.assertEquals(713.1415323648916, double1, 0.01);
    }

    @Test(timeout = 4000)
    public void test12() throws Throwable {
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
        SincFunction sincFunction0 = new SincFunction();
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        double double0 = bracketingNthOrderBrentSolver0.solve(1315, ((UnivariateFunction) (sincFunction0)), (-444.9468412), 84.82300164591014, 4.295320740958858E-8, allowedSolution0);
        Assert.assertEquals((-436.681378848981), double0, 0.01);
        Assert.assertEquals(5, bracketingNthOrderBrentSolver0.getMaximalOrder());
    }

    @Test(timeout = 4000)
    public void test14() throws Throwable {
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver((-3115.6249883), (-3115.6249883), 1313);
        SincFunction sincFunction0 = new SincFunction();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = bracketingNthOrderBrentSolver0.solve(1313, ((UnivariateFunction) (sincFunction0)), (-3115.6249883), ((double) (1313)), allowedSolution0);
        Assert.assertEquals((-2371.9024534602927), double0, 0.01);
        Assert.assertEquals(1313, bracketingNthOrderBrentSolver0.getMaximalOrder());
    }

    @Test(timeout = 4000)
    public void test15() throws Throwable {
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
        SincFunction sincFunction0 = new SincFunction();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = bracketingNthOrderBrentSolver0.solve(1317, ((UnivariateFunction) (sincFunction0)), (-818.939), 188.17, 47.6, allowedSolution0);
        Assert.assertEquals((-785.3981634018945), double0, 0.01);
        Assert.assertEquals(5, bracketingNthOrderBrentSolver0.getMaximalOrder());
    }

    @Test(timeout = 4000)
    public void test18() throws Throwable {
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
        SincFunction sincFunction0 = new SincFunction();
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        // Undeclared exception!
        try {
            bracketingNthOrderBrentSolver0.solve(5, ((UnivariateFunction) (sincFunction0)), (-444.9468412), 712.10573218609, 47.6, allowedSolution0);
            Assert.fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            // 
            // illegal state: maximal count (5) exceeded: evaluations
            // 
            EvoAssertions.verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
        }
    }

    @Test(timeout = 4000)
    public void test19() throws Throwable {
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver(1288.3386, 3156);
        SincFunction sincFunction0 = new SincFunction();
        UnivariateFunction univariateFunction0 = sincFunction0.derivative();
        bracketingNthOrderBrentSolver0.solve(997, univariateFunction0, ((double) (0)), 2074.868, 1288.3386);
        double double0 = bracketingNthOrderBrentSolver0.doSolve();
        Assert.assertEquals(3156, bracketingNthOrderBrentSolver0.getMaximalOrder());
        Assert.assertEquals(0.0, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test20() throws Throwable {
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver((-3115.6249883), 1313);
        SincFunction sincFunction0 = new SincFunction();
        UnivariateFunction univariateFunction0 = sincFunction0.derivative();
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        double double0 = bracketingNthOrderBrentSolver0.solve(1313, univariateFunction0, (-2007.862900438841), Double.NaN, 0.0, allowedSolution0);
        Assert.assertEquals((-2007.862900438841), bracketingNthOrderBrentSolver0.getMin(), 0.01);
        Assert.assertEquals(0.0, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test21() throws Throwable {
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = null;
        try {
            bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver(99.81338843967413, 5415.075137930279, 5415.075137930279, (-4360));
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // -4,360 is smaller than the minimum (2)
            // 
            EvoAssertions.verifyException("org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver", e);
        }
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = null;
        try {
            bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver(0.5, 1861.69148010148, (-1764));
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // -1,764 is smaller than the minimum (2)
            // 
            EvoAssertions.verifyException("org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver", e);
        }
    }

    @Test(timeout = 4000)
    public void test23() throws Throwable {
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = null;
        try {
            bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver(0.0, 0);
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // 0 is smaller than the minimum (2)
            // 
            EvoAssertions.verifyException("org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver", e);
        }
    }

    @Test(timeout = 4000)
    public void test24() throws Throwable {
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver((-3115.6249883), 1313);
        SincFunction sincFunction0 = new SincFunction();
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        // Undeclared exception!
        try {
            bracketingNthOrderBrentSolver0.solve(1313, ((UnivariateFunction) (sincFunction0)), (-2007.862900438841), Double.NaN, (-1457.401530044731), allowedSolution0);
            Assert.fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            // 
            // function values at endpoints do not have different signs, endpoints: [-2,007.863, \uFFFD], values: [-0, \uFFFD]
            // 
            EvoAssertions.verifyException("org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver", e);
        }
    }

    @Test(timeout = 4000)
    public void test25() throws Throwable {
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
        SincFunction sincFunction0 = new SincFunction();
        // Undeclared exception!
        try {
            bracketingNthOrderBrentSolver0.solve(1317, ((UnivariateFunction) (sincFunction0)), (-818.939), 188.17, 47.6, ((AllowedSolution) (null)));
            Assert.fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            // 
            // no message in exception (getMessage() returned null)
            // 
            EvoAssertions.verifyException("org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver", e);
        }
    }

    @Test(timeout = 4000)
    public void test26() throws Throwable {
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver((-2827.0235097861646), 491.30619322, 3);
        MonitoredFunction monitoredFunction0 = new MonitoredFunction(((UnivariateFunction) (null)));
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        // Undeclared exception!
        try {
            bracketingNthOrderBrentSolver0.solve(3, ((UnivariateFunction) (monitoredFunction0)), 0.0, 1.227817847393453E-10, allowedSolution0);
            Assert.fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            // 
            // no message in exception (getMessage() returned null)
            // 
            EvoAssertions.verifyException("org.apache.commons.math.analysis.MonitoredFunction", e);
        }
    }

    @Test(timeout = 4000)
    public void test27() throws Throwable {
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver((-3115.6249883), 1313);
        int int0 = bracketingNthOrderBrentSolver0.getMaximalOrder();
        Assert.assertEquals(1313, int0);
    }

    @Test(timeout = 4000)
    public void test10() throws Throwable {
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver((-3115.6249883), 1313);
        SincFunction sincFunction0 = new SincFunction();
        MonitoredFunction monitoredFunction0 = new MonitoredFunction(((UnivariateFunction) (sincFunction0)));
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = bracketingNthOrderBrentSolver0.solve(1313, ((UnivariateFunction) (monitoredFunction0)), (-1149.0960196908725), 0.7342136964836072, allowedSolution0);
        // AssertFixer: old assertion Assert.assertEquals(35, monitoredFunction0.getCallsCount())
        Assert.assertEquals(16, monitoredFunction0.getCallsCount());
        // AssertFixer: old assertion Assert.assertEquals((-989.6016858807843), double0, 0.01)
        Assert.assertEquals(-989.6016858807843, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test13() throws Throwable {
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver((-3115.6249883), (-3115.6249883), 1313);
        SincFunction sincFunction0 = new SincFunction();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = bracketingNthOrderBrentSolver0.solve(1313, ((UnivariateFunction) (sincFunction0)), (-3115.6249883), 2080.34, allowedSolution0);
        Assert.assertEquals(2080.34, bracketingNthOrderBrentSolver0.getMax(), 0.01);
        // AssertFixer: old assertion Assert.assertEquals((-2535.265271446963), double0, 0.01)
        Assert.assertEquals(-2541.5484567541453, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test16() throws Throwable {
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver((-3115.6249883), 1313);
        SincFunction sincFunction0 = new SincFunction();
        UnivariateFunction univariateFunction0 = sincFunction0.derivative();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = bracketingNthOrderBrentSolver0.solve(1313, univariateFunction0, (-2007.862900438841), Double.NaN, (-1457.401530044731), allowedSolution0);
        Assert.assertEquals(1313, bracketingNthOrderBrentSolver0.getMaximalOrder());
        // AssertFixer: old assertion Assert.assertEquals((-1672.897490271378), double0, 0.01)
        Assert.assertEquals(-1654.0479275376986, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test17() throws Throwable {
        BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver((-3115.6249883), 1313);
        SincFunction sincFunction0 = new SincFunction();
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        double double0 = bracketingNthOrderBrentSolver0.solve(1313, ((UnivariateFunction) (sincFunction0)), (-3115.6249883), 2080.34, allowedSolution0);
        Assert.assertEquals(2080.34, bracketingNthOrderBrentSolver0.getMax(), 0.01);
        // AssertFixer: old assertion Assert.assertEquals((-2535.265271446963), double0, 0.01)
        Assert.assertEquals(-2541.5484567541425, double0, 0.01);
    }
}

