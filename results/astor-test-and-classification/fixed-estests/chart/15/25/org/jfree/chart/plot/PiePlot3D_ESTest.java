/**
 * This file was automatically generated by EvoSuite
 * Sat Jan 28 02:46:12 GMT 2017
 */


package org.jfree.chart.plot;

import org.jfree.chart.entity.EntityCollection;
import java.awt.geom.Area;
import java.awt.geom.Arc2D;
import org.junit.Assert;
import org.jfree.chart.entity.StandardEntityCollection;
import java.awt.BasicStroke;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.evosuite.runtime.EvoAssertions;
import java.awt.Graphics2D;
import org.junit.Test;
import org.jfree.chart.JFreeChart;
import java.awt.Shape;
import java.awt.geom.Rectangle2D;
import org.jfree.data.general.PieDataset;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.geom.Point2D;

public class PiePlot3D_ESTest extends PiePlot3D_ESTest_scaffolding {
    @Test(timeout = 4000)
    public void test00() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(((PieDataset) (defaultKeyedValuesDataset0)));
        Assert.assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
        piePlot3D0.setDepthFactor(0.0);
        double double0 = piePlot3D0.getDepthFactor();
        Assert.assertEquals(0.0, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test01() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        Assert.assertFalse(piePlot3D1.isCircular());
        Assert.assertEquals(0.12, piePlot3D1.getDepthFactor(), 0.01);
        Assert.assertTrue(boolean0);
        Assert.assertFalse(piePlot3D1.getDarkerSides());
    }

    @Test(timeout = 4000)
    public void test02() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D0);
        Assert.assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
        Assert.assertFalse(piePlot3D0.isCircular());
        Assert.assertTrue(boolean0);
        Assert.assertFalse(piePlot3D0.getDarkerSides());
    }

    @Test(timeout = 4000)
    public void test03() throws Throwable {
        Arc2D.Double arc2D_Double0 = new Arc2D.Double();
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(arc2D_Double0);
        Assert.assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
        Assert.assertFalse(boolean0);
        Assert.assertFalse(piePlot3D0.getDarkerSides());
        Assert.assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test04() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        JFreeChart jFreeChart0 = new JFreeChart(((Plot) (piePlot3D0)));
        Polygon polygon0 = new Polygon();
        Rectangle rectangle0 = ((Rectangle) (polygon0.getBounds2D()));
        Arc2D.Double arc2D_Double0 = new Arc2D.Double(((double) (0)), ((double) (0.5F)), ((double) (0)), ((double) (1.0F)), ((double) (1.0F)), ((double) (10)), 0);
        Area area0 = new Area(((Shape) (rectangle0)));
        BasicStroke basicStroke0 = new BasicStroke(1.0F);
        // Undeclared exception!
        try {
            piePlot3D0.drawSide(((Graphics2D) (null)), rectangle0, arc2D_Double0, area0, area0, jFreeChart0.DEFAULT_BACKGROUND_PAINT, jFreeChart0.DEFAULT_BACKGROUND_PAINT, basicStroke0, false, false);
            Assert.fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            // 
            // no message in exception (getMessage() returned null)
            // 
            EvoAssertions.verifyException("org.jfree.chart.plot.PiePlot3D", e);
        }
    }

    @Test(timeout = 4000)
    public void test05() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
        Point2D.Double point2D_Double0 = ((Point2D.Double) (spiderWebPlot0.getWebPoint(rectangle2D_Double0, 3.0, 180.0)));
        PlotState plotState0 = new PlotState();
        StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(((EntityCollection) (standardEntityCollection0)));
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        // Undeclared exception!
        try {
            piePlot3D0.draw(((Graphics2D) (null)), rectangle2D_Double0, point2D_Double0, plotState0, plotRenderingInfo0);
            Assert.fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            // 
            // no message in exception (getMessage() returned null)
            // 
            EvoAssertions.verifyException("org.jfree.chart.plot.Plot", e);
        }
    }

    @Test(timeout = 4000)
    public void test07() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(((PieDataset) (defaultKeyedValuesDataset0)));
        boolean boolean0 = piePlot3D0.getDarkerSides();
        Assert.assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
        Assert.assertFalse(boolean0);
        Assert.assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test08() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(((PieDataset) (defaultKeyedValuesDataset0)));
        piePlot3D0.setDepthFactor((-0.3817644847943141));
        double double0 = piePlot3D0.getDepthFactor();
        Assert.assertEquals((-0.3817644847943141), double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test09() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.getPlotType();
        Assert.assertFalse(piePlot3D0.getDarkerSides());
        Assert.assertFalse(piePlot3D0.isCircular());
        Assert.assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
    }

    @Test(timeout = 4000)
    public void test10() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Assert.assertFalse(piePlot3D0.getDarkerSides());
        piePlot3D0.setDarkerSides(true);
        Assert.assertTrue(piePlot3D0.getDarkerSides());
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(((PieDataset) (defaultKeyedValuesDataset0)));
        double double0 = piePlot3D0.getDepthFactor();
        Assert.assertFalse(piePlot3D0.isCircular());
        Assert.assertFalse(piePlot3D0.getDarkerSides());
        Assert.assertEquals(0.12, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test06() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        JFreeChart jFreeChart0 = new JFreeChart("S", ((Plot) (piePlot3D0)));
        {
            jFreeChart0.createBufferedImage(10, 10);
        }
    }
}

