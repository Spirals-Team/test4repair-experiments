/**
 * This file was automatically generated by EvoSuite
 * Mon Jan 16 03:23:34 GMT 2017
 */


package org.jfree.chart.plot;

import java.awt.geom.Area;
import java.awt.geom.Arc2D;
import org.junit.Assert;
import java.awt.BasicStroke;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.CategoryToPieDataset;
import org.junit.Test;
import java.awt.Color;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.chart.util.RectangleInsets;
import org.evosuite.runtime.EvoAssertions;
import org.jfree.chart.labels.PieSectionLabelGenerator;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import java.awt.Graphics2D;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.util.TableOrder;

public class PiePlot3D_ESTest extends PiePlot3D_ESTest_scaffolding {
    @Test(timeout = 4000)
    public void test00() throws Throwable {
        TableOrder tableOrder0 = TableOrder.BY_ROW;
        CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(((CategoryDataset) (null)), tableOrder0, (-1727));
        PiePlot3D piePlot3D0 = new PiePlot3D(((PieDataset) (categoryToPieDataset0)));
        Arc2D.Double arc2D_Double0 = new Arc2D.Double();
        arc2D_Double0.extent = ((double) (1.0F));
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Area area0 = new Area(piePlot3D0.DEFAULT_LEGEND_ITEM_BOX);
        Color color0 = ((Color) (LineRenderer3D.DEFAULT_WALL_PAINT));
        BasicStroke basicStroke0 = new BasicStroke();
        // Undeclared exception!
        try {
            piePlot3D0.drawSide(((Graphics2D) (null)), rectangle2D_Double0, arc2D_Double0, area0, area0, color0, color0, basicStroke0, false, false);
            Assert.fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            // 
            // no message in exception (getMessage() returned null)
            // 
            EvoAssertions.verifyException("org.jfree.chart.plot.PiePlot3D", e);
        }
    }

    @Test(timeout = 4000)
    public void test02() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Assert.assertFalse(piePlot3D0.getDarkerSides());
        piePlot3D0.setDarkerSides(true);
        boolean boolean0 = piePlot3D0.getDarkerSides();
        Assert.assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test03() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        Assert.assertEquals(0.12, piePlot3D1.getDepthFactor(), 0.01);
        Assert.assertFalse(piePlot3D1.isCircular());
        Assert.assertTrue(boolean0);
        Assert.assertFalse(piePlot3D1.getDarkerSides());
    }

    @Test(timeout = 4000)
    public void test04() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D(((PieDataset) (null)));
        MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
        boolean boolean0 = piePlot3D0.equals(mockMinguoDate0);
        Assert.assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
        Assert.assertFalse(piePlot3D0.isCircular());
        Assert.assertFalse(boolean0);
        Assert.assertFalse(piePlot3D0.getDarkerSides());
    }

    @Test(timeout = 4000)
    public void test05() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D0);
        Assert.assertFalse(piePlot3D0.getDarkerSides());
        Assert.assertFalse(piePlot3D0.isCircular());
        Assert.assertTrue(boolean0);
        Assert.assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
    }

    @Test(timeout = 4000)
    public void test06() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
        piePlot3D0.setDataset(defaultPieDataset0);
        JFreeChart jFreeChart0 = new JFreeChart(((Plot) (piePlot3D0)));
        jFreeChart0.createBufferedImage(10, 10);
        Assert.assertFalse(piePlot3D0.getDarkerSides());
        Assert.assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
    }

    @Test(timeout = 4000)
    public void test09() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.getDarkerSides();
        Assert.assertFalse(piePlot3D0.isCircular());
        Assert.assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
        Assert.assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test10() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Assert.assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
        piePlot3D0.setDepthFactor(0.0);
        Assert.assertEquals(0.0, piePlot3D0.getDepthFactor(), 0.01);
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D(((PieDataset) (null)));
        piePlot3D0.getPlotType();
        Assert.assertFalse(piePlot3D0.isCircular());
        Assert.assertFalse(piePlot3D0.getDarkerSides());
        Assert.assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
    }

    @Test(timeout = 4000)
    public void test12() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setDarkerSides(true);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        Assert.assertFalse(boolean0);
        Assert.assertTrue(piePlot3D0.getDarkerSides());
    }

    @Test(timeout = 4000)
    public void test13() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        double double0 = piePlot3D0.getDepthFactor();
        Assert.assertFalse(piePlot3D0.isCircular());
        Assert.assertEquals(0.12, double0, 0.01);
        Assert.assertFalse(piePlot3D0.getDarkerSides());
    }

    @Test(timeout = 4000)
    public void test01() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        JFreeChart jFreeChart0 = new JFreeChart("z/m", ((Plot) (piePlot3D0)));
        RectangleInsets rectangleInsets0 = jFreeChart0.getPadding();
        piePlot3D0.setInsets(rectangleInsets0, false);
        {
            jFreeChart0.createBufferedImage(10, 1467);
        }
    }

    @Test(timeout = 4000)
    public void test07() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setCircular(true);
        JFreeChart jFreeChart0 = new JFreeChart(((Plot) (piePlot3D0)));
        {
            jFreeChart0.createBufferedImage(10, 1451);
        }
    }

    @Test(timeout = 4000)
    public void test08() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setLabelGenerator(((PieSectionLabelGenerator) (null)));
        JFreeChart jFreeChart0 = new JFreeChart(((Plot) (piePlot3D0)));
        {
            jFreeChart0.createBufferedImage(10, 10);
        }
    }
}

