seed AstorRun 27 
export PATH="/home/mmartinez/defects4j/framework/bin:$PATH";export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;export PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";cd /home/mmartinez/projects/math/math_28;defects4j compile;cp -r /home/mmartinez/projects/math/math_28 /tmp/math_28_Genprog_local_s1;cd /tmp/math_28_Genprog_local_s1;mkdir lib/;cp -r /home/mmartinez/defects4j/framework/projects/lib/* lib/;cp -r /home/mmartinez/defects4j/framework/projects/Math/lib/* lib/;find . -type f -name "package-info.java" -delete;
/home/mmartinez/defects4j-repair/src/python/core/../../../results/2016-june/Math/seed/27/package/28/Genprog/result
cd /tmp/math_28_Genprog_local_s1;export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;TZ="America/New_York"; export TZexport PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";time /home/mmartinez/jdk1.8.0_45/bin//java -Xmx4096m -cp /home/mmartinez/defects4j-repair/src/python/core/../../..//libs/astor.jar fr.inria.main.evolution.MainjGenProg -mode statement -location . -id Math -dependencies lib/ -failing org.apache.commons.math3.optimization.linear.SimplexSolverTest: -package org.apache.commons -jvm4testexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ -jvm4evosuitetestexecution /home/mmartinez/jdk1.8.0_45/bin/ -javacompliancelevel 5 -maxgen 1000000 -seed 27 -scope package -maxtime 120  -stopfirst false -population 1 -srcjavafolder src/main/java/ -srctestfolder src/test/java/ -binjavafolder target/classes/ -bintestfolder target/test-classes/ -flthreshold 0.1  -validation  fr.inria.astor.core.validation.validators.RegressionValidation  -ESParameters -Dassertion_timeout=1800:-Dminimization_timeout=1800:-Djunit_check_timeout=1800:-Dwrite_junit_timeout=300:-Dinitialization_timeout=300:-Dglobal_timeout=18000:-Dsearch_budget=100000:-Dstopping_condition=MaxStatements:-Dno_runtime_dependency=true:-Dsandbox=false:-Dp_reflection_on_private=0.0:-Dreflection_start_percent=1.0:-Dp_functional_mocking=0.0:-Dfunctional_mocking_percent=1.0:-mem=2000 -testbystep  -ignoredtestcases org.apache.commons.lang.LocaleUtilsTest  -excludeRegression  -maxgen 100000000 ;echo "

Node: `hostname`
";echo "
Date: `date`
"; find /tmp/math_28_Genprog_local_s1/outputMutation -name "*.class" -type f -delete;echo "removed classes 
"; find . -name bin  -type d -print0|xargs -0 rm -r --; zip -r -q out.zip /tmp/math_28_Genprog_local_s1/outputMutation; echo "zipped 
";cp out.zip /home/mmartinez/defects4j-repair/src/python/core/../../../results/2016-june/Math/seed/27/package/28/Genprog; echo "copied zip 
";rm -rf /tmp/math_28_Genprog_local_s1;

[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:136) - End Repair Loops: Found solution
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:137) - Solution stored at: /tmp/math_28_Genprog_local_s1/./outputMutation/AstorMain-Math//src/
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:142) - 
Number solutions:17
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 116 (SOL) , #gens: 217, #ops: 1, parent:115]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 140 (SOL) , #gens: 217, #ops: 1, parent:139]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 418 (SOL) , #gens: 217, #ops: 1, parent:417]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 456 (SOL) , #gens: 217, #ops: 1, parent:455]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 458 (SOL) , #gens: 217, #ops: 1, parent:457]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 542 (SOL) , #gens: 217, #ops: 1, parent:541]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 544 (SOL) , #gens: 217, #ops: 1, parent:543]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 620 (SOL) , #gens: 217, #ops: 1, parent:619]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 922 (SOL) , #gens: 217, #ops: 1, parent:921]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 948 (SOL) , #gens: 217, #ops: 1, parent:947]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 962 (SOL) , #gens: 219, #ops: 1, parent:961]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 1004 (SOL) , #gens: 217, #ops: 1, parent:1003]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 1164 (SOL) , #gens: 217, #ops: 1, parent:1163]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 1198 (SOL) , #gens: 217, #ops: 1, parent:1197]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 1232 (SOL) , #gens: 217, #ops: 1, parent:1231]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 1364 (SOL) , #gens: 219, #ops: 1, parent:1363]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:144) - f (sol): 0.0, [Variant id: 1642 (SOL) , #gens: 217, #ops: 1, parent:1641]
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:146) - 
All variants:
[DEBUG] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:148) - f 1.0, [Variant id: 1643, #gens: 218, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:152) - 
Solution details
[INFO ] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:153) - 
 --SOLUTIONS DESCRIPTION--

 ----
ProgramVariant 116
 
time(sec)= 1054
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 151
lineSuspiciousness= 0.354
original statement= return minRow
fixed statement= 
generation= 58
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 140
 
time(sec)= 1276
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 104
lineSuspiciousness= 0.224
original statement= minRatioPositions.add(i)
fixed statement= 
generation= 70
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 418
 
time(sec)= 2118
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 123
lineSuspiciousness= 0.236
original statement= if ((org.apache.commons.math3.util.Precision.equals(entry, 1.0, maxUlps)) && (row.equals(tableau.getBasicRow(column)))) {
	return row;
} 
fixed statement= 
generation= 209
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 456
 
time(sec)= 2464
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 104
lineSuspiciousness= 0.224
original statement= minRatioPositions.add(i)
fixed statement= 
generation= 228
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 458
 
time(sec)= 2666
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 145
lineSuspiciousness= 0.354
original statement= minIndex = i
fixed statement= 
generation= 229
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 542
 
time(sec)= 3101
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 115
lineSuspiciousness= 0.144
original statement= if ((minRatioPositions.size()) > 1) {
	for (java.lang.Integer row : minRatioPositions) {
		for (int i = 0 ; i < (tableau.getNumArtificialVariables()) ; i++) {
			int column = i + (tableau.getArtificialVariableOffset());
			final double entry = tableau.getEntry(row, column);
			if ((org.apache.commons.math3.util.Precision.equals(entry, 1.0, maxUlps)) && (row.equals(tableau.getBasicRow(column)))) {
				return row;
			} 
		}
	}
	java.lang.Integer minRow = null;
	int minIndex = tableau.getWidth();
	for (java.lang.Integer row : minRatioPositions) {
		int i = tableau.getNumObjectiveFunctions();
		for ( ; (i < ((tableau.getWidth()) - 1)) && (minRow != row) ; i++) {
			if (row == (tableau.getBasicRow(i))) {
				if (i < minIndex) {
					minIndex = i;
					minRow = row;
				} 
			} 
		}
	}
	return minRow;
} 
fixed statement= 
generation= 271
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 544
 
time(sec)= 3303
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 123
lineSuspiciousness= 0.236
original statement= if ((org.apache.commons.math3.util.Precision.equals(entry, 1.0, maxUlps)) && (row.equals(tableau.getBasicRow(column)))) {
	return row;
} 
fixed statement= 
generation= 272
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 620
 
time(sec)= 3802
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 124
lineSuspiciousness= 0.236
original statement= return row
fixed statement= 
generation= 310
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 922
 
time(sec)= 4698
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 145
lineSuspiciousness= 0.354
original statement= minIndex = i
fixed statement= 
generation= 461
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 948
 
time(sec)= 4909
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 151
lineSuspiciousness= 0.354
original statement= return minRow
fixed statement= 
generation= 474
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 962
 
time(sec)= 5127
operation: InsertAfterOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 144
lineSuspiciousness= 0.354
original statement= if (i < minIndex) {
	minIndex = i;
	minRow = row;
} 
fixed statement= return minRatioPositions.get(0)
generation= 481
ingredientScope= LOCAL
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 1004
 
time(sec)= 5403
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 115
lineSuspiciousness= 0.144
original statement= if ((minRatioPositions.size()) > 1) {
	for (java.lang.Integer row : minRatioPositions) {
		for (int i = 0 ; i < (tableau.getNumArtificialVariables()) ; i++) {
			int column = i + (tableau.getArtificialVariableOffset());
			final double entry = tableau.getEntry(row, column);
			if ((org.apache.commons.math3.util.Precision.equals(entry, 1.0, maxUlps)) && (row.equals(tableau.getBasicRow(column)))) {
				return row;
			} 
		}
	}
	java.lang.Integer minRow = null;
	int minIndex = tableau.getWidth();
	for (java.lang.Integer row : minRatioPositions) {
		int i = tableau.getNumObjectiveFunctions();
		for ( ; (i < ((tableau.getWidth()) - 1)) && (minRow != row) ; i++) {
			if (row == (tableau.getBasicRow(i))) {
				if (i < minIndex) {
					minIndex = i;
					minRow = row;
				} 
			} 
		}
	}
	return minRow;
} 
fixed statement= 
generation= 502
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 1164
 
time(sec)= 5873
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 119
lineSuspiciousness= 0.224
original statement= for (java.lang.Integer row : minRatioPositions) {
	for (int i = 0 ; i < (tableau.getNumArtificialVariables()) ; i++) {
		int column = i + (tableau.getArtificialVariableOffset());
		final double entry = tableau.getEntry(row, column);
		if ((org.apache.commons.math3.util.Precision.equals(entry, 1.0, maxUlps)) && (row.equals(tableau.getBasicRow(column)))) {
			return row;
		} 
	}
}
fixed statement= 
generation= 582
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 1198
 
time(sec)= 6112
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 115
lineSuspiciousness= 0.144
original statement= if ((minRatioPositions.size()) > 1) {
	for (java.lang.Integer row : minRatioPositions) {
		for (int i = 0 ; i < (tableau.getNumArtificialVariables()) ; i++) {
			int column = i + (tableau.getArtificialVariableOffset());
			final double entry = tableau.getEntry(row, column);
			if ((org.apache.commons.math3.util.Precision.equals(entry, 1.0, maxUlps)) && (row.equals(tableau.getBasicRow(column)))) {
				return row;
			} 
		}
	}
	java.lang.Integer minRow = null;
	int minIndex = tableau.getWidth();
	for (java.lang.Integer row : minRatioPositions) {
		int i = tableau.getNumObjectiveFunctions();
		for ( ; (i < ((tableau.getWidth()) - 1)) && (minRow != row) ; i++) {
			if (row == (tableau.getBasicRow(i))) {
				if (i < minIndex) {
					minIndex = i;
					minRow = row;
				} 
			} 
		}
	}
	return minRow;
} 
fixed statement= 
generation= 599
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 1232
 
time(sec)= 6393
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 119
lineSuspiciousness= 0.224
original statement= for (java.lang.Integer row : minRatioPositions) {
	for (int i = 0 ; i < (tableau.getNumArtificialVariables()) ; i++) {
		int column = i + (tableau.getArtificialVariableOffset());
		final double entry = tableau.getEntry(row, column);
		if ((org.apache.commons.math3.util.Precision.equals(entry, 1.0, maxUlps)) && (row.equals(tableau.getBasicRow(column)))) {
			return row;
		} 
	}
}
fixed statement= 
generation= 616
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 1364
 
time(sec)= 6817
operation: InsertAfterOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 78
lineSuspiciousness= 0.144
original statement= minPos = i
fixed statement= return minPos
generation= 682
ingredientScope= LOCAL
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
 ----
ProgramVariant 1642
 
time(sec)= 7407
operation: RemoveOp
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 123
lineSuspiciousness= 0.236
original statement= if ((org.apache.commons.math3.util.Precision.equals(entry, 1.0, maxUlps)) && (row.equals(tableau.getBasicRow(column)))) {
	return row;
} 
fixed statement= 
generation= 821
ingredientScope= -
validation=
failing: |true|0|26|[]|
manual_regression: |true|0|3917|[]|
evo_regression: |true|0|7|[]|
[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:397) - Time Total(s): 8153.778


Node: grisou-2.nancy.grid5000.fr


Date: Sat Jan 28 18:05:14 CET 2017

removed classes 

zipped 

copied zip 


