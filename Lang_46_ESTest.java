/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 18 00:53:45 GMT 2016
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.File;
import java.io.IOException;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PipedWriter;
import java.io.StringWriter;
import java.io.Writer;
import org.apache.commons.lang.StringEscapeUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StringEscapeUtils_ESTest extends StringEscapeUtils_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 31 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 60 IFNONNULL L801 - true
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 61 IFNONNULL L839 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I12 Branch 62 IF_ICMPGE L842 - true
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 63 IF_ICMPNE L846 - true
   * Goal 5. Branch org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 60 IFNONNULL L801 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeCsv(Ljava/lang/String;)Ljava/lang/String;
   * Goal 6. [Output]: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;:NonEmptyString
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 839
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 842
   * Goal 9. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 846
   * Goal 10. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 847
   * Goal 11. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 848
   * Goal 12. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;: Line 801
   * Goal 13. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;: Line 805
   * Goal 14. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;: Line 806
   * Goal 15. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;: Line 807
   * Goal 16. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;
   * Goal 17. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;
   * Goal 18. Weak Mutation 238: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;:801 - ReplaceComparisonOperator != null -> = null
   * Goal 19. Weak Mutation 239: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:839 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 240: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> 0
   * Goal 21. Weak Mutation 241: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> 1
   * Goal 22. Weak Mutation 242: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> -1
   * Goal 23. Weak Mutation 243: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> 3
   * Goal 24. Weak Mutation 246: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceComparisonOperator >= -> ==
   * Goal 25. Weak Mutation 247: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:846 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 248: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:846 - ReplaceConstant - 34 -> 0
   * Goal 27. Weak Mutation 249: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:846 - ReplaceConstant - 34 -> 1
   * Goal 28. Weak Mutation 250: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:846 - ReplaceConstant - 34 -> -1
   * Goal 29. Weak Mutation 251: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:846 - ReplaceConstant - 34 -> 33
   * Goal 30. Weak Mutation 252: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:846 - ReplaceConstant - 34 -> 35
   * Goal 31. Weak Mutation 255: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:846 - ReplaceComparisonOperator != -> >
   */

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = StringEscapeUtils.unescapeCsv("!7s[VY2b]?oZTwaHuHi");
      assertEquals("!7s[VY2b]?oZTwaHuHi", string0);
  }

  //Test case number: 1
  /*
   * 31 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 60 IFNONNULL L801 - true
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 61 IFNONNULL L839 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I12 Branch 62 IF_ICMPGE L842 - true
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 63 IF_ICMPNE L846 - true
   * Goal 5. Branch org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 60 IFNONNULL L801 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeCsv(Ljava/lang/String;)Ljava/lang/String;
   * Goal 6. [Output]: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;:NonEmptyString
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 839
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 842
   * Goal 9. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 846
   * Goal 10. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 847
   * Goal 11. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 848
   * Goal 12. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;: Line 801
   * Goal 13. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;: Line 805
   * Goal 14. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;: Line 806
   * Goal 15. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;: Line 807
   * Goal 16. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;
   * Goal 17. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;
   * Goal 18. Weak Mutation 238: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;:801 - ReplaceComparisonOperator != null -> = null
   * Goal 19. Weak Mutation 239: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:839 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 240: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> 0
   * Goal 21. Weak Mutation 241: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> 1
   * Goal 22. Weak Mutation 242: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> -1
   * Goal 23. Weak Mutation 243: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> 3
   * Goal 24. Weak Mutation 245: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 247: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:846 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 248: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:846 - ReplaceConstant - 34 -> 0
   * Goal 27. Weak Mutation 249: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:846 - ReplaceConstant - 34 -> 1
   * Goal 28. Weak Mutation 250: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:846 - ReplaceConstant - 34 -> -1
   * Goal 29. Weak Mutation 251: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:846 - ReplaceConstant - 34 -> 33
   * Goal 30. Weak Mutation 252: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:846 - ReplaceConstant - 34 -> 35
   * Goal 31. Weak Mutation 254: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:846 - ReplaceComparisonOperator != -> <
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = StringEscapeUtils.unescapeCsv("-#");
      assertEquals("-#", string0);
  }

  //Test case number: 2
  /*
   * 124 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: I3 Branch 1 IFNONNULL L155 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I3 Branch 2 IFNONNULL L179 - true
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I27 Branch 3 IFNONNULL L182 - true
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - true
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - false
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I54 Branch 5 IF_ICMPLE L191 - true
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I73 Branch 6 IF_ICMPLE L193 - true
   * Goal 9. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I92 Branch 7 IF_ICMPLE L195 - true
   * Goal 10. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I111 Branch 8 IF_ICMPGE L197 - true
   * Goal 11. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 17 LOOKUPSWITCH L228 Case 34 - true
   * Goal 12. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 17 LOOKUPSWITCH L228 Case 34 - false
   * Goal 13. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 18 LOOKUPSWITCH L228 Case 39 - false
   * Goal 14. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 19 LOOKUPSWITCH L228 Case 47 - false
   * Goal 15. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 20 LOOKUPSWITCH L228 Case 92 - false
   * Goal 16. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 21 LOOKUPSWITCH L228 Default-Case - true
   * Goal 17. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 21 LOOKUPSWITCH L228 Default-Case - false
   * Goal 18. Branch org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;: root-Branch in context: org.apache.commons.lang.StringEscapeUtils:escapeJava(Ljava/lang/String;)Ljava/lang/String;
   * Goal 19. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: I3 Branch 1 IFNONNULL L155 - true in context: 
   * Goal 20. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I3 Branch 2 IFNONNULL L179 - true in context: 
   * Goal 21. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I27 Branch 3 IFNONNULL L182 - true in context: 
   * Goal 22. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - false in context: 
   * Goal 23. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - true in context: 
   * Goal 24. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I54 Branch 5 IF_ICMPLE L191 - true in context: 
   * Goal 25. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I73 Branch 6 IF_ICMPLE L193 - true in context: 
   * Goal 26. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I92 Branch 7 IF_ICMPLE L195 - true in context: 
   * Goal 27. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I111 Branch 8 IF_ICMPGE L197 - true in context: 
   * Goal 28. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 20 LOOKUPSWITCH L228 Case 92 - false in context: 
   * Goal 29. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 21 LOOKUPSWITCH L228 Default-Case - false in context: 
   * Goal 30. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 19 LOOKUPSWITCH L228 Case 47 - false in context: 
   * Goal 31. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 18 LOOKUPSWITCH L228 Case 39 - false in context: 
   * Goal 32. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 21 LOOKUPSWITCH L228 Default-Case - true in context: 
   * Goal 33. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 17 LOOKUPSWITCH L228 Case 34 - true in context: 
   * Goal 34. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 17 LOOKUPSWITCH L228 Case 34 - false in context: 
   * Goal 35. [Output]: org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;:NonEmptyString
   * Goal 36. org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;: Line 86
   * Goal 37. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 179
   * Goal 38. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 182
   * Goal 39. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 186
   * Goal 40. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 187
   * Goal 41. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 188
   * Goal 42. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 191
   * Goal 43. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 193
   * Goal 44. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 195
   * Goal 45. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 197
   * Goal 46. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 228
   * Goal 47. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 236
   * Goal 48. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 237
   * Goal 49. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 238
   * Goal 50. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 248
   * Goal 51. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 253
   * Goal 52. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 155
   * Goal 53. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 159
   * Goal 54. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 160
   * Goal 55. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 161
   * Goal 56. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;
   * Goal 57. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;
   * Goal 58. Weak Mutation 0: org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;:86 - ReplaceConstant - 0 -> 1
   * Goal 59. Weak Mutation 4: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:155 - ReplaceComparisonOperator != null -> = null
   * Goal 60. Weak Mutation 5: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceConstant - 2 -> 0
   * Goal 61. Weak Mutation 6: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceConstant - 2 -> 1
   * Goal 62. Weak Mutation 7: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceConstant - 2 -> -1
   * Goal 63. Weak Mutation 8: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceConstant - 2 -> 3
   * Goal 64. Weak Mutation 9: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceArithmeticOperator * -> +
   * Goal 65. Weak Mutation 10: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceArithmeticOperator * -> %
   * Goal 66. Weak Mutation 11: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceArithmeticOperator * -> -
   * Goal 67. Weak Mutation 12: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceArithmeticOperator * -> /
   * Goal 68. Weak Mutation 13: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:160 - InsertUnaryOp Negation of escapeSingleQuotes
   * Goal 69. Weak Mutation 14: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:160 - InsertUnaryOp IINC 1 escapeSingleQuotes
   * Goal 70. Weak Mutation 15: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:160 - InsertUnaryOp IINC -1 escapeSingleQuotes
   * Goal 71. Weak Mutation 16: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:179 - ReplaceComparisonOperator != null -> = null
   * Goal 72. Weak Mutation 19: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:182 - ReplaceComparisonOperator != null -> = null
   * Goal 73. Weak Mutation 20: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceConstant - 0 -> 1
   * Goal 74. Weak Mutation 21: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceVariable i -> sz
   * Goal 75. Weak Mutation 22: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp Negation of i
   * Goal 76. Weak Mutation 23: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC 1 i
   * Goal 77. Weak Mutation 24: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC -1 i
   * Goal 78. Weak Mutation 25: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceVariable sz -> i
   * Goal 79. Weak Mutation 26: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp Negation of sz
   * Goal 80. Weak Mutation 27: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC 1 sz
   * Goal 81. Weak Mutation 28: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC -1 sz
   * Goal 82. Weak Mutation 29: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceComparisonOperator >= -> -1
   * Goal 83. Weak Mutation 30: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceComparisonOperator >= -> >
   * Goal 84. Weak Mutation 32: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:188 - ReplaceVariable i -> sz
   * Goal 85. Weak Mutation 33: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:188 - InsertUnaryOp Negation of i
   * Goal 86. Weak Mutation 34: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:188 - InsertUnaryOp IINC 1 i
   * Goal 87. Weak Mutation 35: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:188 - InsertUnaryOp IINC -1 i
   * Goal 88. Weak Mutation 36: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - InsertUnaryOp Negation of ch
   * Goal 89. Weak Mutation 37: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - InsertUnaryOp IINC 1 ch
   * Goal 90. Weak Mutation 38: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - InsertUnaryOp IINC -1 ch
   * Goal 91. Weak Mutation 39: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> 0
   * Goal 92. Weak Mutation 40: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> 1
   * Goal 93. Weak Mutation 41: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> -1
   * Goal 94. Weak Mutation 42: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> 4094
   * Goal 95. Weak Mutation 43: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> 4096
   * Goal 96. Weak Mutation 46: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceComparisonOperator <= -> ==
   * Goal 97. Weak Mutation 51: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - InsertUnaryOp Negation of ch
   * Goal 98. Weak Mutation 52: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - InsertUnaryOp IINC 1 ch
   * Goal 99. Weak Mutation 53: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - InsertUnaryOp IINC -1 ch
   * Goal 100. Weak Mutation 54: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> 0
   * Goal 101. Weak Mutation 55: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> 1
   * Goal 102. Weak Mutation 56: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> -1
   * Goal 103. Weak Mutation 57: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> 254
   * Goal 104. Weak Mutation 58: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> 256
   * Goal 105. Weak Mutation 61: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceComparisonOperator <= -> ==
   * Goal 106. Weak Mutation 66: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - InsertUnaryOp Negation of ch
   * Goal 107. Weak Mutation 67: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - InsertUnaryOp IINC 1 ch
   * Goal 108. Weak Mutation 68: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - InsertUnaryOp IINC -1 ch
   * Goal 109. Weak Mutation 69: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> 0
   * Goal 110. Weak Mutation 70: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> 1
   * Goal 111. Weak Mutation 71: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> -1
   * Goal 112. Weak Mutation 72: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> 126
   * Goal 113. Weak Mutation 73: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> 128
   * Goal 114. Weak Mutation 76: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceComparisonOperator <= -> ==
   * Goal 115. Weak Mutation 81: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - InsertUnaryOp Negation of ch
   * Goal 116. Weak Mutation 82: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - InsertUnaryOp IINC 1 ch
   * Goal 117. Weak Mutation 83: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - InsertUnaryOp IINC -1 ch
   * Goal 118. Weak Mutation 84: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> 0
   * Goal 119. Weak Mutation 85: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> 1
   * Goal 120. Weak Mutation 86: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> -1
   * Goal 121. Weak Mutation 87: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> 31
   * Goal 122. Weak Mutation 88: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> 33
   * Goal 123. Weak Mutation 90: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceComparisonOperator >= -> >
   * Goal 124. Weak Mutation 91: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceComparisonOperator >= -> ==
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = StringEscapeUtils.escapeJava("E)kY r-{=^*\"H$Xz5");
      assertEquals("E)kY r-{=^*\\\"H$Xz5", string0);
  }

  //Test case number: 3
  /*
   * 129 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: I3 Branch 1 IFNONNULL L155 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I3 Branch 2 IFNONNULL L179 - true
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I27 Branch 3 IFNONNULL L182 - true
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - true
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - false
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I54 Branch 5 IF_ICMPLE L191 - true
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I73 Branch 6 IF_ICMPLE L193 - true
   * Goal 9. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I92 Branch 7 IF_ICMPLE L195 - true
   * Goal 10. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I111 Branch 8 IF_ICMPGE L197 - true
   * Goal 11. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 17 LOOKUPSWITCH L228 Case 34 - true
   * Goal 12. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 17 LOOKUPSWITCH L228 Case 34 - false
   * Goal 13. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 18 LOOKUPSWITCH L228 Case 39 - false
   * Goal 14. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 19 LOOKUPSWITCH L228 Case 47 - true
   * Goal 15. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 19 LOOKUPSWITCH L228 Case 47 - false
   * Goal 16. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 20 LOOKUPSWITCH L228 Case 92 - false
   * Goal 17. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 21 LOOKUPSWITCH L228 Default-Case - true
   * Goal 18. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 21 LOOKUPSWITCH L228 Default-Case - false
   * Goal 19. Branch org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;: root-Branch in context: org.apache.commons.lang.StringEscapeUtils:escapeJava(Ljava/lang/String;)Ljava/lang/String;
   * Goal 20. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: I3 Branch 1 IFNONNULL L155 - true in context: 
   * Goal 21. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I3 Branch 2 IFNONNULL L179 - true in context: 
   * Goal 22. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I27 Branch 3 IFNONNULL L182 - true in context: 
   * Goal 23. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - false in context: 
   * Goal 24. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - true in context: 
   * Goal 25. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I54 Branch 5 IF_ICMPLE L191 - true in context: 
   * Goal 26. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I73 Branch 6 IF_ICMPLE L193 - true in context: 
   * Goal 27. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I92 Branch 7 IF_ICMPLE L195 - true in context: 
   * Goal 28. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I111 Branch 8 IF_ICMPGE L197 - true in context: 
   * Goal 29. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 20 LOOKUPSWITCH L228 Case 92 - false in context: 
   * Goal 30. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 21 LOOKUPSWITCH L228 Default-Case - false in context: 
   * Goal 31. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 19 LOOKUPSWITCH L228 Case 47 - false in context: 
   * Goal 32. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 18 LOOKUPSWITCH L228 Case 39 - false in context: 
   * Goal 33. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 21 LOOKUPSWITCH L228 Default-Case - true in context: 
   * Goal 34. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 17 LOOKUPSWITCH L228 Case 34 - true in context: 
   * Goal 35. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 17 LOOKUPSWITCH L228 Case 34 - false in context: 
   * Goal 36. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 19 LOOKUPSWITCH L228 Case 47 - true in context: 
   * Goal 37. [Output]: org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;:NonEmptyString
   * Goal 38. org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;: Line 86
   * Goal 39. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 179
   * Goal 40. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 182
   * Goal 41. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 186
   * Goal 42. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 187
   * Goal 43. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 188
   * Goal 44. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 191
   * Goal 45. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 193
   * Goal 46. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 195
   * Goal 47. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 197
   * Goal 48. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 228
   * Goal 49. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 236
   * Goal 50. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 237
   * Goal 51. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 238
   * Goal 52. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 244
   * Goal 53. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 245
   * Goal 54. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 246
   * Goal 55. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 248
   * Goal 56. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 253
   * Goal 57. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 155
   * Goal 58. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 159
   * Goal 59. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 160
   * Goal 60. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 161
   * Goal 61. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;
   * Goal 62. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;
   * Goal 63. Weak Mutation 0: org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;:86 - ReplaceConstant - 0 -> 1
   * Goal 64. Weak Mutation 4: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:155 - ReplaceComparisonOperator != null -> = null
   * Goal 65. Weak Mutation 5: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceConstant - 2 -> 0
   * Goal 66. Weak Mutation 6: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceConstant - 2 -> 1
   * Goal 67. Weak Mutation 7: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceConstant - 2 -> -1
   * Goal 68. Weak Mutation 8: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceConstant - 2 -> 3
   * Goal 69. Weak Mutation 9: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceArithmeticOperator * -> +
   * Goal 70. Weak Mutation 10: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceArithmeticOperator * -> %
   * Goal 71. Weak Mutation 11: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceArithmeticOperator * -> -
   * Goal 72. Weak Mutation 12: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceArithmeticOperator * -> /
   * Goal 73. Weak Mutation 13: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:160 - InsertUnaryOp Negation of escapeSingleQuotes
   * Goal 74. Weak Mutation 14: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:160 - InsertUnaryOp IINC 1 escapeSingleQuotes
   * Goal 75. Weak Mutation 15: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:160 - InsertUnaryOp IINC -1 escapeSingleQuotes
   * Goal 76. Weak Mutation 16: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:179 - ReplaceComparisonOperator != null -> = null
   * Goal 77. Weak Mutation 19: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:182 - ReplaceComparisonOperator != null -> = null
   * Goal 78. Weak Mutation 20: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceConstant - 0 -> 1
   * Goal 79. Weak Mutation 21: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceVariable i -> sz
   * Goal 80. Weak Mutation 22: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp Negation of i
   * Goal 81. Weak Mutation 23: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC 1 i
   * Goal 82. Weak Mutation 24: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC -1 i
   * Goal 83. Weak Mutation 25: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceVariable sz -> i
   * Goal 84. Weak Mutation 26: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp Negation of sz
   * Goal 85. Weak Mutation 27: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC 1 sz
   * Goal 86. Weak Mutation 28: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC -1 sz
   * Goal 87. Weak Mutation 29: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceComparisonOperator >= -> -1
   * Goal 88. Weak Mutation 30: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceComparisonOperator >= -> >
   * Goal 89. Weak Mutation 32: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:188 - ReplaceVariable i -> sz
   * Goal 90. Weak Mutation 33: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:188 - InsertUnaryOp Negation of i
   * Goal 91. Weak Mutation 34: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:188 - InsertUnaryOp IINC 1 i
   * Goal 92. Weak Mutation 35: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:188 - InsertUnaryOp IINC -1 i
   * Goal 93. Weak Mutation 36: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - InsertUnaryOp Negation of ch
   * Goal 94. Weak Mutation 37: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - InsertUnaryOp IINC 1 ch
   * Goal 95. Weak Mutation 38: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - InsertUnaryOp IINC -1 ch
   * Goal 96. Weak Mutation 39: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> 0
   * Goal 97. Weak Mutation 40: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> 1
   * Goal 98. Weak Mutation 41: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> -1
   * Goal 99. Weak Mutation 42: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> 4094
   * Goal 100. Weak Mutation 43: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> 4096
   * Goal 101. Weak Mutation 46: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceComparisonOperator <= -> ==
   * Goal 102. Weak Mutation 51: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - InsertUnaryOp Negation of ch
   * Goal 103. Weak Mutation 52: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - InsertUnaryOp IINC 1 ch
   * Goal 104. Weak Mutation 53: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - InsertUnaryOp IINC -1 ch
   * Goal 105. Weak Mutation 54: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> 0
   * Goal 106. Weak Mutation 55: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> 1
   * Goal 107. Weak Mutation 56: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> -1
   * Goal 108. Weak Mutation 57: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> 254
   * Goal 109. Weak Mutation 58: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> 256
   * Goal 110. Weak Mutation 61: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceComparisonOperator <= -> ==
   * Goal 111. Weak Mutation 66: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - InsertUnaryOp Negation of ch
   * Goal 112. Weak Mutation 67: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - InsertUnaryOp IINC 1 ch
   * Goal 113. Weak Mutation 68: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - InsertUnaryOp IINC -1 ch
   * Goal 114. Weak Mutation 69: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> 0
   * Goal 115. Weak Mutation 70: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> 1
   * Goal 116. Weak Mutation 71: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> -1
   * Goal 117. Weak Mutation 72: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> 126
   * Goal 118. Weak Mutation 73: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> 128
   * Goal 119. Weak Mutation 75: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceComparisonOperator <= -> <
   * Goal 120. Weak Mutation 76: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceComparisonOperator <= -> ==
   * Goal 121. Weak Mutation 81: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - InsertUnaryOp Negation of ch
   * Goal 122. Weak Mutation 82: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - InsertUnaryOp IINC 1 ch
   * Goal 123. Weak Mutation 83: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - InsertUnaryOp IINC -1 ch
   * Goal 124. Weak Mutation 84: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> 0
   * Goal 125. Weak Mutation 85: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> 1
   * Goal 126. Weak Mutation 86: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> -1
   * Goal 127. Weak Mutation 87: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> 31
   * Goal 128. Weak Mutation 88: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> 33
   * Goal 129. Weak Mutation 91: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceComparisonOperator >= -> ==
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = StringEscapeUtils.escapeJava("2e/[),C%SK#?L\"Ia");
      assertEquals("2e\\/[),C%SK#?L\\\"Ia", string0);
  }

  //Test case number: 4
  /*
   * 60 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 23 IFNONNULL L276 - true
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 24 IFNONNULL L306 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 25 IFNONNULL L309 - true
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I58 Branch 26 IF_ICMPGE L316 - true
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I58 Branch 26 IF_ICMPGE L316 - false
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I68 Branch 27 IFEQ L318 - true
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I131 Branch 29 IFEQ L337 - true
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I223 Branch 40 IF_ICMPNE L376 - true
   * Goal 9. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I243 Branch 41 IFEQ L382 - true
   * Goal 10. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 23 IFNONNULL L276 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/lang/String;)Ljava/lang/String;
   * Goal 11. [Output]: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;:NonEmptyString
   * Goal 12. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 306
   * Goal 13. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 309
   * Goal 14. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 312
   * Goal 15. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 313
   * Goal 16. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 314
   * Goal 17. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 315
   * Goal 18. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 316
   * Goal 19. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 317
   * Goal 20. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 318
   * Goal 21. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 337
   * Goal 22. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 376
   * Goal 23. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 380
   * Goal 24. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 382
   * Goal 25. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 387
   * Goal 26. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: Line 276
   * Goal 27. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: Line 280
   * Goal 28. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: Line 281
   * Goal 29. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: Line 282
   * Goal 30. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;
   * Goal 31. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;
   * Goal 32. Weak Mutation 98: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;:276 - ReplaceComparisonOperator != null -> = null
   * Goal 33. Weak Mutation 99: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:306 - ReplaceComparisonOperator != null -> = null
   * Goal 34. Weak Mutation 102: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:309 - ReplaceComparisonOperator != null -> = null
   * Goal 35. Weak Mutation 103: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 0
   * Goal 36. Weak Mutation 104: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 1
   * Goal 37. Weak Mutation 105: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> -1
   * Goal 38. Weak Mutation 106: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 3
   * Goal 39. Weak Mutation 107: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 5
   * Goal 40. Weak Mutation 108: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:314 - ReplaceConstant - 0 -> 1
   * Goal 41. Weak Mutation 109: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:315 - ReplaceConstant - 0 -> 1
   * Goal 42. Weak Mutation 110: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceConstant - 0 -> 1
   * Goal 43. Weak Mutation 111: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceVariable i -> sz
   * Goal 44. Weak Mutation 112: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp Negation of i
   * Goal 45. Weak Mutation 113: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC 1 i
   * Goal 46. Weak Mutation 114: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC -1 i
   * Goal 47. Weak Mutation 115: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceVariable sz -> i
   * Goal 48. Weak Mutation 116: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp Negation of sz
   * Goal 49. Weak Mutation 117: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC 1 sz
   * Goal 50. Weak Mutation 118: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC -1 sz
   * Goal 51. Weak Mutation 119: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceComparisonOperator >= -> -1
   * Goal 52. Weak Mutation 120: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceComparisonOperator >= -> >
   * Goal 53. Weak Mutation 122: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - ReplaceVariable i -> sz
   * Goal 54. Weak Mutation 123: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - InsertUnaryOp Negation of i
   * Goal 55. Weak Mutation 124: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - InsertUnaryOp IINC 1 i
   * Goal 56. Weak Mutation 125: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - InsertUnaryOp IINC -1 i
   * Goal 57. Weak Mutation 127: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - InsertUnaryOp Negation of inUnicode
   * Goal 58. Weak Mutation 128: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - InsertUnaryOp IINC 1 inUnicode
   * Goal 59. Weak Mutation 129: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - InsertUnaryOp IINC -1 inUnicode
   * Goal 60. Weak Mutation 130: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = StringEscapeUtils.unescapeJava("Li]=:_9");
      assertEquals("Li]=:_9", string0);
  }

  //Test case number: 5
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 53 IFNONNULL L666 - true
   * Goal 2. Branch org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 53 IFNONNULL L666 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeXml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 3. [Output]: org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/lang/String;)Ljava/lang/String;:NonEmptyString
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/lang/String;)Ljava/lang/String;: Line 666
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/lang/String;)Ljava/lang/String;: Line 669
   * Goal 6. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 7. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 8. Weak Mutation 192: org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/lang/String;)Ljava/lang/String;:666 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = StringEscapeUtils.unescapeXml("cedil");
      assertEquals("cedil", string0);
  }

  //Test case number: 6
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 23 IFNONNULL L276 - false
   * Goal 3. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/lang/String;)Ljava/lang/String;: root-Branch in context: org.apache.commons.lang.StringEscapeUtils:unescapeJavaScript(Ljava/lang/String;)Ljava/lang/String;
   * Goal 4. [Output]: org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/lang/String;)Ljava/lang/String;:Null
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: Line 276
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: Line 277
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/lang/String;)Ljava/lang/String;: Line 401
   * Goal 8. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/lang/String;)Ljava/lang/String;
   * Goal 9. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/lang/String;)Ljava/lang/String;
   * Goal 10. Weak Mutation 98: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;:276 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = StringEscapeUtils.unescapeJavaScript((String) null);
      assertNull(string0);
  }

  //Test case number: 7
  /*
   * 42 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 23 IFNONNULL L276 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 24 IFNONNULL L306 - true
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 25 IFNONNULL L309 - true
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I58 Branch 26 IF_ICMPGE L316 - true
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I243 Branch 41 IFEQ L382 - true
   * Goal 7. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/lang/String;)Ljava/lang/String;: root-Branch in context: org.apache.commons.lang.StringEscapeUtils:unescapeJavaScript(Ljava/lang/String;)Ljava/lang/String;
   * Goal 8. [Output]: org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/lang/String;)Ljava/lang/String;:EmptyString
   * Goal 9. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 306
   * Goal 10. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 309
   * Goal 11. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 312
   * Goal 12. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 313
   * Goal 13. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 314
   * Goal 14. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 315
   * Goal 15. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 316
   * Goal 16. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 382
   * Goal 17. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 387
   * Goal 18. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: Line 276
   * Goal 19. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: Line 280
   * Goal 20. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: Line 281
   * Goal 21. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: Line 282
   * Goal 22. org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/lang/String;)Ljava/lang/String;: Line 401
   * Goal 23. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/lang/String;)Ljava/lang/String;
   * Goal 24. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/lang/String;)Ljava/lang/String;
   * Goal 25. Weak Mutation 98: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;:276 - ReplaceComparisonOperator != null -> = null
   * Goal 26. Weak Mutation 99: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:306 - ReplaceComparisonOperator != null -> = null
   * Goal 27. Weak Mutation 102: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:309 - ReplaceComparisonOperator != null -> = null
   * Goal 28. Weak Mutation 103: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 0
   * Goal 29. Weak Mutation 104: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 1
   * Goal 30. Weak Mutation 105: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> -1
   * Goal 31. Weak Mutation 106: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 3
   * Goal 32. Weak Mutation 107: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 5
   * Goal 33. Weak Mutation 108: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:314 - ReplaceConstant - 0 -> 1
   * Goal 34. Weak Mutation 109: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:315 - ReplaceConstant - 0 -> 1
   * Goal 35. Weak Mutation 110: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceConstant - 0 -> 1
   * Goal 36. Weak Mutation 112: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp Negation of i
   * Goal 37. Weak Mutation 113: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC 1 i
   * Goal 38. Weak Mutation 114: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC -1 i
   * Goal 39. Weak Mutation 116: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp Negation of sz
   * Goal 40. Weak Mutation 117: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC 1 sz
   * Goal 41. Weak Mutation 118: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC -1 sz
   * Goal 42. Weak Mutation 120: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = StringEscapeUtils.unescapeJavaScript("");
      assertEquals("", string0);
  }

  //Test case number: 8
  /*
   * 25 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 45 IFNONNULL L525 - true
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 46 IFNONNULL L559 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 47 IFNONNULL L562 - true
   * Goal 4. Branch org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 45 IFNONNULL L525 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeHtml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 5. [Output]: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;:EmptyString
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 559
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 562
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 565
   * Goal 9. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 566
   * Goal 10. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;: Line 525
   * Goal 11. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;: Line 529
   * Goal 12. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;: Line 530
   * Goal 13. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;: Line 531
   * Goal 14. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 15. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 16. Weak Mutation 169: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;:525 - ReplaceComparisonOperator != null -> = null
   * Goal 17. Weak Mutation 170: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;:529 - ReplaceConstant - 1.5 -> 0.0
   * Goal 18. Weak Mutation 171: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;:529 - ReplaceConstant - 1.5 -> 1.0
   * Goal 19. Weak Mutation 172: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;:529 - ReplaceConstant - 1.5 -> -1.0
   * Goal 20. Weak Mutation 173: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;:529 - ReplaceConstant - 1.5 -> 0.5
   * Goal 21. Weak Mutation 174: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;:529 - ReplaceConstant - 1.5 -> 2.5
   * Goal 22. Weak Mutation 175: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;:529 - ReplaceArithmeticOperator * -> +
   * Goal 23. Weak Mutation 177: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;:529 - ReplaceArithmeticOperator * -> -
   * Goal 24. Weak Mutation 179: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V:559 - ReplaceComparisonOperator != null -> = null
   * Goal 25. Weak Mutation 182: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V:562 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = StringEscapeUtils.unescapeHtml("");
      assertEquals("", string0);
  }

  //Test case number: 9
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 50 IFNONNULL L616 - true
   * Goal 2. Branch org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 50 IFNONNULL L616 - true in context: org.apache.commons.lang.StringEscapeUtils:escapeXml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 3. [Output]: org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/lang/String;)Ljava/lang/String;:EmptyString
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/lang/String;)Ljava/lang/String;: Line 616
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/lang/String;)Ljava/lang/String;: Line 619
   * Goal 6. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 7. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 8. Weak Mutation 187: org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/lang/String;)Ljava/lang/String;:616 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = StringEscapeUtils.escapeXml("");
      assertEquals("", string0);
  }

  //Test case number: 10
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 54 IFNONNULL L692 - true
   * Goal 2. Branch org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 54 IFNONNULL L692 - true in context: org.apache.commons.lang.StringEscapeUtils:escapeSql(Ljava/lang/String;)Ljava/lang/String;
   * Goal 3. [Output]: org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;:EmptyString
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;: Line 692
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;: Line 695
   * Goal 6. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;
   * Goal 7. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;
   * Goal 8. Weak Mutation 193: org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;:692 - ReplaceComparisonOperator != null -> = null
   * Goal 9. Weak Mutation 194: org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;:695 - ReplaceConstant - ' -> 
   * Goal 10. Weak Mutation 195: org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;:695 - ReplaceConstant - '' -> 
   */

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = StringEscapeUtils.escapeSql("");
      assertEquals("", string0);
  }

  //Test case number: 11
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: I3 Branch 1 IFNONNULL L155 - false
   * Goal 3. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/lang/String;)Ljava/lang/String;: root-Branch in context: org.apache.commons.lang.StringEscapeUtils:escapeJavaScript(Ljava/lang/String;)Ljava/lang/String;
   * Goal 4. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: I3 Branch 1 IFNONNULL L155 - false in context: 
   * Goal 5. [Output]: org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/lang/String;)Ljava/lang/String;:Null
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/lang/String;)Ljava/lang/String;: Line 127
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 155
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 156
   * Goal 9. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/lang/String;)Ljava/lang/String;
   * Goal 10. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/lang/String;)Ljava/lang/String;
   * Goal 11. Weak Mutation 2: org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/lang/String;)Ljava/lang/String;:127 - ReplaceConstant - 1 -> 0
   * Goal 12. Weak Mutation 4: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:155 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = StringEscapeUtils.escapeJavaScript((String) null);
      assertNull(string0);
  }

  //Test case number: 12
  /*
   * 44 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: I3 Branch 1 IFNONNULL L155 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I3 Branch 2 IFNONNULL L179 - true
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I27 Branch 3 IFNONNULL L182 - true
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - true
   * Goal 6. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/lang/String;)Ljava/lang/String;: root-Branch in context: org.apache.commons.lang.StringEscapeUtils:escapeJavaScript(Ljava/lang/String;)Ljava/lang/String;
   * Goal 7. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: I3 Branch 1 IFNONNULL L155 - true in context: 
   * Goal 8. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I3 Branch 2 IFNONNULL L179 - true in context: 
   * Goal 9. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I27 Branch 3 IFNONNULL L182 - true in context: 
   * Goal 10. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - true in context: 
   * Goal 11. [Output]: org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/lang/String;)Ljava/lang/String;:EmptyString
   * Goal 12. org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/lang/String;)Ljava/lang/String;: Line 127
   * Goal 13. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 179
   * Goal 14. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 182
   * Goal 15. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 186
   * Goal 16. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 187
   * Goal 17. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 253
   * Goal 18. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 155
   * Goal 19. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 159
   * Goal 20. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 160
   * Goal 21. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 161
   * Goal 22. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/lang/String;)Ljava/lang/String;
   * Goal 23. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/lang/String;)Ljava/lang/String;
   * Goal 24. Weak Mutation 2: org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/lang/String;)Ljava/lang/String;:127 - ReplaceConstant - 1 -> 0
   * Goal 25. Weak Mutation 4: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:155 - ReplaceComparisonOperator != null -> = null
   * Goal 26. Weak Mutation 5: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceConstant - 2 -> 0
   * Goal 27. Weak Mutation 6: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceConstant - 2 -> 1
   * Goal 28. Weak Mutation 7: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceConstant - 2 -> -1
   * Goal 29. Weak Mutation 8: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceConstant - 2 -> 3
   * Goal 30. Weak Mutation 9: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceArithmeticOperator * -> +
   * Goal 31. Weak Mutation 11: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceArithmeticOperator * -> -
   * Goal 32. Weak Mutation 13: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:160 - InsertUnaryOp Negation of escapeSingleQuotes
   * Goal 33. Weak Mutation 14: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:160 - InsertUnaryOp IINC 1 escapeSingleQuotes
   * Goal 34. Weak Mutation 15: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:160 - InsertUnaryOp IINC -1 escapeSingleQuotes
   * Goal 35. Weak Mutation 16: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:179 - ReplaceComparisonOperator != null -> = null
   * Goal 36. Weak Mutation 19: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:182 - ReplaceComparisonOperator != null -> = null
   * Goal 37. Weak Mutation 20: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceConstant - 0 -> 1
   * Goal 38. Weak Mutation 22: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp Negation of i
   * Goal 39. Weak Mutation 23: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC 1 i
   * Goal 40. Weak Mutation 24: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC -1 i
   * Goal 41. Weak Mutation 26: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp Negation of sz
   * Goal 42. Weak Mutation 27: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC 1 sz
   * Goal 43. Weak Mutation 28: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC -1 sz
   * Goal 44. Weak Mutation 30: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = StringEscapeUtils.escapeJavaScript("");
      assertEquals("", string0);
  }

  //Test case number: 13
  /*
   * 44 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: I3 Branch 1 IFNONNULL L155 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I3 Branch 2 IFNONNULL L179 - true
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I27 Branch 3 IFNONNULL L182 - true
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - true
   * Goal 6. Branch org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;: root-Branch in context: org.apache.commons.lang.StringEscapeUtils:escapeJava(Ljava/lang/String;)Ljava/lang/String;
   * Goal 7. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: I3 Branch 1 IFNONNULL L155 - true in context: 
   * Goal 8. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I3 Branch 2 IFNONNULL L179 - true in context: 
   * Goal 9. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I27 Branch 3 IFNONNULL L182 - true in context: 
   * Goal 10. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - true in context: 
   * Goal 11. [Output]: org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;:EmptyString
   * Goal 12. org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;: Line 86
   * Goal 13. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 179
   * Goal 14. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 182
   * Goal 15. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 186
   * Goal 16. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 187
   * Goal 17. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 253
   * Goal 18. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 155
   * Goal 19. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 159
   * Goal 20. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 160
   * Goal 21. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 161
   * Goal 22. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;
   * Goal 23. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;
   * Goal 24. Weak Mutation 0: org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;:86 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 4: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:155 - ReplaceComparisonOperator != null -> = null
   * Goal 26. Weak Mutation 5: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceConstant - 2 -> 0
   * Goal 27. Weak Mutation 6: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceConstant - 2 -> 1
   * Goal 28. Weak Mutation 7: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceConstant - 2 -> -1
   * Goal 29. Weak Mutation 8: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceConstant - 2 -> 3
   * Goal 30. Weak Mutation 9: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceArithmeticOperator * -> +
   * Goal 31. Weak Mutation 11: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceArithmeticOperator * -> -
   * Goal 32. Weak Mutation 13: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:160 - InsertUnaryOp Negation of escapeSingleQuotes
   * Goal 33. Weak Mutation 14: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:160 - InsertUnaryOp IINC 1 escapeSingleQuotes
   * Goal 34. Weak Mutation 15: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:160 - InsertUnaryOp IINC -1 escapeSingleQuotes
   * Goal 35. Weak Mutation 16: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:179 - ReplaceComparisonOperator != null -> = null
   * Goal 36. Weak Mutation 19: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:182 - ReplaceComparisonOperator != null -> = null
   * Goal 37. Weak Mutation 20: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceConstant - 0 -> 1
   * Goal 38. Weak Mutation 22: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp Negation of i
   * Goal 39. Weak Mutation 23: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC 1 i
   * Goal 40. Weak Mutation 24: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC -1 i
   * Goal 41. Weak Mutation 26: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp Negation of sz
   * Goal 42. Weak Mutation 27: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC 1 sz
   * Goal 43. Weak Mutation 28: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC -1 sz
   * Goal 44. Weak Mutation 30: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = StringEscapeUtils.escapeJava("");
      assertEquals("", string0);
  }

  //Test case number: 14
  /*
   * 25 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 42 IFNONNULL L453 - true
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 43 IFNONNULL L498 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 44 IFNONNULL L501 - true
   * Goal 4. Branch org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 42 IFNONNULL L453 - true in context: org.apache.commons.lang.StringEscapeUtils:escapeHtml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 5. [Output]: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;:EmptyString
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 498
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 501
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 504
   * Goal 9. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 505
   * Goal 10. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;: Line 453
   * Goal 11. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;: Line 457
   * Goal 12. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;: Line 458
   * Goal 13. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;: Line 459
   * Goal 14. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 15. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 16. Weak Mutation 155: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;:453 - ReplaceComparisonOperator != null -> = null
   * Goal 17. Weak Mutation 156: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;:457 - ReplaceConstant - 1.5 -> 0.0
   * Goal 18. Weak Mutation 157: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;:457 - ReplaceConstant - 1.5 -> 1.0
   * Goal 19. Weak Mutation 158: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;:457 - ReplaceConstant - 1.5 -> -1.0
   * Goal 20. Weak Mutation 159: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;:457 - ReplaceConstant - 1.5 -> 0.5
   * Goal 21. Weak Mutation 160: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;:457 - ReplaceConstant - 1.5 -> 2.5
   * Goal 22. Weak Mutation 161: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;:457 - ReplaceArithmeticOperator * -> +
   * Goal 23. Weak Mutation 163: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;:457 - ReplaceArithmeticOperator * -> -
   * Goal 24. Weak Mutation 165: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V:498 - ReplaceComparisonOperator != null -> = null
   * Goal 25. Weak Mutation 168: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V:501 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = StringEscapeUtils.escapeHtml("");
      assertEquals("", string0);
  }

  //Test case number: 15
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;: I5 Branch 55 IFEQ L723 - false
   * Goal 2. Branch org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;: I5 Branch 55 IFEQ L723 - false in context: org.apache.commons.lang.StringEscapeUtils:escapeCsv(Ljava/lang/String;)Ljava/lang/String;
   * Goal 3. [Output]: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;:Null
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;: Line 723
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;: Line 724
   * Goal 6. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;
   * Goal 7. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;
   * Goal 8. Weak Mutation 196: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;:723 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = StringEscapeUtils.escapeCsv((String) null);
      assertNull(string0);
  }

  //Test case number: 16
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;: I5 Branch 55 IFEQ L723 - false
   * Goal 2. Branch org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;: I5 Branch 55 IFEQ L723 - false in context: org.apache.commons.lang.StringEscapeUtils:escapeCsv(Ljava/lang/String;)Ljava/lang/String;
   * Goal 3. [Output]: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;:EmptyString
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;: Line 723
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;: Line 724
   * Goal 6. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;
   * Goal 7. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;
   * Goal 8. Weak Mutation 196: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;:723 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = StringEscapeUtils.escapeCsv("");
      assertEquals("", string0);
  }

  //Test case number: 17
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 24 IFNONNULL L306 - false
   * Goal 3. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.lang.StringEscapeUtils:unescapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 4. unescapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 306
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 307
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V: Line 421
   * Goal 8. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 9. Weak Mutation 99: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:306 - ReplaceComparisonOperator != null -> = null
   * Goal 10. Weak Mutation 100: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:307 - ReplaceConstant - The Writer must not be null -> 
   * Goal 11. Weak Mutation 101: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:307 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringEscapeUtils.unescapeJavaScript((Writer) null, "v<5%@Pg");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Writer must not be null
         //
         assertThrownBy("org.apache.commons.lang.StringEscapeUtils", e);
      }
  }

  //Test case number: 18
  /*
   * 53 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 24 IFNONNULL L306 - true
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 25 IFNONNULL L309 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I58 Branch 26 IF_ICMPGE L316 - false
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I68 Branch 27 IFEQ L318 - true
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I131 Branch 29 IFEQ L337 - true
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I223 Branch 40 IF_ICMPNE L376 - true
   * Goal 7. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 24 IFNONNULL L306 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 8. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 25 IFNONNULL L309 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 9. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I58 Branch 26 IF_ICMPGE L316 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 10. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I68 Branch 27 IFEQ L318 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 11. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I131 Branch 29 IFEQ L337 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 12. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I223 Branch 40 IF_ICMPNE L376 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 13. unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V_java.io.IOException_DECLARED
   * Goal 14. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 306
   * Goal 15. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 309
   * Goal 16. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 312
   * Goal 17. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 313
   * Goal 18. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 314
   * Goal 19. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 315
   * Goal 20. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 316
   * Goal 21. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 317
   * Goal 22. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 318
   * Goal 23. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 337
   * Goal 24. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 376
   * Goal 25. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 380
   * Goal 26. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 27. Weak Mutation 99: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:306 - ReplaceComparisonOperator != null -> = null
   * Goal 28. Weak Mutation 102: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:309 - ReplaceComparisonOperator != null -> = null
   * Goal 29. Weak Mutation 103: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 0
   * Goal 30. Weak Mutation 104: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 1
   * Goal 31. Weak Mutation 105: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> -1
   * Goal 32. Weak Mutation 106: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 3
   * Goal 33. Weak Mutation 107: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 5
   * Goal 34. Weak Mutation 108: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:314 - ReplaceConstant - 0 -> 1
   * Goal 35. Weak Mutation 109: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:315 - ReplaceConstant - 0 -> 1
   * Goal 36. Weak Mutation 110: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceConstant - 0 -> 1
   * Goal 37. Weak Mutation 111: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceVariable i -> sz
   * Goal 38. Weak Mutation 112: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp Negation of i
   * Goal 39. Weak Mutation 113: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC 1 i
   * Goal 40. Weak Mutation 114: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC -1 i
   * Goal 41. Weak Mutation 115: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceVariable sz -> i
   * Goal 42. Weak Mutation 116: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp Negation of sz
   * Goal 43. Weak Mutation 117: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC 1 sz
   * Goal 44. Weak Mutation 118: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC -1 sz
   * Goal 45. Weak Mutation 119: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceComparisonOperator >= -> -1
   * Goal 46. Weak Mutation 122: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - ReplaceVariable i -> sz
   * Goal 47. Weak Mutation 123: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - InsertUnaryOp Negation of i
   * Goal 48. Weak Mutation 124: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - InsertUnaryOp IINC 1 i
   * Goal 49. Weak Mutation 125: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - InsertUnaryOp IINC -1 i
   * Goal 50. Weak Mutation 127: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - InsertUnaryOp Negation of inUnicode
   * Goal 51. Weak Mutation 128: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - InsertUnaryOp IINC 1 inUnicode
   * Goal 52. Weak Mutation 129: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - InsertUnaryOp IINC -1 inUnicode
   * Goal 53. Weak Mutation 130: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      try { 
        StringEscapeUtils.unescapeJava((Writer) pipedWriter0, "Z*N7Y:");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         assertThrownBy("java.io.PipedWriter", e);
      }
  }

  //Test case number: 19
  /*
   * 15 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 61 IFNONNULL L839 - true
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I12 Branch 62 IF_ICMPGE L842 - false
   * Goal 3. Branch org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 61 IFNONNULL L839 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 4. Branch org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I12 Branch 62 IF_ICMPGE L842 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 5. unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 839
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 842
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 843
   * Goal 9. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 10. Weak Mutation 239: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:839 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 240: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> 0
   * Goal 12. Weak Mutation 241: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> 1
   * Goal 13. Weak Mutation 242: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> -1
   * Goal 14. Weak Mutation 243: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> 3
   * Goal 15. Weak Mutation 244: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceComparisonOperator >= -> -1
   */

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringEscapeUtils.unescapeCsv((Writer) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.lang.StringEscapeUtils", e);
      }
  }

  //Test case number: 20
  /*
   * 15 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 61 IFNONNULL L839 - true
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I12 Branch 62 IF_ICMPGE L842 - false
   * Goal 3. Branch org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 61 IFNONNULL L839 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 4. Branch org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I12 Branch 62 IF_ICMPGE L842 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 5. unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V_java.io.IOException_DECLARED
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 839
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 842
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 843
   * Goal 9. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 10. Weak Mutation 239: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:839 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 240: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> 0
   * Goal 12. Weak Mutation 241: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> 1
   * Goal 13. Weak Mutation 242: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> -1
   * Goal 14. Weak Mutation 243: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> 3
   * Goal 15. Weak Mutation 244: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceComparisonOperator >= -> -1
   */

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      try { 
        StringEscapeUtils.unescapeCsv((Writer) pipedWriter0, "6");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         assertThrownBy("java.io.PipedWriter", e);
      }
  }

  //Test case number: 21
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I3 Branch 2 IFNONNULL L179 - false
   * Goal 3. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.lang.StringEscapeUtils:escapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 4. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I3 Branch 2 IFNONNULL L179 - false in context: 
   * Goal 5. escapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V: Line 143
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 179
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 180
   * Goal 9. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 10. Weak Mutation 3: org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V:143 - ReplaceConstant - 1 -> 0
   * Goal 11. Weak Mutation 16: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:179 - ReplaceComparisonOperator != null -> = null
   * Goal 12. Weak Mutation 17: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:180 - ReplaceConstant - The Writer must not be null -> 
   * Goal 13. Weak Mutation 18: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:180 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringEscapeUtils.escapeJavaScript((Writer) null, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Writer must not be null
         //
         assertThrownBy("org.apache.commons.lang.StringEscapeUtils", e);
      }
  }

  //Test case number: 22
  /*
   * 93 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/io/Writer;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I3 Branch 2 IFNONNULL L179 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I27 Branch 3 IFNONNULL L182 - true
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - false
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I54 Branch 5 IF_ICMPLE L191 - true
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I73 Branch 6 IF_ICMPLE L193 - true
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I92 Branch 7 IF_ICMPLE L195 - true
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I111 Branch 8 IF_ICMPGE L197 - true
   * Goal 9. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 17 LOOKUPSWITCH L228 Case 34 - false
   * Goal 10. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 18 LOOKUPSWITCH L228 Case 39 - false
   * Goal 11. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 19 LOOKUPSWITCH L228 Case 47 - false
   * Goal 12. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 20 LOOKUPSWITCH L228 Case 92 - false
   * Goal 13. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 21 LOOKUPSWITCH L228 Default-Case - true
   * Goal 14. Branch org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/io/Writer;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.lang.StringEscapeUtils:escapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 15. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I3 Branch 2 IFNONNULL L179 - true in context: 
   * Goal 16. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I27 Branch 3 IFNONNULL L182 - true in context: 
   * Goal 17. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - false in context: 
   * Goal 18. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I54 Branch 5 IF_ICMPLE L191 - true in context: 
   * Goal 19. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I73 Branch 6 IF_ICMPLE L193 - true in context: 
   * Goal 20. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I92 Branch 7 IF_ICMPLE L195 - true in context: 
   * Goal 21. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I111 Branch 8 IF_ICMPGE L197 - true in context: 
   * Goal 22. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 20 LOOKUPSWITCH L228 Case 92 - false in context: 
   * Goal 23. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 19 LOOKUPSWITCH L228 Case 47 - false in context: 
   * Goal 24. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 18 LOOKUPSWITCH L228 Case 39 - false in context: 
   * Goal 25. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 21 LOOKUPSWITCH L228 Default-Case - true in context: 
   * Goal 26. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 17 LOOKUPSWITCH L228 Case 34 - false in context: 
   * Goal 27. escapeJava(Ljava/io/Writer;Ljava/lang/String;)V_java.io.IOException_DECLARED
   * Goal 28. org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 102
   * Goal 29. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 179
   * Goal 30. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 182
   * Goal 31. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 186
   * Goal 32. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 187
   * Goal 33. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 188
   * Goal 34. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 191
   * Goal 35. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 193
   * Goal 36. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 195
   * Goal 37. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 197
   * Goal 38. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 228
   * Goal 39. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 248
   * Goal 40. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 41. Weak Mutation 1: org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/io/Writer;Ljava/lang/String;)V:102 - ReplaceConstant - 0 -> 1
   * Goal 42. Weak Mutation 16: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:179 - ReplaceComparisonOperator != null -> = null
   * Goal 43. Weak Mutation 19: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:182 - ReplaceComparisonOperator != null -> = null
   * Goal 44. Weak Mutation 20: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceConstant - 0 -> 1
   * Goal 45. Weak Mutation 21: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceVariable i -> sz
   * Goal 46. Weak Mutation 22: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp Negation of i
   * Goal 47. Weak Mutation 23: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC 1 i
   * Goal 48. Weak Mutation 24: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC -1 i
   * Goal 49. Weak Mutation 25: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceVariable sz -> i
   * Goal 50. Weak Mutation 26: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp Negation of sz
   * Goal 51. Weak Mutation 27: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC 1 sz
   * Goal 52. Weak Mutation 28: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC -1 sz
   * Goal 53. Weak Mutation 29: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceComparisonOperator >= -> -1
   * Goal 54. Weak Mutation 32: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:188 - ReplaceVariable i -> sz
   * Goal 55. Weak Mutation 33: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:188 - InsertUnaryOp Negation of i
   * Goal 56. Weak Mutation 34: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:188 - InsertUnaryOp IINC 1 i
   * Goal 57. Weak Mutation 35: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:188 - InsertUnaryOp IINC -1 i
   * Goal 58. Weak Mutation 36: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - InsertUnaryOp Negation of ch
   * Goal 59. Weak Mutation 37: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - InsertUnaryOp IINC 1 ch
   * Goal 60. Weak Mutation 38: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - InsertUnaryOp IINC -1 ch
   * Goal 61. Weak Mutation 39: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> 0
   * Goal 62. Weak Mutation 40: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> 1
   * Goal 63. Weak Mutation 41: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> -1
   * Goal 64. Weak Mutation 42: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> 4094
   * Goal 65. Weak Mutation 43: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> 4096
   * Goal 66. Weak Mutation 46: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceComparisonOperator <= -> ==
   * Goal 67. Weak Mutation 51: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - InsertUnaryOp Negation of ch
   * Goal 68. Weak Mutation 52: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - InsertUnaryOp IINC 1 ch
   * Goal 69. Weak Mutation 53: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - InsertUnaryOp IINC -1 ch
   * Goal 70. Weak Mutation 54: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> 0
   * Goal 71. Weak Mutation 55: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> 1
   * Goal 72. Weak Mutation 56: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> -1
   * Goal 73. Weak Mutation 57: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> 254
   * Goal 74. Weak Mutation 58: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> 256
   * Goal 75. Weak Mutation 61: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceComparisonOperator <= -> ==
   * Goal 76. Weak Mutation 66: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - InsertUnaryOp Negation of ch
   * Goal 77. Weak Mutation 67: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - InsertUnaryOp IINC 1 ch
   * Goal 78. Weak Mutation 68: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - InsertUnaryOp IINC -1 ch
   * Goal 79. Weak Mutation 69: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> 0
   * Goal 80. Weak Mutation 70: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> 1
   * Goal 81. Weak Mutation 71: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> -1
   * Goal 82. Weak Mutation 72: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> 126
   * Goal 83. Weak Mutation 73: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> 128
   * Goal 84. Weak Mutation 76: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceComparisonOperator <= -> ==
   * Goal 85. Weak Mutation 81: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - InsertUnaryOp Negation of ch
   * Goal 86. Weak Mutation 82: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - InsertUnaryOp IINC 1 ch
   * Goal 87. Weak Mutation 83: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - InsertUnaryOp IINC -1 ch
   * Goal 88. Weak Mutation 84: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> 0
   * Goal 89. Weak Mutation 85: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> 1
   * Goal 90. Weak Mutation 86: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> -1
   * Goal 91. Weak Mutation 87: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> 31
   * Goal 92. Weak Mutation 88: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> 33
   * Goal 93. Weak Mutation 91: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceComparisonOperator >= -> ==
   */

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("'");
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter((OutputStream) mockPrintStream0);
      outputStreamWriter0.close();
      try { 
        StringEscapeUtils.escapeJava((Writer) outputStreamWriter0, "B%[igd/%Mp4@E");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         assertThrownBy("sun.nio.cs.StreamEncoder", e);
      }
  }

  //Test case number: 23
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I5 Branch 56 IFEQ L761 - false
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I9 Branch 57 IFNULL L762 - false
   * Goal 3. Branch org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I5 Branch 56 IFEQ L761 - false in context: org.apache.commons.lang.StringEscapeUtils:escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 4. Branch org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I9 Branch 57 IFNULL L762 - false in context: org.apache.commons.lang.StringEscapeUtils:escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 5. escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 761
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 762
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 763
   * Goal 9. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 10. Weak Mutation 197: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:761 - ReplaceComparisonOperator == -> !=
   * Goal 11. Weak Mutation 198: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:762 - ReplaceComparisonOperator = null -> != null
   */

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringEscapeUtils.escapeCsv((Writer) null, "LSiX9Q");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.lang.StringEscapeUtils", e);
      }
  }

  //Test case number: 24
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I5 Branch 56 IFEQ L761 - false
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I9 Branch 57 IFNULL L762 - false
   * Goal 3. Branch org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I5 Branch 56 IFEQ L761 - false in context: org.apache.commons.lang.StringEscapeUtils:escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 4. Branch org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I9 Branch 57 IFNULL L762 - false in context: org.apache.commons.lang.StringEscapeUtils:escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 5. escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V_java.io.IOException_DECLARED
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 761
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 762
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 763
   * Goal 9. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 10. Weak Mutation 197: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:761 - ReplaceComparisonOperator == -> !=
   * Goal 11. Weak Mutation 198: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:762 - ReplaceComparisonOperator = null -> != null
   */

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      try { 
        StringEscapeUtils.escapeCsv((Writer) pipedWriter0, "''");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         assertThrownBy("java.io.PipedWriter", e);
      }
  }

  //Test case number: 25
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 61 IFNONNULL L839 - true
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I12 Branch 62 IF_ICMPGE L842 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 63 IF_ICMPNE L846 - true
   * Goal 4. Branch org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 61 IFNONNULL L839 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 5. Branch org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I12 Branch 62 IF_ICMPGE L842 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 6. Branch org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 63 IF_ICMPNE L846 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 839
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 842
   * Goal 9. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 846
   * Goal 10. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 847
   * Goal 11. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 848
   * Goal 12. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 13. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 14. Weak Mutation 239: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:839 - ReplaceComparisonOperator != null -> = null
   * Goal 15. Weak Mutation 240: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> 0
   * Goal 16. Weak Mutation 241: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> 1
   * Goal 17. Weak Mutation 242: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> -1
   * Goal 18. Weak Mutation 243: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> 3
   * Goal 19. Weak Mutation 246: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceComparisonOperator >= -> ==
   * Goal 20. Weak Mutation 247: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:846 - ReplaceConstant - 0 -> 1
   * Goal 21. Weak Mutation 248: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:846 - ReplaceConstant - 34 -> 0
   * Goal 22. Weak Mutation 249: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:846 - ReplaceConstant - 34 -> 1
   * Goal 23. Weak Mutation 250: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:846 - ReplaceConstant - 34 -> -1
   * Goal 24. Weak Mutation 251: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:846 - ReplaceConstant - 34 -> 33
   * Goal 25. Weak Mutation 252: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:846 - ReplaceConstant - 34 -> 35
   * Goal 26. Weak Mutation 254: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:846 - ReplaceComparisonOperator != -> <
   */

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = "\\u";
      MockFile mockFile0 = new MockFile(string0, string0);
      MockFileWriter mockFileWriter0 = new MockFileWriter((File) mockFile0);
      StringEscapeUtils.unescapeCsv((Writer) mockFileWriter0, "_6piP8");
  }

  //Test case number: 26
  /*
   * 16 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 61 IFNONNULL L839 - true
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I12 Branch 62 IF_ICMPGE L842 - false
   * Goal 3. Branch org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 61 IFNONNULL L839 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 4. Branch org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I12 Branch 62 IF_ICMPGE L842 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 839
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 842
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 843
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 844
   * Goal 9. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 10. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 11. Weak Mutation 239: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:839 - ReplaceComparisonOperator != null -> = null
   * Goal 12. Weak Mutation 240: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> 0
   * Goal 13. Weak Mutation 241: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> 1
   * Goal 14. Weak Mutation 242: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> -1
   * Goal 15. Weak Mutation 243: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> 3
   * Goal 16. Weak Mutation 244: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceComparisonOperator >= -> -1
   */

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(26);
      StringEscapeUtils.unescapeCsv((Writer) stringWriter0, "");
      assertEquals("", stringWriter0.toString());
  }

  //Test case number: 27
  /*
   * 60 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I5 Branch 56 IFEQ L761 - true
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I31 Branch 58 IF_ICMPGE L768 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I31 Branch 58 IF_ICMPGE L768 - false
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I42 Branch 59 IF_ICMPNE L770 - true
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I42 Branch 59 IF_ICMPNE L770 - false
   * Goal 6. Branch org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I5 Branch 56 IFEQ L761 - true in context: org.apache.commons.lang.StringEscapeUtils:escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 7. Branch org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I31 Branch 58 IF_ICMPGE L768 - true in context: org.apache.commons.lang.StringEscapeUtils:escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 8. Branch org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I31 Branch 58 IF_ICMPGE L768 - false in context: org.apache.commons.lang.StringEscapeUtils:escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 9. Branch org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I42 Branch 59 IF_ICMPNE L770 - true in context: org.apache.commons.lang.StringEscapeUtils:escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 10. Branch org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I42 Branch 59 IF_ICMPNE L770 - false in context: org.apache.commons.lang.StringEscapeUtils:escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 11. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 761
   * Goal 12. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 767
   * Goal 13. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 768
   * Goal 14. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 769
   * Goal 15. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 770
   * Goal 16. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 771
   * Goal 17. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 773
   * Goal 18. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 775
   * Goal 19. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 776
   * Goal 20. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 21. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 22. Weak Mutation 197: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:761 - ReplaceComparisonOperator == -> !=
   * Goal 23. Weak Mutation 199: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:767 - ReplaceConstant - 34 -> 0
   * Goal 24. Weak Mutation 200: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:767 - ReplaceConstant - 34 -> 1
   * Goal 25. Weak Mutation 201: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:767 - ReplaceConstant - 34 -> -1
   * Goal 26. Weak Mutation 202: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:767 - ReplaceConstant - 34 -> 33
   * Goal 27. Weak Mutation 203: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:767 - ReplaceConstant - 34 -> 35
   * Goal 28. Weak Mutation 204: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:768 - ReplaceConstant - 0 -> 1
   * Goal 29. Weak Mutation 205: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:768 - InsertUnaryOp Negation of i
   * Goal 30. Weak Mutation 206: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:768 - InsertUnaryOp IINC 1 i
   * Goal 31. Weak Mutation 207: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:768 - InsertUnaryOp IINC -1 i
   * Goal 32. Weak Mutation 208: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:768 - ReplaceComparisonOperator >= -> -1
   * Goal 33. Weak Mutation 209: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:768 - ReplaceComparisonOperator >= -> >
   * Goal 34. Weak Mutation 211: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:769 - InsertUnaryOp Negation of i
   * Goal 35. Weak Mutation 212: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:769 - InsertUnaryOp IINC 1 i
   * Goal 36. Weak Mutation 213: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:769 - InsertUnaryOp IINC -1 i
   * Goal 37. Weak Mutation 214: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:770 - InsertUnaryOp Negation of c
   * Goal 38. Weak Mutation 215: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:770 - InsertUnaryOp IINC 1 c
   * Goal 39. Weak Mutation 216: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:770 - InsertUnaryOp IINC -1 c
   * Goal 40. Weak Mutation 217: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:770 - ReplaceConstant - 34 -> 0
   * Goal 41. Weak Mutation 218: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:770 - ReplaceConstant - 34 -> 1
   * Goal 42. Weak Mutation 219: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:770 - ReplaceConstant - 34 -> -1
   * Goal 43. Weak Mutation 220: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:770 - ReplaceConstant - 34 -> 33
   * Goal 44. Weak Mutation 221: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:770 - ReplaceConstant - 34 -> 35
   * Goal 45. Weak Mutation 222: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:770 - ReplaceComparisonOperator != -> -1
   * Goal 46. Weak Mutation 223: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:770 - ReplaceComparisonOperator != -> <
   * Goal 47. Weak Mutation 224: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:770 - ReplaceComparisonOperator != -> >
   * Goal 48. Weak Mutation 225: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:771 - ReplaceConstant - 34 -> 0
   * Goal 49. Weak Mutation 226: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:771 - ReplaceConstant - 34 -> 1
   * Goal 50. Weak Mutation 227: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:771 - ReplaceConstant - 34 -> -1
   * Goal 51. Weak Mutation 228: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:771 - ReplaceConstant - 34 -> 33
   * Goal 52. Weak Mutation 229: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:771 - ReplaceConstant - 34 -> 35
   * Goal 53. Weak Mutation 230: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:773 - InsertUnaryOp Negation of c
   * Goal 54. Weak Mutation 231: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:773 - InsertUnaryOp IINC 1 c
   * Goal 55. Weak Mutation 232: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:773 - InsertUnaryOp IINC -1 c
   * Goal 56. Weak Mutation 233: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:775 - ReplaceConstant - 34 -> 0
   * Goal 57. Weak Mutation 234: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:775 - ReplaceConstant - 34 -> 1
   * Goal 58. Weak Mutation 235: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:775 - ReplaceConstant - 34 -> -1
   * Goal 59. Weak Mutation 236: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:775 - ReplaceConstant - 34 -> 33
   * Goal 60. Weak Mutation 237: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:775 - ReplaceConstant - 34 -> 35
   */

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MockFileWriter mockFileWriter0 = new MockFileWriter("E)kY r-{=^*\"H$Xz5", true);
      StringEscapeUtils.escapeCsv((Writer) mockFileWriter0, "E)kY r-{=^*\"H$Xz5");
  }

  //Test case number: 28
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 46 IFNONNULL L559 - true
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 47 IFNONNULL L562 - true
   * Goal 3. Branch org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 46 IFNONNULL L559 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 4. Branch org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 47 IFNONNULL L562 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 559
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 562
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 565
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 566
   * Goal 9. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 10. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 11. Weak Mutation 179: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V:559 - ReplaceComparisonOperator != null -> = null
   * Goal 12. Weak Mutation 182: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V:562 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("UD(';cX:");
      StringEscapeUtils.unescapeHtml((Writer) mockPrintWriter0, "c$/~9c5[w7");
  }

  //Test case number: 29
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 43 IFNONNULL L498 - true
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 44 IFNONNULL L501 - true
   * Goal 3. Branch org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 43 IFNONNULL L498 - true in context: org.apache.commons.lang.StringEscapeUtils:escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 4. Branch org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 44 IFNONNULL L501 - true in context: org.apache.commons.lang.StringEscapeUtils:escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 498
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 501
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 504
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 505
   * Goal 9. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 10. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 11. Weak Mutation 165: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V:498 - ReplaceComparisonOperator != null -> = null
   * Goal 12. Weak Mutation 168: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V:501 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("UD(';cX:");
      StringEscapeUtils.escapeHtml((Writer) mockPrintWriter0, "UD(';cX:");
  }

  //Test case number: 30
  /*
   * 103 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 24 IFNONNULL L306 - true
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 25 IFNONNULL L309 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I58 Branch 26 IF_ICMPGE L316 - true
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I58 Branch 26 IF_ICMPGE L316 - false
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I68 Branch 27 IFEQ L318 - true
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I68 Branch 27 IFEQ L318 - false
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I80 Branch 28 IF_ICMPNE L322 - true
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I131 Branch 29 IFEQ L337 - true
   * Goal 9. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I131 Branch 29 IFEQ L337 - false
   * Goal 10. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 30 LOOKUPSWITCH L340 Case 34 - false
   * Goal 11. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 31 LOOKUPSWITCH L340 Case 39 - false
   * Goal 12. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 32 LOOKUPSWITCH L340 Case 92 - false
   * Goal 13. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 33 LOOKUPSWITCH L340 Case 98 - false
   * Goal 14. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 34 LOOKUPSWITCH L340 Case 102 - false
   * Goal 15. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 35 LOOKUPSWITCH L340 Case 110 - false
   * Goal 16. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 36 LOOKUPSWITCH L340 Case 114 - false
   * Goal 17. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 37 LOOKUPSWITCH L340 Case 116 - false
   * Goal 18. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 38 LOOKUPSWITCH L340 Case 117 - true
   * Goal 19. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 39 LOOKUPSWITCH L340 Default-Case - false
   * Goal 20. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I223 Branch 40 IF_ICMPNE L376 - false
   * Goal 21. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I243 Branch 41 IFEQ L382 - true
   * Goal 22. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 24 IFNONNULL L306 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 23. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 25 IFNONNULL L309 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 24. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I58 Branch 26 IF_ICMPGE L316 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 25. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I58 Branch 26 IF_ICMPGE L316 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 26. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I68 Branch 27 IFEQ L318 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 27. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I68 Branch 27 IFEQ L318 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 28. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I80 Branch 28 IF_ICMPNE L322 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 29. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I131 Branch 29 IFEQ L337 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 30. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I131 Branch 29 IFEQ L337 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 31. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 37 LOOKUPSWITCH L340 Case 116 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 32. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 36 LOOKUPSWITCH L340 Case 114 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 33. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 39 LOOKUPSWITCH L340 Default-Case - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 34. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 35 LOOKUPSWITCH L340 Case 110 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 35. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 32 LOOKUPSWITCH L340 Case 92 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 36. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 31 LOOKUPSWITCH L340 Case 39 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 37. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 38 LOOKUPSWITCH L340 Case 117 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 38. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 34 LOOKUPSWITCH L340 Case 102 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 39. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 33 LOOKUPSWITCH L340 Case 98 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 40. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 30 LOOKUPSWITCH L340 Case 34 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 41. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I223 Branch 40 IF_ICMPNE L376 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 42. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I243 Branch 41 IFEQ L382 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 43. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 306
   * Goal 44. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 309
   * Goal 45. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 312
   * Goal 46. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 313
   * Goal 47. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 314
   * Goal 48. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 315
   * Goal 49. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 316
   * Goal 50. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 317
   * Goal 51. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 318
   * Goal 52. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 321
   * Goal 53. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 322
   * Goal 54. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 337
   * Goal 55. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 339
   * Goal 56. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 340
   * Goal 57. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 368
   * Goal 58. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 369
   * Goal 59. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 376
   * Goal 60. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 377
   * Goal 61. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 378
   * Goal 62. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 382
   * Goal 63. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 387
   * Goal 64. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 65. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 66. Weak Mutation 99: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:306 - ReplaceComparisonOperator != null -> = null
   * Goal 67. Weak Mutation 102: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:309 - ReplaceComparisonOperator != null -> = null
   * Goal 68. Weak Mutation 103: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 0
   * Goal 69. Weak Mutation 104: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 1
   * Goal 70. Weak Mutation 105: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> -1
   * Goal 71. Weak Mutation 106: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 3
   * Goal 72. Weak Mutation 107: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 5
   * Goal 73. Weak Mutation 108: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:314 - ReplaceConstant - 0 -> 1
   * Goal 74. Weak Mutation 109: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:315 - ReplaceConstant - 0 -> 1
   * Goal 75. Weak Mutation 110: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceConstant - 0 -> 1
   * Goal 76. Weak Mutation 111: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceVariable i -> sz
   * Goal 77. Weak Mutation 112: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp Negation of i
   * Goal 78. Weak Mutation 113: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC 1 i
   * Goal 79. Weak Mutation 114: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC -1 i
   * Goal 80. Weak Mutation 115: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceVariable sz -> i
   * Goal 81. Weak Mutation 116: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp Negation of sz
   * Goal 82. Weak Mutation 117: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC 1 sz
   * Goal 83. Weak Mutation 118: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC -1 sz
   * Goal 84. Weak Mutation 119: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceComparisonOperator >= -> -1
   * Goal 85. Weak Mutation 120: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceComparisonOperator >= -> >
   * Goal 86. Weak Mutation 122: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - ReplaceVariable i -> sz
   * Goal 87. Weak Mutation 123: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - InsertUnaryOp Negation of i
   * Goal 88. Weak Mutation 124: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - InsertUnaryOp IINC 1 i
   * Goal 89. Weak Mutation 125: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - InsertUnaryOp IINC -1 i
   * Goal 90. Weak Mutation 126: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - ReplaceVariable inUnicode -> hadSlash
   * Goal 91. Weak Mutation 127: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - InsertUnaryOp Negation of inUnicode
   * Goal 92. Weak Mutation 128: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - InsertUnaryOp IINC 1 inUnicode
   * Goal 93. Weak Mutation 129: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - InsertUnaryOp IINC -1 inUnicode
   * Goal 94. Weak Mutation 130: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - ReplaceComparisonOperator == -> !=
   * Goal 95. Weak Mutation 131: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:321 - InsertUnaryOp Negation of ch
   * Goal 96. Weak Mutation 132: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:321 - InsertUnaryOp IINC 1 ch
   * Goal 97. Weak Mutation 133: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:321 - InsertUnaryOp IINC -1 ch
   * Goal 98. Weak Mutation 134: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:322 - ReplaceConstant - 4 -> 0
   * Goal 99. Weak Mutation 135: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:322 - ReplaceConstant - 4 -> 1
   * Goal 100. Weak Mutation 136: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:322 - ReplaceConstant - 4 -> -1
   * Goal 101. Weak Mutation 137: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:322 - ReplaceConstant - 4 -> 3
   * Goal 102. Weak Mutation 138: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:322 - ReplaceConstant - 4 -> 5
   * Goal 103. Weak Mutation 141: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:322 - ReplaceComparisonOperator != -> >
   */

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = "\\u0";
      MockFile mockFile0 = new MockFile(string0, string0);
      MockFileWriter mockFileWriter0 = new MockFileWriter((File) mockFile0);
      StringEscapeUtils.unescapeJava((Writer) mockFileWriter0, string0);
  }

  //Test case number: 31
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 24 IFNONNULL L306 - true
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 25 IFNONNULL L309 - false
   * Goal 3. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 24 IFNONNULL L306 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 4. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 25 IFNONNULL L309 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 306
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 309
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 310
   * Goal 8. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 9. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 10. Weak Mutation 99: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:306 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 102: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:309 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(0);
      StringEscapeUtils.unescapeJava((Writer) stringWriter0, (String) null);
      assertEquals("", stringWriter0.toString());
  }

  //Test case number: 32
  /*
   * 22 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 60 IFNONNULL L801 - true
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 61 IFNONNULL L839 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I12 Branch 62 IF_ICMPGE L842 - false
   * Goal 4. Branch org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 60 IFNONNULL L801 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeCsv(Ljava/lang/String;)Ljava/lang/String;
   * Goal 5. [Output]: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;:EmptyString
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 839
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 842
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 843
   * Goal 9. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 844
   * Goal 10. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;: Line 801
   * Goal 11. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;: Line 805
   * Goal 12. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;: Line 806
   * Goal 13. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;: Line 807
   * Goal 14. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;
   * Goal 15. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;
   * Goal 16. Weak Mutation 238: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;:801 - ReplaceComparisonOperator != null -> = null
   * Goal 17. Weak Mutation 239: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:839 - ReplaceComparisonOperator != null -> = null
   * Goal 18. Weak Mutation 240: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> 0
   * Goal 19. Weak Mutation 241: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> 1
   * Goal 20. Weak Mutation 242: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> -1
   * Goal 21. Weak Mutation 243: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceConstant - 2 -> 3
   * Goal 22. Weak Mutation 244: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:842 - ReplaceComparisonOperator >= -> -1
   */

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = StringEscapeUtils.unescapeCsv("");
      assertEquals("", string0);
  }

  //Test case number: 33
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 61 IFNONNULL L839 - false
   * Goal 2. Branch org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 61 IFNONNULL L839 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 839
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 840
   * Goal 5. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 6. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 7. Weak Mutation 239: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:839 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      StringEscapeUtils.unescapeCsv((Writer) charArrayWriter0, (String) null);
      assertEquals(0, charArrayWriter0.size());
  }

  //Test case number: 34
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 60 IFNONNULL L801 - false
   * Goal 2. Branch org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 60 IFNONNULL L801 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeCsv(Ljava/lang/String;)Ljava/lang/String;
   * Goal 3. [Output]: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;:Null
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;: Line 801
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;: Line 802
   * Goal 6. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;
   * Goal 7. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;
   * Goal 8. Weak Mutation 238: org.apache.commons.lang.StringEscapeUtils.unescapeCsv(Ljava/lang/String;)Ljava/lang/String;:801 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = StringEscapeUtils.unescapeCsv((String) null);
      assertNull(string0);
  }

  //Test case number: 35
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I5 Branch 56 IFEQ L761 - false
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I9 Branch 57 IFNULL L762 - true
   * Goal 3. Branch org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I5 Branch 56 IFEQ L761 - false in context: org.apache.commons.lang.StringEscapeUtils:escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 4. Branch org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I9 Branch 57 IFNULL L762 - true in context: org.apache.commons.lang.StringEscapeUtils:escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 761
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 762
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 765
   * Goal 8. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 9. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 10. Weak Mutation 197: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:761 - ReplaceComparisonOperator == -> !=
   * Goal 11. Weak Mutation 198: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:762 - ReplaceComparisonOperator = null -> != null
   */

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(26);
      StringEscapeUtils.escapeCsv((Writer) stringWriter0, (String) null);
      assertEquals("", stringWriter0.toString());
  }

  //Test case number: 36
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;: I5 Branch 55 IFEQ L723 - false
   * Goal 2. Branch org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;: I5 Branch 55 IFEQ L723 - false in context: org.apache.commons.lang.StringEscapeUtils:escapeCsv(Ljava/lang/String;)Ljava/lang/String;
   * Goal 3. [Output]: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;:NonEmptyString
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;: Line 723
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;: Line 724
   * Goal 6. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;
   * Goal 7. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;
   * Goal 8. Weak Mutation 196: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;:723 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = StringEscapeUtils.escapeCsv("'");
      assertEquals("'", string0);
  }

  //Test case number: 37
  /*
   * 63 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;: I5 Branch 55 IFEQ L723 - true
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I5 Branch 56 IFEQ L761 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I31 Branch 58 IF_ICMPGE L768 - true
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I31 Branch 58 IF_ICMPGE L768 - false
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I42 Branch 59 IF_ICMPNE L770 - true
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: I42 Branch 59 IF_ICMPNE L770 - false
   * Goal 7. Branch org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;: I5 Branch 55 IFEQ L723 - true in context: org.apache.commons.lang.StringEscapeUtils:escapeCsv(Ljava/lang/String;)Ljava/lang/String;
   * Goal 8. [Output]: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;:NonEmptyString
   * Goal 9. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 761
   * Goal 10. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 767
   * Goal 11. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 768
   * Goal 12. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 769
   * Goal 13. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 770
   * Goal 14. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 771
   * Goal 15. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 773
   * Goal 16. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 775
   * Goal 17. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V: Line 776
   * Goal 18. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;: Line 723
   * Goal 19. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;: Line 727
   * Goal 20. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;: Line 728
   * Goal 21. org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;: Line 729
   * Goal 22. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;
   * Goal 23. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;
   * Goal 24. Weak Mutation 196: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/lang/String;)Ljava/lang/String;:723 - ReplaceComparisonOperator == -> !=
   * Goal 25. Weak Mutation 197: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:761 - ReplaceComparisonOperator == -> !=
   * Goal 26. Weak Mutation 199: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:767 - ReplaceConstant - 34 -> 0
   * Goal 27. Weak Mutation 200: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:767 - ReplaceConstant - 34 -> 1
   * Goal 28. Weak Mutation 201: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:767 - ReplaceConstant - 34 -> -1
   * Goal 29. Weak Mutation 202: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:767 - ReplaceConstant - 34 -> 33
   * Goal 30. Weak Mutation 203: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:767 - ReplaceConstant - 34 -> 35
   * Goal 31. Weak Mutation 204: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:768 - ReplaceConstant - 0 -> 1
   * Goal 32. Weak Mutation 205: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:768 - InsertUnaryOp Negation of i
   * Goal 33. Weak Mutation 206: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:768 - InsertUnaryOp IINC 1 i
   * Goal 34. Weak Mutation 207: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:768 - InsertUnaryOp IINC -1 i
   * Goal 35. Weak Mutation 208: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:768 - ReplaceComparisonOperator >= -> -1
   * Goal 36. Weak Mutation 209: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:768 - ReplaceComparisonOperator >= -> >
   * Goal 37. Weak Mutation 211: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:769 - InsertUnaryOp Negation of i
   * Goal 38. Weak Mutation 212: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:769 - InsertUnaryOp IINC 1 i
   * Goal 39. Weak Mutation 213: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:769 - InsertUnaryOp IINC -1 i
   * Goal 40. Weak Mutation 214: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:770 - InsertUnaryOp Negation of c
   * Goal 41. Weak Mutation 215: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:770 - InsertUnaryOp IINC 1 c
   * Goal 42. Weak Mutation 216: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:770 - InsertUnaryOp IINC -1 c
   * Goal 43. Weak Mutation 217: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:770 - ReplaceConstant - 34 -> 0
   * Goal 44. Weak Mutation 218: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:770 - ReplaceConstant - 34 -> 1
   * Goal 45. Weak Mutation 219: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:770 - ReplaceConstant - 34 -> -1
   * Goal 46. Weak Mutation 220: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:770 - ReplaceConstant - 34 -> 33
   * Goal 47. Weak Mutation 221: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:770 - ReplaceConstant - 34 -> 35
   * Goal 48. Weak Mutation 222: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:770 - ReplaceComparisonOperator != -> -1
   * Goal 49. Weak Mutation 223: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:770 - ReplaceComparisonOperator != -> <
   * Goal 50. Weak Mutation 224: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:770 - ReplaceComparisonOperator != -> >
   * Goal 51. Weak Mutation 225: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:771 - ReplaceConstant - 34 -> 0
   * Goal 52. Weak Mutation 226: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:771 - ReplaceConstant - 34 -> 1
   * Goal 53. Weak Mutation 227: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:771 - ReplaceConstant - 34 -> -1
   * Goal 54. Weak Mutation 228: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:771 - ReplaceConstant - 34 -> 33
   * Goal 55. Weak Mutation 229: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:771 - ReplaceConstant - 34 -> 35
   * Goal 56. Weak Mutation 230: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:773 - InsertUnaryOp Negation of c
   * Goal 57. Weak Mutation 231: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:773 - InsertUnaryOp IINC 1 c
   * Goal 58. Weak Mutation 232: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:773 - InsertUnaryOp IINC -1 c
   * Goal 59. Weak Mutation 233: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:775 - ReplaceConstant - 34 -> 0
   * Goal 60. Weak Mutation 234: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:775 - ReplaceConstant - 34 -> 1
   * Goal 61. Weak Mutation 235: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:775 - ReplaceConstant - 34 -> -1
   * Goal 62. Weak Mutation 236: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:775 - ReplaceConstant - 34 -> 33
   * Goal 63. Weak Mutation 237: org.apache.commons.lang.StringEscapeUtils.escapeCsv(Ljava/io/Writer;Ljava/lang/String;)V:775 - ReplaceConstant - 34 -> 35
   */

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = StringEscapeUtils.escapeCsv("E)kY r-{=^*\\\"H$Xz5");
      assertEquals("\"E)kY r-{=^*\\\"\"H$Xz5\"", string0);
  }

  //Test case number: 38
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 54 IFNONNULL L692 - false
   * Goal 2. Branch org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 54 IFNONNULL L692 - false in context: org.apache.commons.lang.StringEscapeUtils:escapeSql(Ljava/lang/String;)Ljava/lang/String;
   * Goal 3. [Output]: org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;:Null
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;: Line 692
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;: Line 693
   * Goal 6. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;
   * Goal 7. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;
   * Goal 8. Weak Mutation 193: org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;:692 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = StringEscapeUtils.escapeSql((String) null);
      assertNull(string0);
  }

  //Test case number: 39
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 54 IFNONNULL L692 - true
   * Goal 2. Branch org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 54 IFNONNULL L692 - true in context: org.apache.commons.lang.StringEscapeUtils:escapeSql(Ljava/lang/String;)Ljava/lang/String;
   * Goal 3. [Output]: org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;:NonEmptyString
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;: Line 692
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;: Line 695
   * Goal 6. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;
   * Goal 7. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;
   * Goal 8. Weak Mutation 193: org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;:692 - ReplaceComparisonOperator != null -> = null
   * Goal 9. Weak Mutation 194: org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;:695 - ReplaceConstant - ' -> 
   * Goal 10. Weak Mutation 195: org.apache.commons.lang.StringEscapeUtils.escapeSql(Ljava/lang/String;)Ljava/lang/String;:695 - ReplaceConstant - '' -> 
   */

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = StringEscapeUtils.escapeSql("223");
      assertEquals("223", string0);
  }

  //Test case number: 40
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 53 IFNONNULL L666 - false
   * Goal 2. Branch org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 53 IFNONNULL L666 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeXml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 3. [Output]: org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/lang/String;)Ljava/lang/String;:Null
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/lang/String;)Ljava/lang/String;: Line 666
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/lang/String;)Ljava/lang/String;: Line 667
   * Goal 6. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 7. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 8. Weak Mutation 192: org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/lang/String;)Ljava/lang/String;:666 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = StringEscapeUtils.unescapeXml((String) null);
      assertNull(string0);
  }

  //Test case number: 41
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 53 IFNONNULL L666 - true
   * Goal 2. Branch org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 53 IFNONNULL L666 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeXml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 3. [Output]: org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/lang/String;)Ljava/lang/String;:EmptyString
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/lang/String;)Ljava/lang/String;: Line 666
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/lang/String;)Ljava/lang/String;: Line 669
   * Goal 6. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 7. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 8. Weak Mutation 192: org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/lang/String;)Ljava/lang/String;:666 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = StringEscapeUtils.unescapeXml("");
      assertEquals("", string0);
  }

  //Test case number: 42
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 51 IFNONNULL L641 - true
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 52 IFNONNULL L644 - false
   * Goal 3. Branch org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 51 IFNONNULL L641 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 4. Branch org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 52 IFNONNULL L644 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V: Line 641
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V: Line 644
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V: Line 645
   * Goal 8. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 9. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 10. Weak Mutation 188: org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V:641 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 191: org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V:644 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringEscapeUtils.unescapeXml((Writer) stringWriter0, (String) null);
      assertEquals("", stringWriter0.toString());
  }

  //Test case number: 43
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 51 IFNONNULL L641 - false
   * Goal 2. Branch org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 51 IFNONNULL L641 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 3. unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V: Line 641
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V: Line 642
   * Goal 6. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 7. Weak Mutation 188: org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V:641 - ReplaceComparisonOperator != null -> = null
   * Goal 8. Weak Mutation 189: org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V:642 - ReplaceConstant - The Writer must not be null. -> 
   * Goal 9. Weak Mutation 190: org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V:642 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringEscapeUtils.unescapeXml((Writer) null, "org.apache.commons.lang.StringEscapeUtils");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Writer must not be null.
         //
         assertThrownBy("org.apache.commons.lang.StringEscapeUtils", e);
      }
  }

  //Test case number: 44
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 51 IFNONNULL L641 - true
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 52 IFNONNULL L644 - true
   * Goal 3. Branch org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 51 IFNONNULL L641 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 4. Branch org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 52 IFNONNULL L644 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V: Line 641
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V: Line 644
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V: Line 647
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V: Line 648
   * Goal 9. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 10. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 11. Weak Mutation 188: org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V:641 - ReplaceComparisonOperator != null -> = null
   * Goal 12. Weak Mutation 191: org.apache.commons.lang.StringEscapeUtils.unescapeXml(Ljava/io/Writer;Ljava/lang/String;)V:644 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      MockFile mockFile0 = new MockFile("s*z[w\"/l2jNT#;F1:|");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream((File) mockFile0, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter((OutputStream) mockFileOutputStream0, true);
      StringEscapeUtils.unescapeXml((Writer) mockPrintWriter0, "k{3pe5Ro|7@z:$2");
  }

  //Test case number: 45
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 50 IFNONNULL L616 - false
   * Goal 2. Branch org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 50 IFNONNULL L616 - false in context: org.apache.commons.lang.StringEscapeUtils:escapeXml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 3. [Output]: org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/lang/String;)Ljava/lang/String;:Null
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/lang/String;)Ljava/lang/String;: Line 616
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/lang/String;)Ljava/lang/String;: Line 617
   * Goal 6. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 7. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 8. Weak Mutation 187: org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/lang/String;)Ljava/lang/String;:616 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = StringEscapeUtils.escapeXml((String) null);
      assertNull(string0);
  }

  //Test case number: 46
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 50 IFNONNULL L616 - true
   * Goal 2. Branch org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 50 IFNONNULL L616 - true in context: org.apache.commons.lang.StringEscapeUtils:escapeXml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 3. [Output]: org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/lang/String;)Ljava/lang/String;:NonEmptyString
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/lang/String;)Ljava/lang/String;: Line 616
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/lang/String;)Ljava/lang/String;: Line 619
   * Goal 6. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 7. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 8. Weak Mutation 187: org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/lang/String;)Ljava/lang/String;:616 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = StringEscapeUtils.escapeXml("cedil");
      assertEquals("cedil", string0);
  }

  //Test case number: 47
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 48 IFNONNULL L589 - true
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 49 IFNONNULL L592 - false
   * Goal 3. Branch org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 48 IFNONNULL L589 - true in context: org.apache.commons.lang.StringEscapeUtils:escapeXml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 4. Branch org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 49 IFNONNULL L592 - false in context: org.apache.commons.lang.StringEscapeUtils:escapeXml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V: Line 589
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V: Line 592
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V: Line 593
   * Goal 8. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 9. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 10. Weak Mutation 183: org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V:589 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 186: org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V:592 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      StringEscapeUtils.escapeXml((Writer) charArrayWriter0, (String) null);
      assertEquals("", charArrayWriter0.toString());
  }

  //Test case number: 48
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 48 IFNONNULL L589 - false
   * Goal 2. Branch org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 48 IFNONNULL L589 - false in context: org.apache.commons.lang.StringEscapeUtils:escapeXml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 3. escapeXml(Ljava/io/Writer;Ljava/lang/String;)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V: Line 589
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V: Line 590
   * Goal 6. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 7. Weak Mutation 183: org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V:589 - ReplaceComparisonOperator != null -> = null
   * Goal 8. Weak Mutation 184: org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V:590 - ReplaceConstant - The Writer must not be null. -> 
   * Goal 9. Weak Mutation 185: org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V:590 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringEscapeUtils.escapeXml((Writer) null, "The Writer must not be null.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Writer must not be null.
         //
         assertThrownBy("org.apache.commons.lang.StringEscapeUtils", e);
      }
  }

  //Test case number: 49
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 48 IFNONNULL L589 - true
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 49 IFNONNULL L592 - true
   * Goal 3. Branch org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 48 IFNONNULL L589 - true in context: org.apache.commons.lang.StringEscapeUtils:escapeXml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 4. Branch org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 49 IFNONNULL L592 - true in context: org.apache.commons.lang.StringEscapeUtils:escapeXml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V: Line 589
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V: Line 592
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V: Line 595
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V: Line 596
   * Goal 9. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 10. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 11. Weak Mutation 183: org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V:589 - ReplaceComparisonOperator != null -> = null
   * Goal 12. Weak Mutation 186: org.apache.commons.lang.StringEscapeUtils.escapeXml(Ljava/io/Writer;Ljava/lang/String;)V:592 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("'");
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter((OutputStream) mockPrintStream0);
      StringEscapeUtils.escapeXml((Writer) outputStreamWriter0, "'");
  }

  //Test case number: 50
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 46 IFNONNULL L559 - true
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 47 IFNONNULL L562 - false
   * Goal 3. Branch org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 46 IFNONNULL L559 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 4. Branch org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 47 IFNONNULL L562 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 559
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 562
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 563
   * Goal 8. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 9. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 10. Weak Mutation 179: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V:559 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 182: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V:562 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = "\\u";
      MockFile mockFile0 = new MockFile(string0, string0);
      MockFileWriter mockFileWriter0 = new MockFileWriter((File) mockFile0);
      StringEscapeUtils.unescapeHtml((Writer) mockFileWriter0, (String) null);
  }

  //Test case number: 51
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 46 IFNONNULL L559 - false
   * Goal 2. Branch org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 46 IFNONNULL L559 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 3. unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 559
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 560
   * Goal 6. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 7. Weak Mutation 179: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V:559 - ReplaceComparisonOperator != null -> = null
   * Goal 8. Weak Mutation 180: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V:560 - ReplaceConstant - The Writer must not be null. -> 
   * Goal 9. Weak Mutation 181: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V:560 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringEscapeUtils.unescapeHtml((Writer) null, "IpU{7wxL4\"6pv");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Writer must not be null.
         //
         assertThrownBy("org.apache.commons.lang.StringEscapeUtils", e);
      }
  }

  //Test case number: 52
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 45 IFNONNULL L525 - false
   * Goal 2. Branch org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 45 IFNONNULL L525 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeHtml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 3. [Output]: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;:Null
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;: Line 525
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;: Line 526
   * Goal 6. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 7. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 8. Weak Mutation 169: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;:525 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String string0 = StringEscapeUtils.unescapeHtml((String) null);
      assertNull(string0);
  }

  //Test case number: 53
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 45 IFNONNULL L525 - true
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 46 IFNONNULL L559 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 47 IFNONNULL L562 - true
   * Goal 4. Branch org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 45 IFNONNULL L525 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeHtml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 5. [Output]: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;:NonEmptyString
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 559
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 562
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 565
   * Goal 9. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 566
   * Goal 10. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;: Line 525
   * Goal 11. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;: Line 529
   * Goal 12. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;: Line 530
   * Goal 13. org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;: Line 531
   * Goal 14. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 15. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 16. Weak Mutation 169: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;:525 - ReplaceComparisonOperator != null -> = null
   * Goal 17. Weak Mutation 170: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;:529 - ReplaceConstant - 1.5 -> 0.0
   * Goal 18. Weak Mutation 171: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;:529 - ReplaceConstant - 1.5 -> 1.0
   * Goal 19. Weak Mutation 172: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;:529 - ReplaceConstant - 1.5 -> -1.0
   * Goal 20. Weak Mutation 173: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;:529 - ReplaceConstant - 1.5 -> 0.5
   * Goal 21. Weak Mutation 174: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;:529 - ReplaceConstant - 1.5 -> 2.5
   * Goal 22. Weak Mutation 176: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;:529 - ReplaceArithmeticOperator * -> %
   * Goal 23. Weak Mutation 177: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;:529 - ReplaceArithmeticOperator * -> -
   * Goal 24. Weak Mutation 178: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/lang/String;)Ljava/lang/String;:529 - ReplaceArithmeticOperator * -> /
   * Goal 25. Weak Mutation 179: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V:559 - ReplaceComparisonOperator != null -> = null
   * Goal 26. Weak Mutation 182: org.apache.commons.lang.StringEscapeUtils.unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V:562 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = "\\u0";
      String string1 = StringEscapeUtils.unescapeHtml(string0);
      assertNotNull(string1);
      assertEquals("\\u0", string1);
  }

  //Test case number: 54
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 43 IFNONNULL L498 - true
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 44 IFNONNULL L501 - false
   * Goal 3. Branch org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 43 IFNONNULL L498 - true in context: org.apache.commons.lang.StringEscapeUtils:escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 4. Branch org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 44 IFNONNULL L501 - false in context: org.apache.commons.lang.StringEscapeUtils:escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 498
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 501
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 502
   * Goal 8. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 9. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 10. Weak Mutation 165: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V:498 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 168: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V:501 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("UD(';cX:");
      StringEscapeUtils.escapeHtml((Writer) mockPrintWriter0, (String) null);
  }

  //Test case number: 55
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 43 IFNONNULL L498 - false
   * Goal 2. Branch org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 43 IFNONNULL L498 - false in context: org.apache.commons.lang.StringEscapeUtils:escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 3. escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 498
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 499
   * Goal 6. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 7. Weak Mutation 165: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V:498 - ReplaceComparisonOperator != null -> = null
   * Goal 8. Weak Mutation 166: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V:499 - ReplaceConstant - The Writer must not be null. -> 
   * Goal 9. Weak Mutation 167: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V:499 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringEscapeUtils.escapeHtml((Writer) null, "l!]+Qg");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Writer must not be null.
         //
         assertThrownBy("org.apache.commons.lang.StringEscapeUtils", e);
      }
  }

  //Test case number: 56
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 42 IFNONNULL L453 - false
   * Goal 2. Branch org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 42 IFNONNULL L453 - false in context: org.apache.commons.lang.StringEscapeUtils:escapeHtml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 3. [Output]: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;:Null
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;: Line 453
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;: Line 454
   * Goal 6. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 7. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 8. Weak Mutation 155: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;:453 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String string0 = StringEscapeUtils.escapeHtml((String) null);
      assertNull(string0);
  }

  //Test case number: 57
  /*
   * 27 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 42 IFNONNULL L453 - true
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 43 IFNONNULL L498 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 44 IFNONNULL L501 - true
   * Goal 4. Branch org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 42 IFNONNULL L453 - true in context: org.apache.commons.lang.StringEscapeUtils:escapeHtml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 5. [Output]: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;:NonEmptyString
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 498
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 501
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 504
   * Goal 9. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V: Line 505
   * Goal 10. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;: Line 453
   * Goal 11. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;: Line 457
   * Goal 12. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;: Line 458
   * Goal 13. org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;: Line 459
   * Goal 14. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 15. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;
   * Goal 16. Weak Mutation 155: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;:453 - ReplaceComparisonOperator != null -> = null
   * Goal 17. Weak Mutation 156: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;:457 - ReplaceConstant - 1.5 -> 0.0
   * Goal 18. Weak Mutation 157: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;:457 - ReplaceConstant - 1.5 -> 1.0
   * Goal 19. Weak Mutation 158: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;:457 - ReplaceConstant - 1.5 -> -1.0
   * Goal 20. Weak Mutation 159: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;:457 - ReplaceConstant - 1.5 -> 0.5
   * Goal 21. Weak Mutation 160: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;:457 - ReplaceConstant - 1.5 -> 2.5
   * Goal 22. Weak Mutation 161: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;:457 - ReplaceArithmeticOperator * -> +
   * Goal 23. Weak Mutation 162: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;:457 - ReplaceArithmeticOperator * -> %
   * Goal 24. Weak Mutation 163: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;:457 - ReplaceArithmeticOperator * -> -
   * Goal 25. Weak Mutation 164: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/lang/String;)Ljava/lang/String;:457 - ReplaceArithmeticOperator * -> /
   * Goal 26. Weak Mutation 165: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V:498 - ReplaceComparisonOperator != null -> = null
   * Goal 27. Weak Mutation 168: org.apache.commons.lang.StringEscapeUtils.escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V:501 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      String string0 = StringEscapeUtils.escapeHtml("cedil");
      assertEquals("cedil", string0);
      assertNotNull(string0);
  }

  //Test case number: 58
  /*
   * 56 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 24 IFNONNULL L306 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 25 IFNONNULL L309 - true
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I58 Branch 26 IF_ICMPGE L316 - true
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I58 Branch 26 IF_ICMPGE L316 - false
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I68 Branch 27 IFEQ L318 - true
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I131 Branch 29 IFEQ L337 - true
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I223 Branch 40 IF_ICMPNE L376 - true
   * Goal 9. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I243 Branch 41 IFEQ L382 - true
   * Goal 10. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.lang.StringEscapeUtils:unescapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 11. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 306
   * Goal 12. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 309
   * Goal 13. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 312
   * Goal 14. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 313
   * Goal 15. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 314
   * Goal 16. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 315
   * Goal 17. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 316
   * Goal 18. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 317
   * Goal 19. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 318
   * Goal 20. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 337
   * Goal 21. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 376
   * Goal 22. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 380
   * Goal 23. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 382
   * Goal 24. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 387
   * Goal 25. org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V: Line 421
   * Goal 26. org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V: Line 422
   * Goal 27. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 28. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 29. Weak Mutation 99: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:306 - ReplaceComparisonOperator != null -> = null
   * Goal 30. Weak Mutation 102: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:309 - ReplaceComparisonOperator != null -> = null
   * Goal 31. Weak Mutation 103: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 0
   * Goal 32. Weak Mutation 104: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 1
   * Goal 33. Weak Mutation 105: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> -1
   * Goal 34. Weak Mutation 106: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 3
   * Goal 35. Weak Mutation 107: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 5
   * Goal 36. Weak Mutation 108: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:314 - ReplaceConstant - 0 -> 1
   * Goal 37. Weak Mutation 109: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:315 - ReplaceConstant - 0 -> 1
   * Goal 38. Weak Mutation 110: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceConstant - 0 -> 1
   * Goal 39. Weak Mutation 111: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceVariable i -> sz
   * Goal 40. Weak Mutation 112: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp Negation of i
   * Goal 41. Weak Mutation 113: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC 1 i
   * Goal 42. Weak Mutation 114: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC -1 i
   * Goal 43. Weak Mutation 115: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceVariable sz -> i
   * Goal 44. Weak Mutation 116: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp Negation of sz
   * Goal 45. Weak Mutation 117: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC 1 sz
   * Goal 46. Weak Mutation 118: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC -1 sz
   * Goal 47. Weak Mutation 119: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceComparisonOperator >= -> -1
   * Goal 48. Weak Mutation 120: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceComparisonOperator >= -> >
   * Goal 49. Weak Mutation 122: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - ReplaceVariable i -> sz
   * Goal 50. Weak Mutation 123: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - InsertUnaryOp Negation of i
   * Goal 51. Weak Mutation 124: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - InsertUnaryOp IINC 1 i
   * Goal 52. Weak Mutation 125: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - InsertUnaryOp IINC -1 i
   * Goal 53. Weak Mutation 127: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - InsertUnaryOp Negation of inUnicode
   * Goal 54. Weak Mutation 128: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - InsertUnaryOp IINC 1 inUnicode
   * Goal 55. Weak Mutation 129: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - InsertUnaryOp IINC -1 inUnicode
   * Goal 56. Weak Mutation 130: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("MS!4<1kip}Dj/]WQ+");
      StringEscapeUtils.unescapeJavaScript((Writer) mockPrintWriter0, "MS!4<1kip}Dj/]WQ+");
  }

  //Test case number: 59
  /*
   * 91 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 24 IFNONNULL L306 - true
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 25 IFNONNULL L309 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I58 Branch 26 IF_ICMPGE L316 - true
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I58 Branch 26 IF_ICMPGE L316 - false
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I68 Branch 27 IFEQ L318 - true
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I131 Branch 29 IFEQ L337 - true
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I131 Branch 29 IFEQ L337 - false
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 30 LOOKUPSWITCH L340 Case 34 - true
   * Goal 9. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 31 LOOKUPSWITCH L340 Case 39 - false
   * Goal 10. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 32 LOOKUPSWITCH L340 Case 92 - false
   * Goal 11. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 33 LOOKUPSWITCH L340 Case 98 - false
   * Goal 12. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 34 LOOKUPSWITCH L340 Case 102 - false
   * Goal 13. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 35 LOOKUPSWITCH L340 Case 110 - false
   * Goal 14. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 36 LOOKUPSWITCH L340 Case 114 - false
   * Goal 15. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 37 LOOKUPSWITCH L340 Case 116 - false
   * Goal 16. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 38 LOOKUPSWITCH L340 Case 117 - false
   * Goal 17. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 39 LOOKUPSWITCH L340 Default-Case - false
   * Goal 18. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I223 Branch 40 IF_ICMPNE L376 - true
   * Goal 19. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I223 Branch 40 IF_ICMPNE L376 - false
   * Goal 20. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I243 Branch 41 IFEQ L382 - true
   * Goal 21. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 24 IFNONNULL L306 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 22. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 25 IFNONNULL L309 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 23. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I58 Branch 26 IF_ICMPGE L316 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 24. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I58 Branch 26 IF_ICMPGE L316 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 25. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I68 Branch 27 IFEQ L318 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 26. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I131 Branch 29 IFEQ L337 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 27. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I131 Branch 29 IFEQ L337 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 28. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 37 LOOKUPSWITCH L340 Case 116 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 29. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 36 LOOKUPSWITCH L340 Case 114 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 30. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 39 LOOKUPSWITCH L340 Default-Case - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 31. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 30 LOOKUPSWITCH L340 Case 34 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 32. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 38 LOOKUPSWITCH L340 Case 117 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 33. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 35 LOOKUPSWITCH L340 Case 110 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 34. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 32 LOOKUPSWITCH L340 Case 92 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 35. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 31 LOOKUPSWITCH L340 Case 39 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 36. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 34 LOOKUPSWITCH L340 Case 102 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 37. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 33 LOOKUPSWITCH L340 Case 98 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 38. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I223 Branch 40 IF_ICMPNE L376 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 39. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I223 Branch 40 IF_ICMPNE L376 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 40. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I243 Branch 41 IFEQ L382 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 41. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 306
   * Goal 42. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 309
   * Goal 43. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 312
   * Goal 44. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 313
   * Goal 45. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 314
   * Goal 46. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 315
   * Goal 47. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 316
   * Goal 48. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 317
   * Goal 49. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 318
   * Goal 50. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 337
   * Goal 51. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 339
   * Goal 52. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 340
   * Goal 53. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 348
   * Goal 54. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 349
   * Goal 55. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 376
   * Goal 56. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 377
   * Goal 57. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 378
   * Goal 58. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 380
   * Goal 59. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 382
   * Goal 60. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 387
   * Goal 61. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 62. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 63. Weak Mutation 99: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:306 - ReplaceComparisonOperator != null -> = null
   * Goal 64. Weak Mutation 102: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:309 - ReplaceComparisonOperator != null -> = null
   * Goal 65. Weak Mutation 103: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 0
   * Goal 66. Weak Mutation 104: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 1
   * Goal 67. Weak Mutation 105: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> -1
   * Goal 68. Weak Mutation 106: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 3
   * Goal 69. Weak Mutation 107: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 5
   * Goal 70. Weak Mutation 108: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:314 - ReplaceConstant - 0 -> 1
   * Goal 71. Weak Mutation 109: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:315 - ReplaceConstant - 0 -> 1
   * Goal 72. Weak Mutation 110: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceConstant - 0 -> 1
   * Goal 73. Weak Mutation 111: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceVariable i -> sz
   * Goal 74. Weak Mutation 112: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp Negation of i
   * Goal 75. Weak Mutation 113: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC 1 i
   * Goal 76. Weak Mutation 114: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC -1 i
   * Goal 77. Weak Mutation 115: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceVariable sz -> i
   * Goal 78. Weak Mutation 116: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp Negation of sz
   * Goal 79. Weak Mutation 117: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC 1 sz
   * Goal 80. Weak Mutation 118: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC -1 sz
   * Goal 81. Weak Mutation 119: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceComparisonOperator >= -> -1
   * Goal 82. Weak Mutation 120: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceComparisonOperator >= -> >
   * Goal 83. Weak Mutation 122: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - ReplaceVariable i -> sz
   * Goal 84. Weak Mutation 123: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - InsertUnaryOp Negation of i
   * Goal 85. Weak Mutation 124: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - InsertUnaryOp IINC 1 i
   * Goal 86. Weak Mutation 125: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - InsertUnaryOp IINC -1 i
   * Goal 87. Weak Mutation 126: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - ReplaceVariable inUnicode -> hadSlash
   * Goal 88. Weak Mutation 127: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - InsertUnaryOp Negation of inUnicode
   * Goal 89. Weak Mutation 128: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - InsertUnaryOp IINC 1 inUnicode
   * Goal 90. Weak Mutation 129: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - InsertUnaryOp IINC -1 inUnicode
   * Goal 91. Weak Mutation 130: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      MockFileWriter mockFileWriter0 = new MockFileWriter("E)kY r-{=^*\"H$Xz5", true);
      StringEscapeUtils.unescapeJava((Writer) mockFileWriter0, "\"E)kY r-{=^*\\\"\"H$Xz5\"");
  }

  //Test case number: 60
  /*
   * 90 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 23 IFNONNULL L276 - true
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 24 IFNONNULL L306 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 25 IFNONNULL L309 - true
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I58 Branch 26 IF_ICMPGE L316 - true
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I58 Branch 26 IF_ICMPGE L316 - false
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I68 Branch 27 IFEQ L318 - true
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I68 Branch 27 IFEQ L318 - false
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I80 Branch 28 IF_ICMPNE L322 - true
   * Goal 9. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I131 Branch 29 IFEQ L337 - true
   * Goal 10. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I131 Branch 29 IFEQ L337 - false
   * Goal 11. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 30 LOOKUPSWITCH L340 Case 34 - false
   * Goal 12. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 31 LOOKUPSWITCH L340 Case 39 - false
   * Goal 13. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 32 LOOKUPSWITCH L340 Case 92 - false
   * Goal 14. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 33 LOOKUPSWITCH L340 Case 98 - false
   * Goal 15. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 34 LOOKUPSWITCH L340 Case 102 - false
   * Goal 16. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 35 LOOKUPSWITCH L340 Case 110 - false
   * Goal 17. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 36 LOOKUPSWITCH L340 Case 114 - false
   * Goal 18. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 37 LOOKUPSWITCH L340 Case 116 - false
   * Goal 19. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 38 LOOKUPSWITCH L340 Case 117 - true
   * Goal 20. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I139 Branch 39 LOOKUPSWITCH L340 Default-Case - false
   * Goal 21. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I223 Branch 40 IF_ICMPNE L376 - false
   * Goal 22. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I243 Branch 41 IFEQ L382 - true
   * Goal 23. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 23 IFNONNULL L276 - true in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/lang/String;)Ljava/lang/String;
   * Goal 24. [Output]: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;:EmptyString
   * Goal 25. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 306
   * Goal 26. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 309
   * Goal 27. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 312
   * Goal 28. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 313
   * Goal 29. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 314
   * Goal 30. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 315
   * Goal 31. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 316
   * Goal 32. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 317
   * Goal 33. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 318
   * Goal 34. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 321
   * Goal 35. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 322
   * Goal 36. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 337
   * Goal 37. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 339
   * Goal 38. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 340
   * Goal 39. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 368
   * Goal 40. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 369
   * Goal 41. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 376
   * Goal 42. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 377
   * Goal 43. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 378
   * Goal 44. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 382
   * Goal 45. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 387
   * Goal 46. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: Line 276
   * Goal 47. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: Line 280
   * Goal 48. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: Line 281
   * Goal 49. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: Line 282
   * Goal 50. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;
   * Goal 51. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;
   * Goal 52. Weak Mutation 98: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;:276 - ReplaceComparisonOperator != null -> = null
   * Goal 53. Weak Mutation 99: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:306 - ReplaceComparisonOperator != null -> = null
   * Goal 54. Weak Mutation 102: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:309 - ReplaceComparisonOperator != null -> = null
   * Goal 55. Weak Mutation 103: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 0
   * Goal 56. Weak Mutation 104: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 1
   * Goal 57. Weak Mutation 105: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> -1
   * Goal 58. Weak Mutation 106: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 3
   * Goal 59. Weak Mutation 107: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 5
   * Goal 60. Weak Mutation 108: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:314 - ReplaceConstant - 0 -> 1
   * Goal 61. Weak Mutation 109: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:315 - ReplaceConstant - 0 -> 1
   * Goal 62. Weak Mutation 110: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceConstant - 0 -> 1
   * Goal 63. Weak Mutation 111: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceVariable i -> sz
   * Goal 64. Weak Mutation 112: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp Negation of i
   * Goal 65. Weak Mutation 113: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC 1 i
   * Goal 66. Weak Mutation 114: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC -1 i
   * Goal 67. Weak Mutation 115: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceVariable sz -> i
   * Goal 68. Weak Mutation 116: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp Negation of sz
   * Goal 69. Weak Mutation 117: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC 1 sz
   * Goal 70. Weak Mutation 118: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC -1 sz
   * Goal 71. Weak Mutation 119: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceComparisonOperator >= -> -1
   * Goal 72. Weak Mutation 120: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceComparisonOperator >= -> >
   * Goal 73. Weak Mutation 122: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - ReplaceVariable i -> sz
   * Goal 74. Weak Mutation 123: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - InsertUnaryOp Negation of i
   * Goal 75. Weak Mutation 124: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - InsertUnaryOp IINC 1 i
   * Goal 76. Weak Mutation 125: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - InsertUnaryOp IINC -1 i
   * Goal 77. Weak Mutation 126: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - ReplaceVariable inUnicode -> hadSlash
   * Goal 78. Weak Mutation 127: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - InsertUnaryOp Negation of inUnicode
   * Goal 79. Weak Mutation 128: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - InsertUnaryOp IINC 1 inUnicode
   * Goal 80. Weak Mutation 129: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - InsertUnaryOp IINC -1 inUnicode
   * Goal 81. Weak Mutation 130: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - ReplaceComparisonOperator == -> !=
   * Goal 82. Weak Mutation 131: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:321 - InsertUnaryOp Negation of ch
   * Goal 83. Weak Mutation 132: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:321 - InsertUnaryOp IINC 1 ch
   * Goal 84. Weak Mutation 133: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:321 - InsertUnaryOp IINC -1 ch
   * Goal 85. Weak Mutation 134: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:322 - ReplaceConstant - 4 -> 0
   * Goal 86. Weak Mutation 135: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:322 - ReplaceConstant - 4 -> 1
   * Goal 87. Weak Mutation 136: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:322 - ReplaceConstant - 4 -> -1
   * Goal 88. Weak Mutation 137: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:322 - ReplaceConstant - 4 -> 3
   * Goal 89. Weak Mutation 138: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:322 - ReplaceConstant - 4 -> 5
   * Goal 90. Weak Mutation 141: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:322 - ReplaceComparisonOperator != -> >
   */

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      String string0 = "\\u0";
      String string1 = StringEscapeUtils.unescapeJava(string0);
      assertEquals("", string1);
  }

  //Test case number: 61
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 24 IFNONNULL L306 - false
   * Goal 2. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 24 IFNONNULL L306 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 3. unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 306
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 307
   * Goal 6. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 7. Weak Mutation 99: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:306 - ReplaceComparisonOperator != null -> = null
   * Goal 8. Weak Mutation 100: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:307 - ReplaceConstant - The Writer must not be null -> 
   * Goal 9. Weak Mutation 101: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:307 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringEscapeUtils.unescapeJava((Writer) null, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Writer must not be null
         //
         assertThrownBy("org.apache.commons.lang.StringEscapeUtils", e);
      }
  }

  //Test case number: 62
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 23 IFNONNULL L276 - false
   * Goal 2. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 23 IFNONNULL L276 - false in context: org.apache.commons.lang.StringEscapeUtils:unescapeJava(Ljava/lang/String;)Ljava/lang/String;
   * Goal 3. [Output]: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;:Null
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: Line 276
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: Line 277
   * Goal 6. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;
   * Goal 7. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;
   * Goal 8. Weak Mutation 98: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;:276 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      String string0 = StringEscapeUtils.unescapeJava((String) null);
      assertNull(string0);
  }

  //Test case number: 63
  /*
   * 120 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: I3 Branch 1 IFNONNULL L155 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I3 Branch 2 IFNONNULL L179 - true
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I27 Branch 3 IFNONNULL L182 - true
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - true
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - false
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I54 Branch 5 IF_ICMPLE L191 - true
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I73 Branch 6 IF_ICMPLE L193 - true
   * Goal 9. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I92 Branch 7 IF_ICMPLE L195 - true
   * Goal 10. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I111 Branch 8 IF_ICMPGE L197 - true
   * Goal 11. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 17 LOOKUPSWITCH L228 Case 34 - false
   * Goal 12. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 18 LOOKUPSWITCH L228 Case 39 - true
   * Goal 13. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 19 LOOKUPSWITCH L228 Case 47 - false
   * Goal 14. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 20 LOOKUPSWITCH L228 Case 92 - false
   * Goal 15. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 21 LOOKUPSWITCH L228 Default-Case - false
   * Goal 16. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I223 Branch 22 IFEQ L230 - true
   * Goal 17. Branch org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;: root-Branch in context: org.apache.commons.lang.StringEscapeUtils:escapeJava(Ljava/lang/String;)Ljava/lang/String;
   * Goal 18. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: I3 Branch 1 IFNONNULL L155 - true in context: 
   * Goal 19. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I3 Branch 2 IFNONNULL L179 - true in context: 
   * Goal 20. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I27 Branch 3 IFNONNULL L182 - true in context: 
   * Goal 21. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - false in context: 
   * Goal 22. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - true in context: 
   * Goal 23. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I54 Branch 5 IF_ICMPLE L191 - true in context: 
   * Goal 24. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I73 Branch 6 IF_ICMPLE L193 - true in context: 
   * Goal 25. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I92 Branch 7 IF_ICMPLE L195 - true in context: 
   * Goal 26. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I111 Branch 8 IF_ICMPGE L197 - true in context: 
   * Goal 27. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 20 LOOKUPSWITCH L228 Case 92 - false in context: 
   * Goal 28. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 21 LOOKUPSWITCH L228 Default-Case - false in context: 
   * Goal 29. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 19 LOOKUPSWITCH L228 Case 47 - false in context: 
   * Goal 30. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 18 LOOKUPSWITCH L228 Case 39 - true in context: 
   * Goal 31. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 17 LOOKUPSWITCH L228 Case 34 - false in context: 
   * Goal 32. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I223 Branch 22 IFEQ L230 - true in context: 
   * Goal 33. [Output]: org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;:NonEmptyString
   * Goal 34. org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;: Line 86
   * Goal 35. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 179
   * Goal 36. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 182
   * Goal 37. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 186
   * Goal 38. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 187
   * Goal 39. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 188
   * Goal 40. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 191
   * Goal 41. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 193
   * Goal 42. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 195
   * Goal 43. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 197
   * Goal 44. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 228
   * Goal 45. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 230
   * Goal 46. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 233
   * Goal 47. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 234
   * Goal 48. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 253
   * Goal 49. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 155
   * Goal 50. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 159
   * Goal 51. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 160
   * Goal 52. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 161
   * Goal 53. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;
   * Goal 54. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;
   * Goal 55. Weak Mutation 0: org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;:86 - ReplaceConstant - 0 -> 1
   * Goal 56. Weak Mutation 4: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:155 - ReplaceComparisonOperator != null -> = null
   * Goal 57. Weak Mutation 5: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceConstant - 2 -> 0
   * Goal 58. Weak Mutation 6: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceConstant - 2 -> 1
   * Goal 59. Weak Mutation 7: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceConstant - 2 -> -1
   * Goal 60. Weak Mutation 8: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceConstant - 2 -> 3
   * Goal 61. Weak Mutation 9: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceArithmeticOperator * -> +
   * Goal 62. Weak Mutation 10: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceArithmeticOperator * -> %
   * Goal 63. Weak Mutation 11: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceArithmeticOperator * -> -
   * Goal 64. Weak Mutation 12: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceArithmeticOperator * -> /
   * Goal 65. Weak Mutation 13: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:160 - InsertUnaryOp Negation of escapeSingleQuotes
   * Goal 66. Weak Mutation 14: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:160 - InsertUnaryOp IINC 1 escapeSingleQuotes
   * Goal 67. Weak Mutation 15: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:160 - InsertUnaryOp IINC -1 escapeSingleQuotes
   * Goal 68. Weak Mutation 16: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:179 - ReplaceComparisonOperator != null -> = null
   * Goal 69. Weak Mutation 19: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:182 - ReplaceComparisonOperator != null -> = null
   * Goal 70. Weak Mutation 20: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceConstant - 0 -> 1
   * Goal 71. Weak Mutation 21: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceVariable i -> sz
   * Goal 72. Weak Mutation 22: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp Negation of i
   * Goal 73. Weak Mutation 23: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC 1 i
   * Goal 74. Weak Mutation 24: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC -1 i
   * Goal 75. Weak Mutation 25: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceVariable sz -> i
   * Goal 76. Weak Mutation 26: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp Negation of sz
   * Goal 77. Weak Mutation 27: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC 1 sz
   * Goal 78. Weak Mutation 28: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC -1 sz
   * Goal 79. Weak Mutation 29: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceComparisonOperator >= -> -1
   * Goal 80. Weak Mutation 30: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceComparisonOperator >= -> >
   * Goal 81. Weak Mutation 32: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:188 - ReplaceVariable i -> sz
   * Goal 82. Weak Mutation 33: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:188 - InsertUnaryOp Negation of i
   * Goal 83. Weak Mutation 34: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:188 - InsertUnaryOp IINC 1 i
   * Goal 84. Weak Mutation 35: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:188 - InsertUnaryOp IINC -1 i
   * Goal 85. Weak Mutation 36: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - InsertUnaryOp Negation of ch
   * Goal 86. Weak Mutation 37: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - InsertUnaryOp IINC 1 ch
   * Goal 87. Weak Mutation 38: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - InsertUnaryOp IINC -1 ch
   * Goal 88. Weak Mutation 39: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> 0
   * Goal 89. Weak Mutation 40: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> 1
   * Goal 90. Weak Mutation 41: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> -1
   * Goal 91. Weak Mutation 42: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> 4094
   * Goal 92. Weak Mutation 43: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> 4096
   * Goal 93. Weak Mutation 46: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceComparisonOperator <= -> ==
   * Goal 94. Weak Mutation 51: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - InsertUnaryOp Negation of ch
   * Goal 95. Weak Mutation 52: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - InsertUnaryOp IINC 1 ch
   * Goal 96. Weak Mutation 53: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - InsertUnaryOp IINC -1 ch
   * Goal 97. Weak Mutation 54: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> 0
   * Goal 98. Weak Mutation 55: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> 1
   * Goal 99. Weak Mutation 56: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> -1
   * Goal 100. Weak Mutation 57: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> 254
   * Goal 101. Weak Mutation 58: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> 256
   * Goal 102. Weak Mutation 61: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceComparisonOperator <= -> ==
   * Goal 103. Weak Mutation 66: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - InsertUnaryOp Negation of ch
   * Goal 104. Weak Mutation 67: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - InsertUnaryOp IINC 1 ch
   * Goal 105. Weak Mutation 68: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - InsertUnaryOp IINC -1 ch
   * Goal 106. Weak Mutation 69: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> 0
   * Goal 107. Weak Mutation 70: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> 1
   * Goal 108. Weak Mutation 71: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> -1
   * Goal 109. Weak Mutation 72: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> 126
   * Goal 110. Weak Mutation 73: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> 128
   * Goal 111. Weak Mutation 76: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceComparisonOperator <= -> ==
   * Goal 112. Weak Mutation 81: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - InsertUnaryOp Negation of ch
   * Goal 113. Weak Mutation 82: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - InsertUnaryOp IINC 1 ch
   * Goal 114. Weak Mutation 83: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - InsertUnaryOp IINC -1 ch
   * Goal 115. Weak Mutation 84: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> 0
   * Goal 116. Weak Mutation 85: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> 1
   * Goal 117. Weak Mutation 86: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> -1
   * Goal 118. Weak Mutation 87: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> 31
   * Goal 119. Weak Mutation 88: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> 33
   * Goal 120. Weak Mutation 91: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceComparisonOperator >= -> ==
   */

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      String string0 = StringEscapeUtils.escapeJava("'");
      assertEquals("'", string0);
  }

  //Test case number: 64
  /*
   * 98 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/io/Writer;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I3 Branch 2 IFNONNULL L179 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I27 Branch 3 IFNONNULL L182 - true
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - true
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - false
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I54 Branch 5 IF_ICMPLE L191 - true
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I73 Branch 6 IF_ICMPLE L193 - true
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I92 Branch 7 IF_ICMPLE L195 - true
   * Goal 9. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I111 Branch 8 IF_ICMPGE L197 - true
   * Goal 10. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 17 LOOKUPSWITCH L228 Case 34 - false
   * Goal 11. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 18 LOOKUPSWITCH L228 Case 39 - false
   * Goal 12. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 19 LOOKUPSWITCH L228 Case 47 - false
   * Goal 13. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 20 LOOKUPSWITCH L228 Case 92 - false
   * Goal 14. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 21 LOOKUPSWITCH L228 Default-Case - true
   * Goal 15. Branch org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/io/Writer;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.lang.StringEscapeUtils:escapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 16. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I3 Branch 2 IFNONNULL L179 - true in context: 
   * Goal 17. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I27 Branch 3 IFNONNULL L182 - true in context: 
   * Goal 18. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - false in context: 
   * Goal 19. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - true in context: 
   * Goal 20. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I54 Branch 5 IF_ICMPLE L191 - true in context: 
   * Goal 21. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I73 Branch 6 IF_ICMPLE L193 - true in context: 
   * Goal 22. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I92 Branch 7 IF_ICMPLE L195 - true in context: 
   * Goal 23. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I111 Branch 8 IF_ICMPGE L197 - true in context: 
   * Goal 24. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 20 LOOKUPSWITCH L228 Case 92 - false in context: 
   * Goal 25. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 19 LOOKUPSWITCH L228 Case 47 - false in context: 
   * Goal 26. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 18 LOOKUPSWITCH L228 Case 39 - false in context: 
   * Goal 27. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 21 LOOKUPSWITCH L228 Default-Case - true in context: 
   * Goal 28. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 17 LOOKUPSWITCH L228 Case 34 - false in context: 
   * Goal 29. org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 102
   * Goal 30. org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 103
   * Goal 31. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 179
   * Goal 32. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 182
   * Goal 33. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 186
   * Goal 34. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 187
   * Goal 35. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 188
   * Goal 36. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 191
   * Goal 37. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 193
   * Goal 38. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 195
   * Goal 39. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 197
   * Goal 40. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 228
   * Goal 41. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 248
   * Goal 42. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 253
   * Goal 43. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 44. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 45. Weak Mutation 1: org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/io/Writer;Ljava/lang/String;)V:102 - ReplaceConstant - 0 -> 1
   * Goal 46. Weak Mutation 16: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:179 - ReplaceComparisonOperator != null -> = null
   * Goal 47. Weak Mutation 19: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:182 - ReplaceComparisonOperator != null -> = null
   * Goal 48. Weak Mutation 20: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceConstant - 0 -> 1
   * Goal 49. Weak Mutation 21: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceVariable i -> sz
   * Goal 50. Weak Mutation 22: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp Negation of i
   * Goal 51. Weak Mutation 23: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC 1 i
   * Goal 52. Weak Mutation 24: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC -1 i
   * Goal 53. Weak Mutation 25: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceVariable sz -> i
   * Goal 54. Weak Mutation 26: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp Negation of sz
   * Goal 55. Weak Mutation 27: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC 1 sz
   * Goal 56. Weak Mutation 28: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC -1 sz
   * Goal 57. Weak Mutation 29: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceComparisonOperator >= -> -1
   * Goal 58. Weak Mutation 30: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceComparisonOperator >= -> >
   * Goal 59. Weak Mutation 32: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:188 - ReplaceVariable i -> sz
   * Goal 60. Weak Mutation 33: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:188 - InsertUnaryOp Negation of i
   * Goal 61. Weak Mutation 34: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:188 - InsertUnaryOp IINC 1 i
   * Goal 62. Weak Mutation 35: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:188 - InsertUnaryOp IINC -1 i
   * Goal 63. Weak Mutation 36: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - InsertUnaryOp Negation of ch
   * Goal 64. Weak Mutation 37: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - InsertUnaryOp IINC 1 ch
   * Goal 65. Weak Mutation 38: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - InsertUnaryOp IINC -1 ch
   * Goal 66. Weak Mutation 39: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> 0
   * Goal 67. Weak Mutation 40: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> 1
   * Goal 68. Weak Mutation 41: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> -1
   * Goal 69. Weak Mutation 42: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> 4094
   * Goal 70. Weak Mutation 43: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> 4096
   * Goal 71. Weak Mutation 46: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceComparisonOperator <= -> ==
   * Goal 72. Weak Mutation 51: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - InsertUnaryOp Negation of ch
   * Goal 73. Weak Mutation 52: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - InsertUnaryOp IINC 1 ch
   * Goal 74. Weak Mutation 53: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - InsertUnaryOp IINC -1 ch
   * Goal 75. Weak Mutation 54: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> 0
   * Goal 76. Weak Mutation 55: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> 1
   * Goal 77. Weak Mutation 56: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> -1
   * Goal 78. Weak Mutation 57: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> 254
   * Goal 79. Weak Mutation 58: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> 256
   * Goal 80. Weak Mutation 61: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceComparisonOperator <= -> ==
   * Goal 81. Weak Mutation 66: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - InsertUnaryOp Negation of ch
   * Goal 82. Weak Mutation 67: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - InsertUnaryOp IINC 1 ch
   * Goal 83. Weak Mutation 68: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - InsertUnaryOp IINC -1 ch
   * Goal 84. Weak Mutation 69: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> 0
   * Goal 85. Weak Mutation 70: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> 1
   * Goal 86. Weak Mutation 71: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> -1
   * Goal 87. Weak Mutation 72: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> 126
   * Goal 88. Weak Mutation 73: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> 128
   * Goal 89. Weak Mutation 76: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceComparisonOperator <= -> ==
   * Goal 90. Weak Mutation 81: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - InsertUnaryOp Negation of ch
   * Goal 91. Weak Mutation 82: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - InsertUnaryOp IINC 1 ch
   * Goal 92. Weak Mutation 83: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - InsertUnaryOp IINC -1 ch
   * Goal 93. Weak Mutation 84: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> 0
   * Goal 94. Weak Mutation 85: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> 1
   * Goal 95. Weak Mutation 86: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> -1
   * Goal 96. Weak Mutation 87: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> 31
   * Goal 97. Weak Mutation 88: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> 33
   * Goal 98. Weak Mutation 91: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceComparisonOperator >= -> ==
   */

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("The Writer must not be null");
      StringEscapeUtils.escapeJava((Writer) mockPrintWriter0, "@qs.=Bb0SbaG<X");
  }

  //Test case number: 65
  /*
   * 16 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/io/Writer;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I3 Branch 2 IFNONNULL L179 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I27 Branch 3 IFNONNULL L182 - false
   * Goal 4. Branch org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/io/Writer;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.lang.StringEscapeUtils:escapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 5. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I3 Branch 2 IFNONNULL L179 - true in context: 
   * Goal 6. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I27 Branch 3 IFNONNULL L182 - false in context: 
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 102
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 103
   * Goal 9. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 179
   * Goal 10. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 182
   * Goal 11. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 183
   * Goal 12. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 13. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 14. Weak Mutation 1: org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/io/Writer;Ljava/lang/String;)V:102 - ReplaceConstant - 0 -> 1
   * Goal 15. Weak Mutation 16: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:179 - ReplaceComparisonOperator != null -> = null
   * Goal 16. Weak Mutation 19: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:182 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringEscapeUtils.escapeJava((Writer) stringWriter0, (String) null);
      assertEquals("", stringWriter0.toString());
  }

  //Test case number: 66
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/io/Writer;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I3 Branch 2 IFNONNULL L179 - false
   * Goal 3. Branch org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/io/Writer;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.lang.StringEscapeUtils:escapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 4. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I3 Branch 2 IFNONNULL L179 - false in context: 
   * Goal 5. escapeJava(Ljava/io/Writer;Ljava/lang/String;)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 102
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 179
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 180
   * Goal 9. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 10. Weak Mutation 1: org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/io/Writer;Ljava/lang/String;)V:102 - ReplaceConstant - 0 -> 1
   * Goal 11. Weak Mutation 16: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:179 - ReplaceComparisonOperator != null -> = null
   * Goal 12. Weak Mutation 17: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:180 - ReplaceConstant - The Writer must not be null -> 
   * Goal 13. Weak Mutation 18: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:180 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringEscapeUtils.escapeJava((Writer) null, "F$");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Writer must not be null
         //
         assertThrownBy("org.apache.commons.lang.StringEscapeUtils", e);
      }
  }

  //Test case number: 67
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: I3 Branch 1 IFNONNULL L155 - false
   * Goal 3. Branch org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;: root-Branch in context: org.apache.commons.lang.StringEscapeUtils:escapeJava(Ljava/lang/String;)Ljava/lang/String;
   * Goal 4. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: I3 Branch 1 IFNONNULL L155 - false in context: 
   * Goal 5. [Output]: org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;:Null
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;: Line 86
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 155
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 156
   * Goal 9. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;
   * Goal 10. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;
   * Goal 11. Weak Mutation 0: org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;:86 - ReplaceConstant - 0 -> 1
   * Goal 12. Weak Mutation 4: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:155 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      String string0 = StringEscapeUtils.escapeJava((String) null);
      assertNull(string0);
  }

  //Test case number: 68
  /*
   * 28 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I3 Branch 2 IFNONNULL L179 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I27 Branch 3 IFNONNULL L182 - true
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - true
   * Goal 5. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.lang.StringEscapeUtils:escapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 6. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I3 Branch 2 IFNONNULL L179 - true in context: 
   * Goal 7. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I27 Branch 3 IFNONNULL L182 - true in context: 
   * Goal 8. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - true in context: 
   * Goal 9. org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V: Line 143
   * Goal 10. org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V: Line 144
   * Goal 11. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 179
   * Goal 12. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 182
   * Goal 13. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 186
   * Goal 14. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 187
   * Goal 15. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 253
   * Goal 16. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 17. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V
   * Goal 18. Weak Mutation 3: org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V:143 - ReplaceConstant - 1 -> 0
   * Goal 19. Weak Mutation 16: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:179 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 19: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:182 - ReplaceComparisonOperator != null -> = null
   * Goal 21. Weak Mutation 20: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 22: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp Negation of i
   * Goal 23. Weak Mutation 23: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC 1 i
   * Goal 24. Weak Mutation 24: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC -1 i
   * Goal 25. Weak Mutation 26: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp Negation of sz
   * Goal 26. Weak Mutation 27: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC 1 sz
   * Goal 27. Weak Mutation 28: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC -1 sz
   * Goal 28. Weak Mutation 30: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      MockFile mockFile0 = new MockFile("s*z[w\"/l2jNT#;F1:|");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream((File) mockFile0, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter((OutputStream) mockFileOutputStream0, true);
      StringEscapeUtils.escapeJavaScript((Writer) mockPrintWriter0, "");
  }

  //Test case number: 69
  /*
   * 5 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.<init>()V: root-Branch
   * Goal 2. Branch org.apache.commons.lang.StringEscapeUtils.<init>()V: root-Branch in context: org.apache.commons.lang.StringEscapeUtils:<init>()V
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.<init>()V: Line 60
   * Goal 4. [METHOD] org.apache.commons.lang.StringEscapeUtils.<init>()V
   * Goal 5. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.<init>()V
   */

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      StringEscapeUtils stringEscapeUtils0 = new StringEscapeUtils();
  }

  //Test case number: 70
  /*
   * 121 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: I3 Branch 1 IFNONNULL L155 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I3 Branch 2 IFNONNULL L179 - true
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I27 Branch 3 IFNONNULL L182 - true
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - true
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - false
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I54 Branch 5 IF_ICMPLE L191 - true
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I73 Branch 6 IF_ICMPLE L193 - true
   * Goal 9. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I92 Branch 7 IF_ICMPLE L195 - true
   * Goal 10. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I111 Branch 8 IF_ICMPGE L197 - true
   * Goal 11. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 17 LOOKUPSWITCH L228 Case 34 - false
   * Goal 12. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 18 LOOKUPSWITCH L228 Case 39 - true
   * Goal 13. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 19 LOOKUPSWITCH L228 Case 47 - false
   * Goal 14. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 20 LOOKUPSWITCH L228 Case 92 - false
   * Goal 15. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 21 LOOKUPSWITCH L228 Default-Case - false
   * Goal 16. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I223 Branch 22 IFEQ L230 - false
   * Goal 17. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/lang/String;)Ljava/lang/String;: root-Branch in context: org.apache.commons.lang.StringEscapeUtils:escapeJavaScript(Ljava/lang/String;)Ljava/lang/String;
   * Goal 18. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: I3 Branch 1 IFNONNULL L155 - true in context: 
   * Goal 19. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I3 Branch 2 IFNONNULL L179 - true in context: 
   * Goal 20. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I27 Branch 3 IFNONNULL L182 - true in context: 
   * Goal 21. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - false in context: 
   * Goal 22. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I43 Branch 4 IF_ICMPGE L187 - true in context: 
   * Goal 23. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I54 Branch 5 IF_ICMPLE L191 - true in context: 
   * Goal 24. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I73 Branch 6 IF_ICMPLE L193 - true in context: 
   * Goal 25. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I92 Branch 7 IF_ICMPLE L195 - true in context: 
   * Goal 26. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I111 Branch 8 IF_ICMPGE L197 - true in context: 
   * Goal 27. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 20 LOOKUPSWITCH L228 Case 92 - false in context: 
   * Goal 28. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 21 LOOKUPSWITCH L228 Default-Case - false in context: 
   * Goal 29. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 19 LOOKUPSWITCH L228 Case 47 - false in context: 
   * Goal 30. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 18 LOOKUPSWITCH L228 Case 39 - true in context: 
   * Goal 31. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I219 Branch 17 LOOKUPSWITCH L228 Case 34 - false in context: 
   * Goal 32. Branch org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: I223 Branch 22 IFEQ L230 - false in context: 
   * Goal 33. [Output]: org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/lang/String;)Ljava/lang/String;:NonEmptyString
   * Goal 34. org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/lang/String;)Ljava/lang/String;: Line 127
   * Goal 35. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 179
   * Goal 36. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 182
   * Goal 37. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 186
   * Goal 38. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 187
   * Goal 39. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 188
   * Goal 40. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 191
   * Goal 41. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 193
   * Goal 42. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 195
   * Goal 43. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 197
   * Goal 44. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 228
   * Goal 45. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 230
   * Goal 46. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 231
   * Goal 47. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 233
   * Goal 48. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 234
   * Goal 49. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V: Line 253
   * Goal 50. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 155
   * Goal 51. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 159
   * Goal 52. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 160
   * Goal 53. org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;: Line 161
   * Goal 54. [METHOD] org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/lang/String;)Ljava/lang/String;
   * Goal 55. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/lang/String;)Ljava/lang/String;
   * Goal 56. Weak Mutation 2: org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/lang/String;)Ljava/lang/String;:127 - ReplaceConstant - 1 -> 0
   * Goal 57. Weak Mutation 4: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:155 - ReplaceComparisonOperator != null -> = null
   * Goal 58. Weak Mutation 5: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceConstant - 2 -> 0
   * Goal 59. Weak Mutation 6: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceConstant - 2 -> 1
   * Goal 60. Weak Mutation 7: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceConstant - 2 -> -1
   * Goal 61. Weak Mutation 8: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceConstant - 2 -> 3
   * Goal 62. Weak Mutation 9: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceArithmeticOperator * -> +
   * Goal 63. Weak Mutation 10: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceArithmeticOperator * -> %
   * Goal 64. Weak Mutation 11: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceArithmeticOperator * -> -
   * Goal 65. Weak Mutation 12: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:159 - ReplaceArithmeticOperator * -> /
   * Goal 66. Weak Mutation 13: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:160 - InsertUnaryOp Negation of escapeSingleQuotes
   * Goal 67. Weak Mutation 14: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:160 - InsertUnaryOp IINC 1 escapeSingleQuotes
   * Goal 68. Weak Mutation 15: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;:160 - InsertUnaryOp IINC -1 escapeSingleQuotes
   * Goal 69. Weak Mutation 16: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:179 - ReplaceComparisonOperator != null -> = null
   * Goal 70. Weak Mutation 19: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:182 - ReplaceComparisonOperator != null -> = null
   * Goal 71. Weak Mutation 20: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceConstant - 0 -> 1
   * Goal 72. Weak Mutation 21: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceVariable i -> sz
   * Goal 73. Weak Mutation 22: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp Negation of i
   * Goal 74. Weak Mutation 23: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC 1 i
   * Goal 75. Weak Mutation 24: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC -1 i
   * Goal 76. Weak Mutation 25: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceVariable sz -> i
   * Goal 77. Weak Mutation 26: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp Negation of sz
   * Goal 78. Weak Mutation 27: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC 1 sz
   * Goal 79. Weak Mutation 28: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - InsertUnaryOp IINC -1 sz
   * Goal 80. Weak Mutation 29: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceComparisonOperator >= -> -1
   * Goal 81. Weak Mutation 30: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:187 - ReplaceComparisonOperator >= -> >
   * Goal 82. Weak Mutation 32: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:188 - ReplaceVariable i -> sz
   * Goal 83. Weak Mutation 33: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:188 - InsertUnaryOp Negation of i
   * Goal 84. Weak Mutation 34: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:188 - InsertUnaryOp IINC 1 i
   * Goal 85. Weak Mutation 35: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:188 - InsertUnaryOp IINC -1 i
   * Goal 86. Weak Mutation 36: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - InsertUnaryOp Negation of ch
   * Goal 87. Weak Mutation 37: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - InsertUnaryOp IINC 1 ch
   * Goal 88. Weak Mutation 38: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - InsertUnaryOp IINC -1 ch
   * Goal 89. Weak Mutation 39: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> 0
   * Goal 90. Weak Mutation 40: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> 1
   * Goal 91. Weak Mutation 41: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> -1
   * Goal 92. Weak Mutation 42: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> 4094
   * Goal 93. Weak Mutation 43: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceConstant - 4095 -> 4096
   * Goal 94. Weak Mutation 46: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:191 - ReplaceComparisonOperator <= -> ==
   * Goal 95. Weak Mutation 51: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - InsertUnaryOp Negation of ch
   * Goal 96. Weak Mutation 52: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - InsertUnaryOp IINC 1 ch
   * Goal 97. Weak Mutation 53: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - InsertUnaryOp IINC -1 ch
   * Goal 98. Weak Mutation 54: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> 0
   * Goal 99. Weak Mutation 55: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> 1
   * Goal 100. Weak Mutation 56: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> -1
   * Goal 101. Weak Mutation 57: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> 254
   * Goal 102. Weak Mutation 58: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceConstant - 255 -> 256
   * Goal 103. Weak Mutation 61: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:193 - ReplaceComparisonOperator <= -> ==
   * Goal 104. Weak Mutation 66: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - InsertUnaryOp Negation of ch
   * Goal 105. Weak Mutation 67: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - InsertUnaryOp IINC 1 ch
   * Goal 106. Weak Mutation 68: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - InsertUnaryOp IINC -1 ch
   * Goal 107. Weak Mutation 69: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> 0
   * Goal 108. Weak Mutation 70: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> 1
   * Goal 109. Weak Mutation 71: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> -1
   * Goal 110. Weak Mutation 72: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> 126
   * Goal 111. Weak Mutation 73: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceConstant - 127 -> 128
   * Goal 112. Weak Mutation 76: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:195 - ReplaceComparisonOperator <= -> ==
   * Goal 113. Weak Mutation 81: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - InsertUnaryOp Negation of ch
   * Goal 114. Weak Mutation 82: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - InsertUnaryOp IINC 1 ch
   * Goal 115. Weak Mutation 83: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - InsertUnaryOp IINC -1 ch
   * Goal 116. Weak Mutation 84: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> 0
   * Goal 117. Weak Mutation 85: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> 1
   * Goal 118. Weak Mutation 86: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> -1
   * Goal 119. Weak Mutation 87: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> 31
   * Goal 120. Weak Mutation 88: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceConstant - 32 -> 33
   * Goal 121. Weak Mutation 91: org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V:197 - ReplaceComparisonOperator >= -> ==
   */

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      String string0 = StringEscapeUtils.escapeJavaScript("'");
      assertNotNull(string0);
      assertEquals("\\'", string0);
  }

  //Test case number: 71
  /*
   * 62 covered goals:
   * Goal 1. org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * Goal 2. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: I3 Branch 23 IFNONNULL L276 - true
   * Goal 3. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I3 Branch 24 IFNONNULL L306 - true
   * Goal 4. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I27 Branch 25 IFNONNULL L309 - true
   * Goal 5. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I58 Branch 26 IF_ICMPGE L316 - true
   * Goal 6. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I58 Branch 26 IF_ICMPGE L316 - false
   * Goal 7. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I68 Branch 27 IFEQ L318 - true
   * Goal 8. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I131 Branch 29 IFEQ L337 - true
   * Goal 9. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I223 Branch 40 IF_ICMPNE L376 - true
   * Goal 10. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: I243 Branch 41 IFEQ L382 - true
   * Goal 11. Branch org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/lang/String;)Ljava/lang/String;: root-Branch in context: org.apache.commons.lang.StringEscapeUtils:unescapeJavaScript(Ljava/lang/String;)Ljava/lang/String;
   * Goal 12. [Output]: org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/lang/String;)Ljava/lang/String;:NonEmptyString
   * Goal 13. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 306
   * Goal 14. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 309
   * Goal 15. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 312
   * Goal 16. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 313
   * Goal 17. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 314
   * Goal 18. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 315
   * Goal 19. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 316
   * Goal 20. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 317
   * Goal 21. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 318
   * Goal 22. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 337
   * Goal 23. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 376
   * Goal 24. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 380
   * Goal 25. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 382
   * Goal 26. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V: Line 387
   * Goal 27. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: Line 276
   * Goal 28. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: Line 280
   * Goal 29. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: Line 281
   * Goal 30. org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;: Line 282
   * Goal 31. org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/lang/String;)Ljava/lang/String;: Line 401
   * Goal 32. [METHOD] org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/lang/String;)Ljava/lang/String;
   * Goal 33. [METHODNOEX] org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(Ljava/lang/String;)Ljava/lang/String;
   * Goal 34. Weak Mutation 98: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/lang/String;)Ljava/lang/String;:276 - ReplaceComparisonOperator != null -> = null
   * Goal 35. Weak Mutation 99: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:306 - ReplaceComparisonOperator != null -> = null
   * Goal 36. Weak Mutation 102: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:309 - ReplaceComparisonOperator != null -> = null
   * Goal 37. Weak Mutation 103: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 0
   * Goal 38. Weak Mutation 104: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 1
   * Goal 39. Weak Mutation 105: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> -1
   * Goal 40. Weak Mutation 106: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 3
   * Goal 41. Weak Mutation 107: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:313 - ReplaceConstant - 4 -> 5
   * Goal 42. Weak Mutation 108: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:314 - ReplaceConstant - 0 -> 1
   * Goal 43. Weak Mutation 109: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:315 - ReplaceConstant - 0 -> 1
   * Goal 44. Weak Mutation 110: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceConstant - 0 -> 1
   * Goal 45. Weak Mutation 111: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceVariable i -> sz
   * Goal 46. Weak Mutation 112: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp Negation of i
   * Goal 47. Weak Mutation 113: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC 1 i
   * Goal 48. Weak Mutation 114: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC -1 i
   * Goal 49. Weak Mutation 115: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceVariable sz -> i
   * Goal 50. Weak Mutation 116: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp Negation of sz
   * Goal 51. Weak Mutation 117: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC 1 sz
   * Goal 52. Weak Mutation 118: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - InsertUnaryOp IINC -1 sz
   * Goal 53. Weak Mutation 119: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceComparisonOperator >= -> -1
   * Goal 54. Weak Mutation 120: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:316 - ReplaceComparisonOperator >= -> >
   * Goal 55. Weak Mutation 122: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - ReplaceVariable i -> sz
   * Goal 56. Weak Mutation 123: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - InsertUnaryOp Negation of i
   * Goal 57. Weak Mutation 124: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - InsertUnaryOp IINC 1 i
   * Goal 58. Weak Mutation 125: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:317 - InsertUnaryOp IINC -1 i
   * Goal 59. Weak Mutation 127: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - InsertUnaryOp Negation of inUnicode
   * Goal 60. Weak Mutation 128: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - InsertUnaryOp IINC 1 inUnicode
   * Goal 61. Weak Mutation 129: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - InsertUnaryOp IINC -1 inUnicode
   * Goal 62. Weak Mutation 130: org.apache.commons.lang.StringEscapeUtils.unescapeJava(Ljava/io/Writer;Ljava/lang/String;)V:318 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      String string0 = StringEscapeUtils.unescapeJavaScript("'");
      assertNotNull(string0);
      assertEquals("'", string0);
  }
}
