Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8
Source files: [src/java]
Classpath: [file:/tmp/math_85_NopolPC/target/classes/, file:/tmp/math_85_NopolPC/target/test-classes/, file:/tmp/math_85_NopolPC/lib/commons-discovery-0.5.jar, file:/usr/yzx/program-repair-nopol-evosuite/nopol/nopol/src/main/java/fr/inria/lille/spirals/evo/libs/nopol.jar, file:/usr/yzx/program-repair-nopol-evosuite/nopol/nopol/src/main/java/fr/inria/lille/spirals/evo/libs/evosuite-1.0.3.jar, file:/usr/yzx/program-repair-nopol-evosuite/nopol/nopol/src/main/java/fr/inria/lille/spirals/evo/libs/junit-4.11.jar, file:/usr/yzx/program-repair-nopol-evosuite/nopol/nopol/src/main/java/fr/inria/lille/spirals/evo/libs/hamcrest-core-1.3.jar]
Statement type: PRECONDITION
Args: []
Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRECONDITION, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/usr/yzx/program-repair-nopol-evosuite/nopol/nopol/src/main/java/fr/inria/lille/spirals/evo/libs/z3/z3', projectSourcePath=[src/java/], projectClasspath='target/classes/:target/test-classes/:lib/commons-discovery-0.5.jar:/usr/yzx/program-repair-nopol-evosuite/nopol/nopol/src/main/java/fr/inria/lille/spirals/evo/libs/nopol.jar:/usr/yzx/program-repair-nopol-evosuite/nopol/nopol/src/main/java/fr/inria/lille/spirals/evo/libs/evosuite-1.0.3.jar:/usr/yzx/program-repair-nopol-evosuite/nopol/nopol/src/main/java/fr/inria/lille/spirals/evo/libs/junit-4.11.jar:/usr/yzx/program-repair-nopol-evosuite/nopol/nopol/src/main/java/fr/inria/lille/spirals/evo/libs/hamcrest-core-1.3.jar', projectTests=[], complianceLevel=5}
Available processors (cores): 4
Free memory: 116 MB
Maximum memory: 1 GB
Total memory available to JVM: 118 MB
Java version: 1.7.0_79
JAVA_HOME: null
PATH: /usr/lib/jvm/jdk1.7.0_79/bin:/home/yzx/bin:/home/yzx/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
14:18:08.563 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.AbstractContinuousDistribution{inverseCumulativeProbability(D)D[104:104 1.0
14:18:10.331 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.distribution.AbstractContinuousDistribution:104
[testMath280(org.apache.commons.math.distribution.NormalDistributionTest)]
14:18:10.332 [main] DEBUG tests.output - First set: 
[testMath280(org.apache.commons.math.distribution.NormalDistributionTest): org.apache.commons.math.ConvergenceException: number of iterations=1, maximum iterations=2,147,483,647, initial=1, lower bound=0, upper bound=179,769,313,486,231,570,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000, final a value=0, final b value=2, f(a)=-0.477, f(b)=0]
14:18:10.332 [main] DEBUG tests.output - Second set: 
[testMath280(org.apache.commons.math.distribution.NormalDistributionTest): null]
14:18:10.332 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.distribution.AbstractContinuousDistribution:104 otherwise the patch would be "true" or "false"
14:18:10.333 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in org.apache.commons.math.distribution.AbstractContinuousDistribution{inverseCumulativeProbability(D)D[104:104 1.0
14:18:10.333 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.AbstractContinuousDistribution{inverseCumulativeProbability(D)D[100:100 1.0
14:18:11.019 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.distribution.AbstractContinuousDistribution:100
[testMath280(org.apache.commons.math.distribution.NormalDistributionTest)]
14:18:11.019 [main] DEBUG tests.output - First set: 
[testMath280(org.apache.commons.math.distribution.NormalDistributionTest): org.apache.commons.math.ConvergenceException: number of iterations=1, maximum iterations=2,147,483,647, initial=1, lower bound=0, upper bound=179,769,313,486,231,570,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000, final a value=0, final b value=2, f(a)=-0.477, f(b)=0]
14:18:11.019 [main] DEBUG tests.output - Second set: 
[testMath280(org.apache.commons.math.distribution.NormalDistributionTest): org.apache.commons.math.ConvergenceException: number of iterations=1, maximum iterations=2,147,483,647, initial=1, lower bound=0, upper bound=179,769,313,486,231,570,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000, final a value=0, final b value=2, f(a)=-0.477, f(b)=0]
14:18:11.019 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.distribution.AbstractContinuousDistribution:100 otherwise the patch would be "true" or "false"
14:18:11.019 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in org.apache.commons.math.distribution.AbstractContinuousDistribution{inverseCumulativeProbability(D)D[100:100 1.0
14:18:11.020 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.AbstractContinuousDistribution{inverseCumulativeProbability(D)D[97:97 1.0
14:18:11.470 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.distribution.AbstractContinuousDistribution:97
[testMath280(org.apache.commons.math.distribution.NormalDistributionTest)]
14:18:11.470 [main] DEBUG tests.output - First set: 
[testMath280(org.apache.commons.math.distribution.NormalDistributionTest): org.apache.commons.math.ConvergenceException: number of iterations=1, maximum iterations=2,147,483,647, initial=1, lower bound=0, upper bound=179,769,313,486,231,570,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000, final a value=0, final b value=2, f(a)=-0.477, f(b)=0]
14:18:11.470 [main] DEBUG tests.output - Second set: 
[testMath280(org.apache.commons.math.distribution.NormalDistributionTest): org.apache.commons.math.ConvergenceException: number of iterations=1, maximum iterations=2,147,483,647, initial=1, lower bound=0, upper bound=179,769,313,486,231,570,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000, final a value=0, final b value=2, f(a)=-0.477, f(b)=0]
14:18:11.471 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.distribution.AbstractContinuousDistribution:97 otherwise the patch would be "true" or "false"
14:18:11.471 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in org.apache.commons.math.distribution.AbstractContinuousDistribution{inverseCumulativeProbability(D)D[97:97 1.0
14:18:11.471 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils{bracket(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDI)[D[199:199 1.0
14:18:12.025 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 1 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils:199 otherwise the patch would be "true" or "false"
14:18:12.025 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils{bracket(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDI)[D[199:199 1.0
14:18:12.025 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.NormalDistributionImpl{getInitialDomain(D)D[229:229 0.7071067811865475
14:18:12.223 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation org.apache.commons.math.distribution.NormalDistributionImpl:229.
14:18:12.223 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.NormalDistributionImpl{getInitialDomain(D)D[224:224 0.7071067811865475
14:18:12.556 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
NormalDistributionImpl.java:116: error: variable ret might not have been initialized
        return ret;
               ^
14:18:12.558 [main] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class NormalDistributionImpl extends org.apache.commons.math.distribution.AbstractContinuousDistribution implements java.io.Serializable , org.apache.commons.math.distribution.NormalDistribution {
    private static final long serialVersionUID = 8589540077390120676L;

    private static final double SQRT2PI = java.lang.Math.sqrt((2 * (java.lang.Math.PI)));

    private double mean = 0;

    private double standardDeviation = 1;

    public NormalDistributionImpl(double mean ,double sd) {
        super();
        setMean(mean);
        setStandardDeviation(sd);
    }

    public NormalDistributionImpl() {
        this(0.0, 1.0);
    }

    public double getMean() {
        return mean;
    }

    public void setMean(double mean) {
        org.apache.commons.math.distribution.NormalDistributionImpl.this.mean = mean;
    }

    public double getStandardDeviation() {
        return standardDeviation;
    }

    public void setStandardDeviation(double sd) {
        if (sd <= 0.0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("standard deviation must be positive ({0})", sd);
        } 
        standardDeviation = sd;
    }

    public double density(java.lang.Double x) {
        double x0 = x - (getMean());
        return (java.lang.Math.exp((((-x0) * x0) / ((2 * (getStandardDeviation())) * (getStandardDeviation()))))) / ((getStandardDeviation()) * (org.apache.commons.math.distribution.NormalDistributionImpl.SQRT2PI));
    }

    public double cumulativeProbability(double x) throws org.apache.commons.math.MathException {
        try {
            return 0.5 * (1.0 + (org.apache.commons.math.special.Erf.erf(((x - (mean)) / ((standardDeviation) * (java.lang.Math.sqrt(2.0)))))));
        } catch (org.apache.commons.math.MaxIterationsExceededException ex) {
            if (x < ((mean) - (20 * (standardDeviation)))) {
                return 0.0;
            } else if (x > ((mean) + (20 * (standardDeviation)))) {
                return 1.0;
            } else {
                throw ex;
            }
        }
    }

    @java.lang.Override
    public double inverseCumulativeProbability(final double p) throws org.apache.commons.math.MathException {
        if (p == 0) {
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        if (p == 1) {
            return java.lang.Double.POSITIVE_INFINITY;
        } 
        return super.inverseCumulativeProbability(p);
    }

    @java.lang.Override
    protected double getDomainLowerBound(double p) {
        double ret;
        if (p < 0.5) {
            ret = -(java.lang.Double.MAX_VALUE);
        } else {
            ret = getMean();
        }
        return ret;
    }

    @java.lang.Override
    protected double getDomainUpperBound(double p) {
        double ret;
        if (p < 0.5) {
            ret = getMean();
        } else {
            ret = java.lang.Double.MAX_VALUE;
        }
        return ret;
    }

    @java.lang.Override
    protected double getInitialDomain(double p) {
        double ret;
        if (p < 0.5) {
            ret = (getMean()) - (getStandardDeviation());
        } else if (p > 0.5) {
            ret = (getMean()) + (getStandardDeviation());
        } else {
            ret = getMean();
        }
        return ret;
    }
}
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:88)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:56)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:122)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:162)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:117)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:88)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:63)
14:18:12.559 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.NormalDistributionImpl{getInitialDomain(D)D[223:223 0.7071067811865475
14:18:13.321 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
NormalDistributionImpl.java:120: error: variable ret might not have been initialized
        return ret;
               ^
14:18:13.323 [main] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class NormalDistributionImpl extends org.apache.commons.math.distribution.AbstractContinuousDistribution implements java.io.Serializable , org.apache.commons.math.distribution.NormalDistribution {
    private static final long serialVersionUID = 8589540077390120676L;

    private static final double SQRT2PI = java.lang.Math.sqrt((2 * (java.lang.Math.PI)));

    private double mean = 0;

    private double standardDeviation = 1;

    public NormalDistributionImpl(double mean ,double sd) {
        super();
        setMean(mean);
        setStandardDeviation(sd);
    }

    public NormalDistributionImpl() {
        this(0.0, 1.0);
    }

    public double getMean() {
        return mean;
    }

    public void setMean(double mean) {
        org.apache.commons.math.distribution.NormalDistributionImpl.this.mean = mean;
    }

    public double getStandardDeviation() {
        return standardDeviation;
    }

    public void setStandardDeviation(double sd) {
        if (sd <= 0.0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("standard deviation must be positive ({0})", sd);
        } 
        standardDeviation = sd;
    }

    public double density(java.lang.Double x) {
        double x0 = x - (getMean());
        return (java.lang.Math.exp((((-x0) * x0) / ((2 * (getStandardDeviation())) * (getStandardDeviation()))))) / ((getStandardDeviation()) * (org.apache.commons.math.distribution.NormalDistributionImpl.SQRT2PI));
    }

    public double cumulativeProbability(double x) throws org.apache.commons.math.MathException {
        try {
            return 0.5 * (1.0 + (org.apache.commons.math.special.Erf.erf(((x - (mean)) / ((standardDeviation) * (java.lang.Math.sqrt(2.0)))))));
        } catch (org.apache.commons.math.MaxIterationsExceededException ex) {
            if (x < ((mean) - (20 * (standardDeviation)))) {
                return 0.0;
            } else if (x > ((mean) + (20 * (standardDeviation)))) {
                return 1.0;
            } else {
                throw ex;
            }
        }
    }

    @java.lang.Override
    public double inverseCumulativeProbability(final double p) throws org.apache.commons.math.MathException {
        if (p == 0) {
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        if (p == 1) {
            return java.lang.Double.POSITIVE_INFINITY;
        } 
        return super.inverseCumulativeProbability(p);
    }

    @java.lang.Override
    protected double getDomainLowerBound(double p) {
        double ret;
        if (p < 0.5) {
            ret = -(java.lang.Double.MAX_VALUE);
        } else {
            ret = getMean();
        }
        return ret;
    }

    @java.lang.Override
    protected double getDomainUpperBound(double p) {
        double ret;
        if (p < 0.5) {
            ret = getMean();
        } else {
            ret = java.lang.Double.MAX_VALUE;
        }
        return ret;
    }

    @java.lang.Override
    protected double getInitialDomain(double p) {
        double ret;
        if (p < 0.5) {
            ret = (getMean()) - (getStandardDeviation());
        } else if (p > 0.5) {
            ret = (getMean()) + (getStandardDeviation());
        } else {
            ret = getMean();
        }
        return ret;
    }
}
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:88)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:56)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:122)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:162)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:117)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:88)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:63)
14:18:13.323 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.NormalDistributionImpl{getInitialDomain(D)D[221:221 0.7071067811865475
14:18:13.593 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
NormalDistributionImpl.java:118: error: variable ret might not have been initialized
        return ret;
               ^
14:18:13.596 [main] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class NormalDistributionImpl extends org.apache.commons.math.distribution.AbstractContinuousDistribution implements java.io.Serializable , org.apache.commons.math.distribution.NormalDistribution {
    private static final long serialVersionUID = 8589540077390120676L;

    private static final double SQRT2PI = java.lang.Math.sqrt((2 * (java.lang.Math.PI)));

    private double mean = 0;

    private double standardDeviation = 1;

    public NormalDistributionImpl(double mean ,double sd) {
        super();
        setMean(mean);
        setStandardDeviation(sd);
    }

    public NormalDistributionImpl() {
        this(0.0, 1.0);
    }

    public double getMean() {
        return mean;
    }

    public void setMean(double mean) {
        org.apache.commons.math.distribution.NormalDistributionImpl.this.mean = mean;
    }

    public double getStandardDeviation() {
        return standardDeviation;
    }

    public void setStandardDeviation(double sd) {
        if (sd <= 0.0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("standard deviation must be positive ({0})", sd);
        } 
        standardDeviation = sd;
    }

    public double density(java.lang.Double x) {
        double x0 = x - (getMean());
        return (java.lang.Math.exp((((-x0) * x0) / ((2 * (getStandardDeviation())) * (getStandardDeviation()))))) / ((getStandardDeviation()) * (org.apache.commons.math.distribution.NormalDistributionImpl.SQRT2PI));
    }

    public double cumulativeProbability(double x) throws org.apache.commons.math.MathException {
        try {
            return 0.5 * (1.0 + (org.apache.commons.math.special.Erf.erf(((x - (mean)) / ((standardDeviation) * (java.lang.Math.sqrt(2.0)))))));
        } catch (org.apache.commons.math.MaxIterationsExceededException ex) {
            if (x < ((mean) - (20 * (standardDeviation)))) {
                return 0.0;
            } else if (x > ((mean) + (20 * (standardDeviation)))) {
                return 1.0;
            } else {
                throw ex;
            }
        }
    }

    @java.lang.Override
    public double inverseCumulativeProbability(final double p) throws org.apache.commons.math.MathException {
        if (p == 0) {
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        if (p == 1) {
            return java.lang.Double.POSITIVE_INFINITY;
        } 
        return super.inverseCumulativeProbability(p);
    }

    @java.lang.Override
    protected double getDomainLowerBound(double p) {
        double ret;
        if (p < 0.5) {
            ret = -(java.lang.Double.MAX_VALUE);
        } else {
            ret = getMean();
        }
        return ret;
    }

    @java.lang.Override
    protected double getDomainUpperBound(double p) {
        double ret;
        if (p < 0.5) {
            ret = getMean();
        } else {
            ret = java.lang.Double.MAX_VALUE;
        }
        return ret;
    }

    @java.lang.Override
    protected double getInitialDomain(double p) {
        double ret;
        if (p < 0.5) {
            ret = (getMean()) - (getStandardDeviation());
        } else if (p > 0.5) {
            ret = (getMean()) + (getStandardDeviation());
        } else {
            ret = getMean();
        }
        return ret;
    }
}
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:88)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:56)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:122)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:162)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:117)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:88)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:63)
14:18:13.596 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.NormalDistributionImpl{getDomainUpperBound(D)D[206:206 0.7071067811865475
14:18:13.794 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation org.apache.commons.math.distribution.NormalDistributionImpl:206.
14:18:13.795 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.NormalDistributionImpl{getDomainUpperBound(D)D[203:203 0.7071067811865475
14:18:14.094 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
NormalDistributionImpl.java:103: error: variable ret might not have been initialized
        return ret;
               ^
14:18:14.102 [main] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class NormalDistributionImpl extends org.apache.commons.math.distribution.AbstractContinuousDistribution implements java.io.Serializable , org.apache.commons.math.distribution.NormalDistribution {
    private static final long serialVersionUID = 8589540077390120676L;

    private static final double SQRT2PI = java.lang.Math.sqrt((2 * (java.lang.Math.PI)));

    private double mean = 0;

    private double standardDeviation = 1;

    public NormalDistributionImpl(double mean ,double sd) {
        super();
        setMean(mean);
        setStandardDeviation(sd);
    }

    public NormalDistributionImpl() {
        this(0.0, 1.0);
    }

    public double getMean() {
        return mean;
    }

    public void setMean(double mean) {
        org.apache.commons.math.distribution.NormalDistributionImpl.this.mean = mean;
    }

    public double getStandardDeviation() {
        return standardDeviation;
    }

    public void setStandardDeviation(double sd) {
        if (sd <= 0.0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("standard deviation must be positive ({0})", sd);
        } 
        standardDeviation = sd;
    }

    public double density(java.lang.Double x) {
        double x0 = x - (getMean());
        return (java.lang.Math.exp((((-x0) * x0) / ((2 * (getStandardDeviation())) * (getStandardDeviation()))))) / ((getStandardDeviation()) * (org.apache.commons.math.distribution.NormalDistributionImpl.SQRT2PI));
    }

    public double cumulativeProbability(double x) throws org.apache.commons.math.MathException {
        try {
            return 0.5 * (1.0 + (org.apache.commons.math.special.Erf.erf(((x - (mean)) / ((standardDeviation) * (java.lang.Math.sqrt(2.0)))))));
        } catch (org.apache.commons.math.MaxIterationsExceededException ex) {
            if (x < ((mean) - (20 * (standardDeviation)))) {
                return 0.0;
            } else if (x > ((mean) + (20 * (standardDeviation)))) {
                return 1.0;
            } else {
                throw ex;
            }
        }
    }

    @java.lang.Override
    public double inverseCumulativeProbability(final double p) throws org.apache.commons.math.MathException {
        if (p == 0) {
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        if (p == 1) {
            return java.lang.Double.POSITIVE_INFINITY;
        } 
        return super.inverseCumulativeProbability(p);
    }

    @java.lang.Override
    protected double getDomainLowerBound(double p) {
        double ret;
        if (p < 0.5) {
            ret = -(java.lang.Double.MAX_VALUE);
        } else {
            ret = getMean();
        }
        return ret;
    }

    @java.lang.Override
    protected double getDomainUpperBound(double p) {
        double ret;
        if (p < 0.5) {
            ret = getMean();
        } else {
            ret = java.lang.Double.MAX_VALUE;
        }
        return ret;
    }

    @java.lang.Override
    protected double getInitialDomain(double p) {
        double ret;
        if (p < 0.5) {
            ret = (getMean()) - (getStandardDeviation());
        } else if (p > 0.5) {
            ret = (getMean()) + (getStandardDeviation());
        } else {
            ret = getMean();
        }
        return ret;
    }
}
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:88)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:56)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:122)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:162)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:117)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:88)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:63)
14:18:14.105 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.NormalDistributionImpl{getDomainUpperBound(D)D[200:200 0.7071067811865475
14:18:14.408 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
NormalDistributionImpl.java:105: error: variable ret might not have been initialized
        return ret;
               ^
14:18:14.410 [main] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class NormalDistributionImpl extends org.apache.commons.math.distribution.AbstractContinuousDistribution implements java.io.Serializable , org.apache.commons.math.distribution.NormalDistribution {
    private static final long serialVersionUID = 8589540077390120676L;

    private static final double SQRT2PI = java.lang.Math.sqrt((2 * (java.lang.Math.PI)));

    private double mean = 0;

    private double standardDeviation = 1;

    public NormalDistributionImpl(double mean ,double sd) {
        super();
        setMean(mean);
        setStandardDeviation(sd);
    }

    public NormalDistributionImpl() {
        this(0.0, 1.0);
    }

    public double getMean() {
        return mean;
    }

    public void setMean(double mean) {
        org.apache.commons.math.distribution.NormalDistributionImpl.this.mean = mean;
    }

    public double getStandardDeviation() {
        return standardDeviation;
    }

    public void setStandardDeviation(double sd) {
        if (sd <= 0.0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("standard deviation must be positive ({0})", sd);
        } 
        standardDeviation = sd;
    }

    public double density(java.lang.Double x) {
        double x0 = x - (getMean());
        return (java.lang.Math.exp((((-x0) * x0) / ((2 * (getStandardDeviation())) * (getStandardDeviation()))))) / ((getStandardDeviation()) * (org.apache.commons.math.distribution.NormalDistributionImpl.SQRT2PI));
    }

    public double cumulativeProbability(double x) throws org.apache.commons.math.MathException {
        try {
            return 0.5 * (1.0 + (org.apache.commons.math.special.Erf.erf(((x - (mean)) / ((standardDeviation) * (java.lang.Math.sqrt(2.0)))))));
        } catch (org.apache.commons.math.MaxIterationsExceededException ex) {
            if (x < ((mean) - (20 * (standardDeviation)))) {
                return 0.0;
            } else if (x > ((mean) + (20 * (standardDeviation)))) {
                return 1.0;
            } else {
                throw ex;
            }
        }
    }

    @java.lang.Override
    public double inverseCumulativeProbability(final double p) throws org.apache.commons.math.MathException {
        if (p == 0) {
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        if (p == 1) {
            return java.lang.Double.POSITIVE_INFINITY;
        } 
        return super.inverseCumulativeProbability(p);
    }

    @java.lang.Override
    protected double getDomainLowerBound(double p) {
        double ret;
        if (p < 0.5) {
            ret = -(java.lang.Double.MAX_VALUE);
        } else {
            ret = getMean();
        }
        return ret;
    }

    @java.lang.Override
    protected double getDomainUpperBound(double p) {
        double ret;
        if (p < 0.5) {
            ret = getMean();
        } else {
            ret = java.lang.Double.MAX_VALUE;
        }
        return ret;
    }

    @java.lang.Override
    protected double getInitialDomain(double p) {
        double ret;
        if (p < 0.5) {
            ret = (getMean()) - (getStandardDeviation());
        } else if (p > 0.5) {
            ret = (getMean()) + (getStandardDeviation());
        } else {
            ret = getMean();
        }
        return ret;
    }
}
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:88)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:56)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:122)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:162)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:117)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:88)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:63)
14:18:14.411 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.NormalDistributionImpl{getDomainLowerBound(D)D[184:184 0.7071067811865475
14:18:14.502 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation org.apache.commons.math.distribution.NormalDistributionImpl:184.
14:18:14.502 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.NormalDistributionImpl{getDomainLowerBound(D)D[181:181 0.7071067811865475
14:18:14.712 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
NormalDistributionImpl.java:92: error: variable ret might not have been initialized
        return ret;
               ^
14:18:14.714 [main] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class NormalDistributionImpl extends org.apache.commons.math.distribution.AbstractContinuousDistribution implements java.io.Serializable , org.apache.commons.math.distribution.NormalDistribution {
    private static final long serialVersionUID = 8589540077390120676L;

    private static final double SQRT2PI = java.lang.Math.sqrt((2 * (java.lang.Math.PI)));

    private double mean = 0;

    private double standardDeviation = 1;

    public NormalDistributionImpl(double mean ,double sd) {
        super();
        setMean(mean);
        setStandardDeviation(sd);
    }

    public NormalDistributionImpl() {
        this(0.0, 1.0);
    }

    public double getMean() {
        return mean;
    }

    public void setMean(double mean) {
        org.apache.commons.math.distribution.NormalDistributionImpl.this.mean = mean;
    }

    public double getStandardDeviation() {
        return standardDeviation;
    }

    public void setStandardDeviation(double sd) {
        if (sd <= 0.0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("standard deviation must be positive ({0})", sd);
        } 
        standardDeviation = sd;
    }

    public double density(java.lang.Double x) {
        double x0 = x - (getMean());
        return (java.lang.Math.exp((((-x0) * x0) / ((2 * (getStandardDeviation())) * (getStandardDeviation()))))) / ((getStandardDeviation()) * (org.apache.commons.math.distribution.NormalDistributionImpl.SQRT2PI));
    }

    public double cumulativeProbability(double x) throws org.apache.commons.math.MathException {
        try {
            return 0.5 * (1.0 + (org.apache.commons.math.special.Erf.erf(((x - (mean)) / ((standardDeviation) * (java.lang.Math.sqrt(2.0)))))));
        } catch (org.apache.commons.math.MaxIterationsExceededException ex) {
            if (x < ((mean) - (20 * (standardDeviation)))) {
                return 0.0;
            } else if (x > ((mean) + (20 * (standardDeviation)))) {
                return 1.0;
            } else {
                throw ex;
            }
        }
    }

    @java.lang.Override
    public double inverseCumulativeProbability(final double p) throws org.apache.commons.math.MathException {
        if (p == 0) {
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        if (p == 1) {
            return java.lang.Double.POSITIVE_INFINITY;
        } 
        return super.inverseCumulativeProbability(p);
    }

    @java.lang.Override
    protected double getDomainLowerBound(double p) {
        double ret;
        if (p < 0.5) {
            ret = -(java.lang.Double.MAX_VALUE);
        } else {
            ret = getMean();
        }
        return ret;
    }

    @java.lang.Override
    protected double getDomainUpperBound(double p) {
        double ret;
        if (p < 0.5) {
            ret = getMean();
        } else {
            ret = java.lang.Double.MAX_VALUE;
        }
        return ret;
    }

    @java.lang.Override
    protected double getInitialDomain(double p) {
        double ret;
        if (p < 0.5) {
            ret = (getMean()) - (getStandardDeviation());
        } else if (p > 0.5) {
            ret = (getMean()) + (getStandardDeviation());
        } else {
            ret = getMean();
        }
        return ret;
    }
}
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:88)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:56)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:122)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:162)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:117)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:88)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:63)
14:18:14.716 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.NormalDistributionImpl{getDomainLowerBound(D)D[178:178 0.7071067811865475
14:18:14.948 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
NormalDistributionImpl.java:94: error: variable ret might not have been initialized
        return ret;
               ^
14:18:14.949 [main] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class NormalDistributionImpl extends org.apache.commons.math.distribution.AbstractContinuousDistribution implements java.io.Serializable , org.apache.commons.math.distribution.NormalDistribution {
    private static final long serialVersionUID = 8589540077390120676L;

    private static final double SQRT2PI = java.lang.Math.sqrt((2 * (java.lang.Math.PI)));

    private double mean = 0;

    private double standardDeviation = 1;

    public NormalDistributionImpl(double mean ,double sd) {
        super();
        setMean(mean);
        setStandardDeviation(sd);
    }

    public NormalDistributionImpl() {
        this(0.0, 1.0);
    }

    public double getMean() {
        return mean;
    }

    public void setMean(double mean) {
        org.apache.commons.math.distribution.NormalDistributionImpl.this.mean = mean;
    }

    public double getStandardDeviation() {
        return standardDeviation;
    }

    public void setStandardDeviation(double sd) {
        if (sd <= 0.0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("standard deviation must be positive ({0})", sd);
        } 
        standardDeviation = sd;
    }

    public double density(java.lang.Double x) {
        double x0 = x - (getMean());
        return (java.lang.Math.exp((((-x0) * x0) / ((2 * (getStandardDeviation())) * (getStandardDeviation()))))) / ((getStandardDeviation()) * (org.apache.commons.math.distribution.NormalDistributionImpl.SQRT2PI));
    }

    public double cumulativeProbability(double x) throws org.apache.commons.math.MathException {
        try {
            return 0.5 * (1.0 + (org.apache.commons.math.special.Erf.erf(((x - (mean)) / ((standardDeviation) * (java.lang.Math.sqrt(2.0)))))));
        } catch (org.apache.commons.math.MaxIterationsExceededException ex) {
            if (x < ((mean) - (20 * (standardDeviation)))) {
                return 0.0;
            } else if (x > ((mean) + (20 * (standardDeviation)))) {
                return 1.0;
            } else {
                throw ex;
            }
        }
    }

    @java.lang.Override
    public double inverseCumulativeProbability(final double p) throws org.apache.commons.math.MathException {
        if (p == 0) {
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        if (p == 1) {
            return java.lang.Double.POSITIVE_INFINITY;
        } 
        return super.inverseCumulativeProbability(p);
    }

    @java.lang.Override
    protected double getDomainLowerBound(double p) {
        double ret;
        if (p < 0.5) {
            ret = -(java.lang.Double.MAX_VALUE);
        } else {
            ret = getMean();
        }
        return ret;
    }

    @java.lang.Override
    protected double getDomainUpperBound(double p) {
        double ret;
        if (p < 0.5) {
            ret = getMean();
        } else {
            ret = java.lang.Double.MAX_VALUE;
        }
        return ret;
    }

    @java.lang.Override
    protected double getInitialDomain(double p) {
        double ret;
        if (p < 0.5) {
            ret = (getMean()) - (getStandardDeviation());
        } else if (p > 0.5) {
            ret = (getMean()) + (getStandardDeviation());
        } else {
            ret = getMean();
        }
        return ret;
    }
}
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:88)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:56)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:122)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:162)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:117)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:88)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:63)
14:18:14.954 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.NormalDistributionImpl{cumulativeProbability(D)D[132:132 0.7071067811865475
14:18:15.139 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
NormalDistributionImpl.java:71: error: missing return statement
    }
    ^
14:18:15.143 [main] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class NormalDistributionImpl extends org.apache.commons.math.distribution.AbstractContinuousDistribution implements java.io.Serializable , org.apache.commons.math.distribution.NormalDistribution {
    private static final long serialVersionUID = 8589540077390120676L;

    private static final double SQRT2PI = java.lang.Math.sqrt((2 * (java.lang.Math.PI)));

    private double mean = 0;

    private double standardDeviation = 1;

    public NormalDistributionImpl(double mean ,double sd) {
        super();
        setMean(mean);
        setStandardDeviation(sd);
    }

    public NormalDistributionImpl() {
        this(0.0, 1.0);
    }

    public double getMean() {
        return mean;
    }

    public void setMean(double mean) {
        org.apache.commons.math.distribution.NormalDistributionImpl.this.mean = mean;
    }

    public double getStandardDeviation() {
        return standardDeviation;
    }

    public void setStandardDeviation(double sd) {
        if (sd <= 0.0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("standard deviation must be positive ({0})", sd);
        } 
        standardDeviation = sd;
    }

    public double density(java.lang.Double x) {
        double x0 = x - (getMean());
        return (java.lang.Math.exp((((-x0) * x0) / ((2 * (getStandardDeviation())) * (getStandardDeviation()))))) / ((getStandardDeviation()) * (org.apache.commons.math.distribution.NormalDistributionImpl.SQRT2PI));
    }

    public double cumulativeProbability(double x) throws org.apache.commons.math.MathException {
        try {
            return 0.5 * (1.0 + (org.apache.commons.math.special.Erf.erf(((x - (mean)) / ((standardDeviation) * (java.lang.Math.sqrt(2.0)))))));
        } catch (org.apache.commons.math.MaxIterationsExceededException ex) {
            if (x < ((mean) - (20 * (standardDeviation)))) {
                return 0.0;
            } else if (x > ((mean) + (20 * (standardDeviation)))) {
                return 1.0;
            } else {
                throw ex;
            }
        }
    }

    @java.lang.Override
    public double inverseCumulativeProbability(final double p) throws org.apache.commons.math.MathException {
        if (p == 0) {
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        if (p == 1) {
            return java.lang.Double.POSITIVE_INFINITY;
        } 
        return super.inverseCumulativeProbability(p);
    }

    @java.lang.Override
    protected double getDomainLowerBound(double p) {
        double ret;
        if (p < 0.5) {
            ret = -(java.lang.Double.MAX_VALUE);
        } else {
            ret = getMean();
        }
        return ret;
    }

    @java.lang.Override
    protected double getDomainUpperBound(double p) {
        double ret;
        if (p < 0.5) {
            ret = getMean();
        } else {
            ret = java.lang.Double.MAX_VALUE;
        }
        return ret;
    }

    @java.lang.Override
    protected double getInitialDomain(double p) {
        double ret;
        if (p < 0.5) {
            ret = (getMean()) - (getStandardDeviation());
        } else if (p > 0.5) {
            ret = (getMean()) + (getStandardDeviation());
        } else {
            ret = getMean();
        }
        return ret;
    }
}
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:88)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:56)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:122)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:162)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:117)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:88)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:63)
14:18:15.154 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.NormalDistributionImpl{cumulativeProbability(D)D[131:131 0.7071067811865475
14:18:15.480 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
NormalDistributionImpl.java:77: error: missing return statement
    }
    ^
14:18:15.482 [main] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class NormalDistributionImpl extends org.apache.commons.math.distribution.AbstractContinuousDistribution implements java.io.Serializable , org.apache.commons.math.distribution.NormalDistribution {
    private static final long serialVersionUID = 8589540077390120676L;

    private static final double SQRT2PI = java.lang.Math.sqrt((2 * (java.lang.Math.PI)));

    private double mean = 0;

    private double standardDeviation = 1;

    public NormalDistributionImpl(double mean ,double sd) {
        super();
        setMean(mean);
        setStandardDeviation(sd);
    }

    public NormalDistributionImpl() {
        this(0.0, 1.0);
    }

    public double getMean() {
        return mean;
    }

    public void setMean(double mean) {
        org.apache.commons.math.distribution.NormalDistributionImpl.this.mean = mean;
    }

    public double getStandardDeviation() {
        return standardDeviation;
    }

    public void setStandardDeviation(double sd) {
        if (sd <= 0.0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("standard deviation must be positive ({0})", sd);
        } 
        standardDeviation = sd;
    }

    public double density(java.lang.Double x) {
        double x0 = x - (getMean());
        return (java.lang.Math.exp((((-x0) * x0) / ((2 * (getStandardDeviation())) * (getStandardDeviation()))))) / ((getStandardDeviation()) * (org.apache.commons.math.distribution.NormalDistributionImpl.SQRT2PI));
    }

    public double cumulativeProbability(double x) throws org.apache.commons.math.MathException {
        try {
            return 0.5 * (1.0 + (org.apache.commons.math.special.Erf.erf(((x - (mean)) / ((standardDeviation) * (java.lang.Math.sqrt(2.0)))))));
        } catch (org.apache.commons.math.MaxIterationsExceededException ex) {
            if (x < ((mean) - (20 * (standardDeviation)))) {
                return 0.0;
            } else if (x > ((mean) + (20 * (standardDeviation)))) {
                return 1.0;
            } else {
                throw ex;
            }
        }
    }

    @java.lang.Override
    public double inverseCumulativeProbability(final double p) throws org.apache.commons.math.MathException {
        if (p == 0) {
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        if (p == 1) {
            return java.lang.Double.POSITIVE_INFINITY;
        } 
        return super.inverseCumulativeProbability(p);
    }

    @java.lang.Override
    protected double getDomainLowerBound(double p) {
        double ret;
        if (p < 0.5) {
            ret = -(java.lang.Double.MAX_VALUE);
        } else {
            ret = getMean();
        }
        return ret;
    }

    @java.lang.Override
    protected double getDomainUpperBound(double p) {
        double ret;
        if (p < 0.5) {
            ret = getMean();
        } else {
            ret = java.lang.Double.MAX_VALUE;
        }
        return ret;
    }

    @java.lang.Override
    protected double getInitialDomain(double p) {
        double ret;
        if (p < 0.5) {
            ret = (getMean()) - (getStandardDeviation());
        } else if (p > 0.5) {
            ret = (getMean()) + (getStandardDeviation());
        } else {
            ret = getMean();
        }
        return ret;
    }
}
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:88)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:56)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:122)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:162)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:117)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:88)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:63)
14:18:15.484 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.NormalDistributionImpl{cumulativeProbability(D)D[129:129 0.7071067811865475
14:18:15.754 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
NormalDistributionImpl.java:75: error: missing return statement
    }
    ^
14:18:15.760 [main] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class NormalDistributionImpl extends org.apache.commons.math.distribution.AbstractContinuousDistribution implements java.io.Serializable , org.apache.commons.math.distribution.NormalDistribution {
    private static final long serialVersionUID = 8589540077390120676L;

    private static final double SQRT2PI = java.lang.Math.sqrt((2 * (java.lang.Math.PI)));

    private double mean = 0;

    private double standardDeviation = 1;

    public NormalDistributionImpl(double mean ,double sd) {
        super();
        setMean(mean);
        setStandardDeviation(sd);
    }

    public NormalDistributionImpl() {
        this(0.0, 1.0);
    }

    public double getMean() {
        return mean;
    }

    public void setMean(double mean) {
        org.apache.commons.math.distribution.NormalDistributionImpl.this.mean = mean;
    }

    public double getStandardDeviation() {
        return standardDeviation;
    }

    public void setStandardDeviation(double sd) {
        if (sd <= 0.0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("standard deviation must be positive ({0})", sd);
        } 
        standardDeviation = sd;
    }

    public double density(java.lang.Double x) {
        double x0 = x - (getMean());
        return (java.lang.Math.exp((((-x0) * x0) / ((2 * (getStandardDeviation())) * (getStandardDeviation()))))) / ((getStandardDeviation()) * (org.apache.commons.math.distribution.NormalDistributionImpl.SQRT2PI));
    }

    public double cumulativeProbability(double x) throws org.apache.commons.math.MathException {
        try {
            return 0.5 * (1.0 + (org.apache.commons.math.special.Erf.erf(((x - (mean)) / ((standardDeviation) * (java.lang.Math.sqrt(2.0)))))));
        } catch (org.apache.commons.math.MaxIterationsExceededException ex) {
            if (x < ((mean) - (20 * (standardDeviation)))) {
                return 0.0;
            } else if (x > ((mean) + (20 * (standardDeviation)))) {
                return 1.0;
            } else {
                throw ex;
            }
        }
    }

    @java.lang.Override
    public double inverseCumulativeProbability(final double p) throws org.apache.commons.math.MathException {
        if (p == 0) {
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        if (p == 1) {
            return java.lang.Double.POSITIVE_INFINITY;
        } 
        return super.inverseCumulativeProbability(p);
    }

    @java.lang.Override
    protected double getDomainLowerBound(double p) {
        double ret;
        if (p < 0.5) {
            ret = -(java.lang.Double.MAX_VALUE);
        } else {
            ret = getMean();
        }
        return ret;
    }

    @java.lang.Override
    protected double getDomainUpperBound(double p) {
        double ret;
        if (p < 0.5) {
            ret = getMean();
        } else {
            ret = java.lang.Double.MAX_VALUE;
        }
        return ret;
    }

    @java.lang.Override
    protected double getInitialDomain(double p) {
        double ret;
        if (p < 0.5) {
            ret = (getMean()) - (getStandardDeviation());
        } else if (p > 0.5) {
            ret = (getMean()) + (getStandardDeviation());
        } else {
            ret = getMean();
        }
        return ret;
    }
}
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:88)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:56)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:122)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:162)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:117)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:88)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:63)
14:18:15.763 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.NormalDistributionImpl{cumulativeProbability(D)D[128:128 0.7071067811865475
14:18:15.873 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation org.apache.commons.math.distribution.NormalDistributionImpl:128.
14:18:15.874 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.special.Gamma{regularizedGammaP(DDDI)D[181:181 0.7071067811865475
14:18:16.177 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
Gamma.java:82: error: variable ret might not have been initialized
        return ret;
               ^
14:18:16.187 [main] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class Gamma {
    public static final double GAMMA = 0.5772156649015329;

    private static final double DEFAULT_EPSILON = 1.0E-14;

    private static final double[] lanczos = new double[]{ 0.9999999999999971 , 57.15623566586292 , -59.59796035547549 , 14.136097974741746 , -0.4919138160976202 , 3.399464998481189E-5 , 4.652362892704858E-5 , -9.837447530487956E-5 , 1.580887032249125E-4 , -2.1026444172410488E-4 , 2.1743961811521265E-4 , -1.643181065367639E-4 , 8.441822398385275E-5 , -2.6190838401581408E-5 , 3.6899182659531625E-6 };

    private static final double HALF_LOG_2_PI = 0.5 * (java.lang.Math.log((2.0 * (java.lang.Math.PI))));

    private Gamma() {
        super();
    }

    public static double logGamma(double x) {
        double ret;
        if ((java.lang.Double.isNaN(x)) || (x <= 0.0)) {
            ret = java.lang.Double.NaN;
        } else {
            double g = 607.0 / 128.0;
            double sum = 0.0;
            for (int i = (org.apache.commons.math.special.Gamma.lanczos.length) - 1 ; i > 0 ; --i) {
                sum = sum + ((org.apache.commons.math.special.Gamma.lanczos[i]) / (x + i));
            }
            sum = sum + (org.apache.commons.math.special.Gamma.lanczos[0]);
            double tmp = (x + g) + 0.5;
            ret = ((((x + 0.5) * (java.lang.Math.log(tmp))) - tmp) + (org.apache.commons.math.special.Gamma.HALF_LOG_2_PI)) + (java.lang.Math.log((sum / x)));
        }
        return ret;
    }

    public static double regularizedGammaP(double a, double x) throws org.apache.commons.math.MathException {
        return org.apache.commons.math.special.Gamma.regularizedGammaP(a, x, org.apache.commons.math.special.Gamma.DEFAULT_EPSILON, java.lang.Integer.MAX_VALUE);
    }

    public static double regularizedGammaP(double a, double x, double epsilon, int maxIterations) throws org.apache.commons.math.MathException {
        double ret;
        if ((((java.lang.Double.isNaN(a)) || (java.lang.Double.isNaN(x))) || (a <= 0.0)) || (x < 0.0)) {
            ret = java.lang.Double.NaN;
        } else if (x == 0.0) {
            ret = 0.0;
        } else if ((a >= 1.0) && (x > a)) {
            ret = 1.0 - (org.apache.commons.math.special.Gamma.regularizedGammaQ(a, x, epsilon, maxIterations));
        } else {
            double n = 0.0;
            double an = 1.0 / a;
            double sum = an;
            while (((java.lang.Math.abs(an)) > epsilon) && (n < maxIterations)) {
                n = n + 1.0;
                an = an * (x / (a + n));
                sum = sum + an;
            }
            if (n >= maxIterations) {
                throw new org.apache.commons.math.MaxIterationsExceededException(maxIterations);
            } else {
                ret = (java.lang.Math.exp((((-x) + (a * (java.lang.Math.log(x)))) - (org.apache.commons.math.special.Gamma.logGamma(a))))) * sum;
            }
        }
        return ret;
    }

    public static double regularizedGammaQ(double a, double x) throws org.apache.commons.math.MathException {
        return org.apache.commons.math.special.Gamma.regularizedGammaQ(a, x, org.apache.commons.math.special.Gamma.DEFAULT_EPSILON, java.lang.Integer.MAX_VALUE);
    }

    public static double regularizedGammaQ(final double a, double x, double epsilon, int maxIterations) throws org.apache.commons.math.MathException {
        double ret;
        if ((((java.lang.Double.isNaN(a)) || (java.lang.Double.isNaN(x))) || (a <= 0.0)) || (x < 0.0)) {
            ret = java.lang.Double.NaN;
        } else if (x == 0.0) {
            ret = 1.0;
        } else if ((x < a) || (a < 1.0)) {
            ret = 1.0 - (org.apache.commons.math.special.Gamma.regularizedGammaP(a, x, epsilon, maxIterations));
        } else {
            org.apache.commons.math.util.ContinuedFraction cf = new org.apache.commons.math.util.ContinuedFraction() {
                @java.lang.Override
                protected double getA(int n, double x) {
                    return (((2.0 * n) + 1.0) - a) + x;
                }

                @java.lang.Override
                protected double getB(int n, double x) {
                    return n * (a - n);
                }
            };
            ret = 1.0 / (cf.evaluate(x, epsilon, maxIterations));
            ret = (java.lang.Math.exp((((-x) + (a * (java.lang.Math.log(x)))) - (org.apache.commons.math.special.Gamma.logGamma(a))))) * ret;
        }
        return ret;
    }

    private static final double C_LIMIT = 49;

    private static final double S_LIMIT = 1.0E-5;

    public static double digamma(double x) {
        if ((x > 0) && (x <= (org.apache.commons.math.special.Gamma.S_LIMIT))) {
            return (-(org.apache.commons.math.special.Gamma.GAMMA)) - (1 / x);
        } 
        if (x >= (org.apache.commons.math.special.Gamma.C_LIMIT)) {
            double inv = 1 / (x * x);
            return ((java.lang.Math.log(x)) - (0.5 / x)) - (inv * ((1.0 / 12) + (inv * ((1.0 / 120) - (inv / 252)))));
        } 
        return (org.apache.commons.math.special.Gamma.digamma((x + 1))) - (1 / x);
    }

    public static double trigamma(double x) {
        if ((x > 0) && (x <= (org.apache.commons.math.special.Gamma.S_LIMIT))) {
            return 1 / (x * x);
        } 
        if (x >= (org.apache.commons.math.special.Gamma.C_LIMIT)) {
            double inv = 1 / (x * x);
            return ((1 / x) + (inv / 2)) + ((inv / x) * ((1.0 / 6) - (inv * ((1.0 / 30) + (inv / 42)))));
        } 
        return (org.apache.commons.math.special.Gamma.trigamma((x + 1))) + (1 / (x * x));
    }
}
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:88)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:56)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:122)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:162)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:117)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:88)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:63)
14:18:16.198 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.NormalDistributionImpl{inverseCumulativeProbability(D)D[162:162 0.5773502691896258
14:18:16.387 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation org.apache.commons.math.distribution.NormalDistributionImpl:162.
14:18:16.387 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.NormalDistributionImpl{inverseCumulativeProbability(D)D[159:159 0.5
14:18:16.814 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.distribution.NormalDistributionImpl:159
[testMath280(org.apache.commons.math.distribution.NormalDistributionTest)]
14:18:16.814 [main] DEBUG tests.output - First set: 
[testMath280(org.apache.commons.math.distribution.NormalDistributionTest): org.apache.commons.math.ConvergenceException: number of iterations=1, maximum iterations=2,147,483,647, initial=1, lower bound=0, upper bound=179,769,313,486,231,570,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000, final a value=0, final b value=2, f(a)=-0.477, f(b)=0]
14:18:16.814 [main] DEBUG tests.output - Second set: 
[testMath280(org.apache.commons.math.distribution.NormalDistributionTest): org.apache.commons.math.ConvergenceException: number of iterations=1, maximum iterations=2,147,483,647, initial=1, lower bound=0, upper bound=179,769,313,486,231,570,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000, final a value=0, final b value=2, f(a)=-0.477, f(b)=0]
14:18:16.814 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.distribution.NormalDistributionImpl:159 otherwise the patch would be "true" or "false"
14:18:16.814 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in org.apache.commons.math.distribution.NormalDistributionImpl{inverseCumulativeProbability(D)D[159:159 0.5
14:18:16.815 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.NormalDistributionImpl{inverseCumulativeProbability(D)D[156:156 0.5
14:18:17.102 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.distribution.NormalDistributionImpl:156
[testMath280(org.apache.commons.math.distribution.NormalDistributionTest)]
14:18:17.102 [main] DEBUG tests.output - First set: 
[testMath280(org.apache.commons.math.distribution.NormalDistributionTest): org.apache.commons.math.ConvergenceException: number of iterations=1, maximum iterations=2,147,483,647, initial=1, lower bound=0, upper bound=179,769,313,486,231,570,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000, final a value=0, final b value=2, f(a)=-0.477, f(b)=0]
14:18:17.102 [main] DEBUG tests.output - Second set: 
[testMath280(org.apache.commons.math.distribution.NormalDistributionTest): org.apache.commons.math.ConvergenceException: number of iterations=1, maximum iterations=2,147,483,647, initial=1, lower bound=0, upper bound=179,769,313,486,231,570,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000, final a value=0, final b value=2, f(a)=-0.477, f(b)=0]
14:18:17.102 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.distribution.NormalDistributionImpl:156 otherwise the patch would be "true" or "false"
14:18:17.102 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in org.apache.commons.math.distribution.NormalDistributionImpl{inverseCumulativeProbability(D)D[156:156 0.5
14:18:17.102 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.NormalDistributionImpl{getStandardDeviation()D[88:88 0.3779644730092272
14:18:17.237 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation org.apache.commons.math.distribution.NormalDistributionImpl:88.
14:18:17.241 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.NormalDistributionImpl{getMean()D[72:72 0.3779644730092272
14:18:17.363 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation org.apache.commons.math.distribution.NormalDistributionImpl:72.
14:18:17.363 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.NormalDistributionImpl{cumulativeProbability(D)D[126:126 0.3333333333333333
14:18:17.437 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation org.apache.commons.math.distribution.NormalDistributionImpl:126.
14:18:17.437 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.special.Gamma{regularizedGammaP(DDDI)D[162:162 0.31622776601683794
14:18:17.666 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
Gamma.java:79: error: variable ret might not have been initialized
        return ret;
               ^
14:18:17.670 [main] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class Gamma {
    public static final double GAMMA = 0.5772156649015329;

    private static final double DEFAULT_EPSILON = 1.0E-14;

    private static final double[] lanczos = new double[]{ 0.9999999999999971 , 57.15623566586292 , -59.59796035547549 , 14.136097974741746 , -0.4919138160976202 , 3.399464998481189E-5 , 4.652362892704858E-5 , -9.837447530487956E-5 , 1.580887032249125E-4 , -2.1026444172410488E-4 , 2.1743961811521265E-4 , -1.643181065367639E-4 , 8.441822398385275E-5 , -2.6190838401581408E-5 , 3.6899182659531625E-6 };

    private static final double HALF_LOG_2_PI = 0.5 * (java.lang.Math.log((2.0 * (java.lang.Math.PI))));

    private Gamma() {
        super();
    }

    public static double logGamma(double x) {
        double ret;
        if ((java.lang.Double.isNaN(x)) || (x <= 0.0)) {
            ret = java.lang.Double.NaN;
        } else {
            double g = 607.0 / 128.0;
            double sum = 0.0;
            for (int i = (org.apache.commons.math.special.Gamma.lanczos.length) - 1 ; i > 0 ; --i) {
                sum = sum + ((org.apache.commons.math.special.Gamma.lanczos[i]) / (x + i));
            }
            sum = sum + (org.apache.commons.math.special.Gamma.lanczos[0]);
            double tmp = (x + g) + 0.5;
            ret = ((((x + 0.5) * (java.lang.Math.log(tmp))) - tmp) + (org.apache.commons.math.special.Gamma.HALF_LOG_2_PI)) + (java.lang.Math.log((sum / x)));
        }
        return ret;
    }

    public static double regularizedGammaP(double a, double x) throws org.apache.commons.math.MathException {
        return org.apache.commons.math.special.Gamma.regularizedGammaP(a, x, org.apache.commons.math.special.Gamma.DEFAULT_EPSILON, java.lang.Integer.MAX_VALUE);
    }

    public static double regularizedGammaP(double a, double x, double epsilon, int maxIterations) throws org.apache.commons.math.MathException {
        double ret;
        if ((((java.lang.Double.isNaN(a)) || (java.lang.Double.isNaN(x))) || (a <= 0.0)) || (x < 0.0)) {
            ret = java.lang.Double.NaN;
        } else if (x == 0.0) {
            ret = 0.0;
        } else if ((a >= 1.0) && (x > a)) {
            ret = 1.0 - (org.apache.commons.math.special.Gamma.regularizedGammaQ(a, x, epsilon, maxIterations));
        } else {
            double n = 0.0;
            double an = 1.0 / a;
            double sum = an;
            while (((java.lang.Math.abs(an)) > epsilon) && (n < maxIterations)) {
                n = n + 1.0;
                an = an * (x / (a + n));
                sum = sum + an;
            }
            if (n >= maxIterations) {
                throw new org.apache.commons.math.MaxIterationsExceededException(maxIterations);
            } else {
                ret = (java.lang.Math.exp((((-x) + (a * (java.lang.Math.log(x)))) - (org.apache.commons.math.special.Gamma.logGamma(a))))) * sum;
            }
        }
        return ret;
    }

    public static double regularizedGammaQ(double a, double x) throws org.apache.commons.math.MathException {
        return org.apache.commons.math.special.Gamma.regularizedGammaQ(a, x, org.apache.commons.math.special.Gamma.DEFAULT_EPSILON, java.lang.Integer.MAX_VALUE);
    }

    public static double regularizedGammaQ(final double a, double x, double epsilon, int maxIterations) throws org.apache.commons.math.MathException {
        double ret;
        if ((((java.lang.Double.isNaN(a)) || (java.lang.Double.isNaN(x))) || (a <= 0.0)) || (x < 0.0)) {
            ret = java.lang.Double.NaN;
        } else if (x == 0.0) {
            ret = 1.0;
        } else if ((x < a) || (a < 1.0)) {
            ret = 1.0 - (org.apache.commons.math.special.Gamma.regularizedGammaP(a, x, epsilon, maxIterations));
        } else {
            org.apache.commons.math.util.ContinuedFraction cf = new org.apache.commons.math.util.ContinuedFraction() {
                @java.lang.Override
                protected double getA(int n, double x) {
                    return (((2.0 * n) + 1.0) - a) + x;
                }

                @java.lang.Override
                protected double getB(int n, double x) {
                    return n * (a - n);
                }
            };
            ret = 1.0 / (cf.evaluate(x, epsilon, maxIterations));
            ret = (java.lang.Math.exp((((-x) + (a * (java.lang.Math.log(x)))) - (org.apache.commons.math.special.Gamma.logGamma(a))))) * ret;
        }
        return ret;
    }

    private static final double C_LIMIT = 49;

    private static final double S_LIMIT = 1.0E-5;

    public static double digamma(double x) {
        if ((x > 0) && (x <= (org.apache.commons.math.special.Gamma.S_LIMIT))) {
            return (-(org.apache.commons.math.special.Gamma.GAMMA)) - (1 / x);
        } 
        if (x >= (org.apache.commons.math.special.Gamma.C_LIMIT)) {
            double inv = 1 / (x * x);
            return ((java.lang.Math.log(x)) - (0.5 / x)) - (inv * ((1.0 / 12) + (inv * ((1.0 / 120) - (inv / 252)))));
        } 
        return (org.apache.commons.math.special.Gamma.digamma((x + 1))) - (1 / x);
    }

    public static double trigamma(double x) {
        if ((x > 0) && (x <= (org.apache.commons.math.special.Gamma.S_LIMIT))) {
            return 1 / (x * x);
        } 
        if (x >= (org.apache.commons.math.special.Gamma.C_LIMIT)) {
            double inv = 1 / (x * x);
            return ((1 / x) + (inv / 2)) + ((inv / x) * ((1.0 / 6) - (inv * ((1.0 / 30) + (inv / 42)))));
        } 
        return (org.apache.commons.math.special.Gamma.trigamma((x + 1))) + (1 / (x * x));
    }
}
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:88)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:56)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:122)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:162)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:117)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:88)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:63)
14:18:17.670 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.MathException{getLocalizedMessage()Ljava/lang/String;[172:172 0.2773500981126146
14:18:17.848 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation org.apache.commons.math.MathException:172.
14:18:17.849 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.special.Erf{erf(D)D[55:55 0.2672612419124244
14:18:17.969 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation org.apache.commons.math.special.Erf:55.
14:18:17.969 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.special.Erf{erf(D)D[52:52 0.2672612419124244
14:18:18.209 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.special.Erf:52
[testMath280(org.apache.commons.math.distribution.NormalDistributionTest)]
14:18:18.209 [main] DEBUG tests.output - First set: 
[testMath280(org.apache.commons.math.distribution.NormalDistributionTest): org.apache.commons.math.ConvergenceException: number of iterations=1, maximum iterations=2,147,483,647, initial=1, lower bound=0, upper bound=179,769,313,486,231,570,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000, final a value=0, final b value=2, f(a)=-0.477, f(b)=0]
14:18:18.209 [main] DEBUG tests.output - Second set: 
[testMath280(org.apache.commons.math.distribution.NormalDistributionTest): org.apache.commons.math.ConvergenceException: number of iterations=1, maximum iterations=2,147,483,647, initial=1, lower bound=0, upper bound=179,769,313,486,231,570,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000, final a value=0, final b value=2, f(a)=-0.477, f(b)=0]
14:18:18.209 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.special.Erf:52 otherwise the patch would be "true" or "false"
14:18:18.209 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in org.apache.commons.math.special.Erf{erf(D)D[52:52 0.2672612419124244
14:18:18.209 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.special.Erf{erf(D)D[51:51 0.2672612419124244
14:18:18.291 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation org.apache.commons.math.special.Erf:51.
14:18:18.292 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.AbstractContinuousDistribution$1{value(D)D[73:73 0.25
14:18:18.390 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation org.apache.commons.math.distribution.AbstractContinuousDistribution$1:73.
14:18:18.390 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.AbstractContinuousDistribution{inverseCumulativeProbability(D)D[85:85 0.25
14:18:18.667 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.distribution.AbstractContinuousDistribution:85
[testMath280(org.apache.commons.math.distribution.NormalDistributionTest)]
14:18:18.667 [main] DEBUG tests.output - First set: 
[testMath280(org.apache.commons.math.distribution.NormalDistributionTest): null]
14:18:18.667 [main] DEBUG tests.output - Second set: 
[testMath280(org.apache.commons.math.distribution.NormalDistributionTest): org.apache.commons.math.ConvergenceException: number of iterations=1, maximum iterations=2,147,483,647, initial=1, lower bound=0, upper bound=179,769,313,486,231,570,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000, final a value=0, final b value=2, f(a)=-0.477, f(b)=0]
14:18:18.667 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.distribution.AbstractContinuousDistribution:85 otherwise the patch would be "true" or "false"
14:18:18.667 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in org.apache.commons.math.distribution.AbstractContinuousDistribution{inverseCumulativeProbability(D)D[85:85 0.25
14:18:18.667 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.AbstractContinuousDistribution{inverseCumulativeProbability(D)D[83:83 0.25
14:18:18.794 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation org.apache.commons.math.distribution.AbstractContinuousDistribution:83.
14:18:18.794 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.AbstractContinuousDistribution{inverseCumulativeProbability(D)D[82:82 0.25
14:18:18.875 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation org.apache.commons.math.distribution.AbstractContinuousDistribution:82.
14:18:18.876 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.AbstractContinuousDistribution{inverseCumulativeProbability(D)D[81:81 0.25
14:18:18.961 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation org.apache.commons.math.distribution.AbstractContinuousDistribution:81.
14:18:18.961 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.distribution.AbstractContinuousDistribution{inverseCumulativeProbability(D)D[69:69 0.25
14:18:19.059 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation org.apache.commons.math.distribution.AbstractContinuousDistribution:69.
14:18:19.062 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils{bracket(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDI)[D[198:198 0.24253562503633297
14:18:19.449 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils:198
[]
14:18:19.449 [main] DEBUG tests.output - First set: 
[testMath280(org.apache.commons.math.distribution.NormalDistributionTest): org.apache.commons.math.ConvergenceException: number of iterations=1, maximum iterations=2,147,483,647, initial=1, lower bound=0, upper bound=179,769,313,486,231,570,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000, final a value=0, final b value=2, f(a)=-0.477, f(b)=0]
14:18:19.450 [main] DEBUG tests.output - Second set: 
[]
14:18:19.836 [main] DEBUG f.i.l.s.r.s.c.s.ConstantCollector - [data] 0.5
14:18:19.837 [main] DEBUG f.i.l.s.r.s.c.s.ConstantCollector - [data] 0.0
14:18:19.978 [main] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Specifications:
input: {lowerBound=0.0, (fa * fb)=-0.1366600265368197, b=1.0, 0.0=0.0, initial=0.16333997347, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.16333997347, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.8366600265299999}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.002502283145950502, b=1.0, 0.0=0.0, initial=0.9974914239, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9974914239, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.002508576099999993}. output: true
input: {lowerBound=0.0, (fa * fb)=-5.5917572875356514E-5, b=1.0, 0.0=0.0, initial=0.9999440793, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9999440793, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=5.592070000004501E-5}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.21622776601064925, b=1.0, 0.0=0.0, initial=0.316227766, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.316227766, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.683772234}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-0.0011861824750272123, b=2.1, 0.0=0.0, initial=0.7000000000000002, a=-1.2999999999999998, maximumIterations=2147483647, numIterations=2, fa=-0.002420780561280025, (fa * fb) >= 0.0=false, function!=null=true, upperBound=2.1, fb=0.49}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.22563279, b=1.0, 0.0=0.0, initial=0.3439, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.3439, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.6561}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.16287630320535443, b=1.0, 0.0=0.0, initial=0.7951672353, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.7951672353, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.2048327647}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.16287081591872848, b=1.0, 0.0=0.0, initial=0.20482346963, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.20482346963, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.79517653037}. output: true
input: {lowerBound=1.0E-323, (fa * fb)=-0.019802857789869146, b=4.5, 0.0=0.0, initial=2.5, a=0.5, maximumIterations=2147483647, numIterations=2, fa=-0.042123293232629595, (fa * fb) >= 0.0=false, function!=null=true, upperBound=5.0, fb=0.47011656188670053}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.021710890742717953, b=1.0, 0.0=0.0, initial=0.9777960959, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9777960959, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.02220390409999995}. output: true
input: {lowerBound=-2.0, (fa * fb)=-0.7080734182735712, b=1.0, 0.0=0.0, initial=0.0, a=-1.0, maximumIterations=2147483647, numIterations=1, fa=-0.8414709848078965, (fa * fb) >= 0.0=false, function!=null=true, upperBound=2.0, fb=0.8414709848078965}. output: true
input: {lowerBound=4.9E-324, (fa * fb)=-0.01606488424283389, b=14.0, 0.0=0.0, initial=8.0, a=2.0, maximumIterations=2147483647, numIterations=6, fa=-0.8810118431238462, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.01823458375527831}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.0015974400000000456, b=1.0, 0.0=0.0, initial=0.9984, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9984, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.0016000000000000458}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-0.0163217887129341, b=1.7000000000000002, 0.0=0.0, initial=0.7000000000000002, a=-0.2999999999999998, maximumIterations=2147483647, numIterations=1, fa=-0.0567618672531672, (fa * fb) >= 0.0=false, function!=null=true, upperBound=2.1, fb=0.28754848109799236}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.11280384000000003, b=1.0, 0.0=0.0, initial=0.8704, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.8704, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.12960000000000005}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.24182784000000002, b=1.0, 0.0=0.0, initial=0.4096, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.4096, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.5904}. output: true
input: {lowerBound=0.0, (fa * fb)=-2.8510335744403796E-5, b=1.0, 0.0=0.0, initial=2.851114863E-5, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-2.851114863E-5, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.99997148885137}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.20581259673599997, b=1.0, 0.0=0.0, initial=0.289792, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.289792, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.710208}. output: true
input: {lowerBound=4.9E-324, (fa * fb)=-0.001016513783339923, b=4.0, 0.0=0.0, initial=2.0, a=4.9E-324, maximumIterations=2147483647, numIterations=2, fa=-0.0018, (fa * fb) >= 0.0=false, function!=null=true, upperBound=4.0, fb=0.5647298796332906}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.11265309249861116, b=1.0, 0.0=0.0, initial=0.12939656302, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.12939656302, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.87060343698}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.09097572053915035, b=1.0, 0.0=0.0, initial=0.1012215158, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.1012215158, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.8987784842}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.03840000000000003, b=1.0, 0.0=0.0, initial=0.96, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.96, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.040000000000000036}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.03640903052730011, b=1.0, 0.0=0.0, initial=0.9621590305, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9621590305, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.03784096950000004}. output: true
input: {lowerBound=4.9E-324, (fa * fb)=-0.00938939716798866, b=6.0, 0.0=0.0, initial=4.0, a=2.0, maximumIterations=2147483647, numIterations=2, fa=-0.03101184312384619, (fa * fb) >= 0.0=false, function!=null=true, upperBound=8.0, fb=0.30276811121776875}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.047261936881136495, b=1.0, 0.0=0.0, initial=0.04973556312, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.04973556312, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.95026443688}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.25, b=1.0, 0.0=0.0, initial=0.5, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.5, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.5}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.0338111800434087, b=1.0, 0.0=0.0, initial=0.9649610951, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9649610951, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.035038904899999945}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.009104845030085964, b=3.5, 0.0=0.0, initial=1.5, a=0.0, maximumIterations=2147483647, numIterations=2, fa=-0.01, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.9104845030085964}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-8.156785682314489E-5, b=2.1, 0.0=0.0, initial=0.7000000000000002, a=-2.3, maximumIterations=2147483647, numIterations=3, fa=-1.6346263892413806E-4, (fa * fb) >= 0.0=false, function!=null=true, upperBound=2.1, fb=0.499}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.2234179584, b=1.0, 0.0=0.0, initial=0.33696, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.33696, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.6630400000000001}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.002537900757894885, b=1.0, 0.0=0.0, initial=0.9974556254, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9974556254, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.00254437460000001}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.2071067811809753, b=1.0, 0.0=0.0, initial=0.7071067812, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.7071067812, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.29289321879999997}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.24636501825366022, b=1.0, 0.0=0.0, initial=0.5602908098, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.5602908098, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.4397091902}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.02494463999999996, b=1.0, 0.0=0.0, initial=0.9744, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9744, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.025599999999999956}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.006674841600000001, b=1.0, 0.0=0.0, initial=0.00672, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.00672, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.99328}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.24772255750470473, b=1.0, 0.0=0.0, initial=0.45227744249, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.45227744249, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.54772255751}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.008034389999999995, b=1.0, 0.0=0.0, initial=0.9919, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9919, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.008099999999999996}. output: true
input: {lowerBound=0.0, (fa * fb)=-3.1034117592916425E-4, b=1.0, 0.0=0.0, initial=3.104375474E-4, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-3.104375474E-4, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.9996895624526}. output: true
input: {lowerBound=0.0, (fa * fb)=-5.852063438206774E-4, b=1.0, 0.0=0.0, initial=5.855492117E-4, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-5.855492117E-4, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.9994144507883}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.228096, b=1.0, 0.0=0.0, initial=0.648, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.648, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.352}. output: true
input: {lowerBound=4.9E-324, (fa * fb)=-0.001970490465640596, b=6.0, 0.0=0.0, initial=4.0, a=2.0, maximumIterations=2147483647, numIterations=2, fa=-0.00601184312384619, (fa * fb) >= 0.0=false, function!=null=true, upperBound=8.0, fb=0.3277681112177687}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.11617735487252497, b=1.0, 0.0=0.0, initial=0.1341822241505, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.1341822241505, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.8658177758495}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.23245553203464966, b=1.0, 0.0=0.0, initial=0.36754446797, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.36754446797, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.63245553203}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.16287630320535443, b=1.0, 0.0=0.0, initial=0.2048327647, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.2048327647, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.7951672353}. output: true
input: {lowerBound=2.1, (fa * fb)=-8.156785682311762E-5, b=6.5, 0.0=0.0, initial=3.5, a=2.1, maximumIterations=2147483647, numIterations=3, fa=-0.499, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=1.6346263892408341E-4}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.04726193686312596, b=1.0, 0.0=0.0, initial=0.9502644369, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9502644369, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.049735563100000046}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.002720558016, b=1.0, 0.0=0.0, initial=0.002728, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.002728, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.997272}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.029832591599999996, b=1.0, 0.0=0.0, initial=0.03078, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.03078, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.96922}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-0.01810161439704148, b=4.0, 0.0=0.0, initial=0.0, a=-4.0, maximumIterations=2147483647, numIterations=4, fa=-0.022020869622630723, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.8220208696226308}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.095819233395497, b=1.0, 0.0=0.0, initial=0.10734141216, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.10734141216, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.89265858784}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-0.01810161439704148, b=4.0, 0.0=0.0, initial=0.0, a=-4.0, maximumIterations=2147483647, numIterations=4, fa=-0.8220208696226308, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.022020869622630723}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.15234375, b=1.0, 0.0=0.0, initial=0.8125, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.8125, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.1875}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.24589193137279464, b=1.0, 0.0=0.0, initial=0.4359057832, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.4359057832, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.5640942168}. output: true
input: {lowerBound=0.0, (fa * fb)=-2.8510287117193898E-5, b=1.0, 0.0=0.0, initial=0.9999714889, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9999714889, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=2.851110000001711E-5}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.0025022831322197452, b=1.0, 0.0=0.0, initial=0.0025085760862, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.0025085760862, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.9974914239138}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.09442719099984952, b=1.0, 0.0=0.0, initial=0.894427191, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.894427191, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.10557280899999999}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.18245198999999998, b=1.0, 0.0=0.0, initial=0.7599, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.7599, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.24009999999999998}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.1633708902583817, b=1.0, 0.0=0.0, initial=0.7943282347, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.7943282347, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.20567176529999998}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.015869910099817898, b=1.0, 0.0=0.0, initial=0.9838699101, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9838699101, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.016130089899999978}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.08999999999999998, b=1.0, 0.0=0.0, initial=0.9, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.09999999999999998}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.24636501825366022, b=1.0, 0.0=0.0, initial=0.4397091902, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.4397091902, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.5602908098}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.13666002655701928, b=1.0, 0.0=0.0, initial=0.8366600265, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.8366600265, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.16333997349999996}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.0018656338002777683, b=9.5, 0.0=0.0, initial=1.5, a=0.0, maximumIterations=2147483647, numIterations=8, fa=-0.99, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.00188447858613916}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.23396608845654315, b=1.0, 0.0=0.0, initial=0.3733749174, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.3733749174, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.6266250825999999}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.00990000000000001, b=1.0, 0.0=0.0, initial=0.99, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.99, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.010000000000000009}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-5.493427472895902E-5, b=32.0, 0.0=0.0, initial=0.0, a=-32.0, maximumIterations=2147483647, numIterations=32, fa=-0.9800560521764107, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=5.605217641069249E-5}. output: true
input: {lowerBound=1.0E-323, (fa * fb)=-1.8975044142849484E-4, b=21.0, 0.0=0.0, initial=5.0, a=1.0E-323, maximumIterations=2147483647, numIterations=16, fa=-0.999, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=1.8994038181030515E-4}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.09581923342690972, b=1.0, 0.0=0.0, initial=0.8926585878, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.8926585878, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.10734141220000004}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.19369820159999998, b=1.0, 0.0=0.0, initial=0.26272, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.26272, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.7372799999999999}. output: true
input: {lowerBound=0.0, (fa * fb)=-9.999000000000001E-5, b=1.0, 0.0=0.0, initial=1.0E-4, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-1.0E-4, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.9999}. output: true
input: {lowerBound=2.1, (fa * fb)=-0.016321788712934108, b=4.5, 0.0=0.0, initial=3.5, a=2.5, maximumIterations=2147483647, numIterations=1, fa=-0.28754848109799236, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.05676186725316723}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.006052983023034818, b=1.0, 0.0=0.0, initial=0.993909928, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.993909928, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.006090072000000002}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.24968030723065393, b=1.0, 0.0=0.0, initial=0.4821200456, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.4821200456, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.5178799544}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.24605019422516072, b=2.000020000400008, 0.0=0.0, initial=1.000020000400008, a=2.000040000793568E-5, maximumIterations=2147483647, numIterations=1, fa=-0.4371525197415259, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.5628474802584741}. output: true
input: {lowerBound=4.9E-324, (fa * fb)=-0.002595719930173716, b=11.0, 0.0=0.0, initial=2.0, a=4.9E-324, maximumIterations=2147483647, numIterations=9, fa=-0.9933, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.0026132285615360074}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.21, b=1.0, 0.0=0.0, initial=0.3, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.3, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.7}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.18276132180135665, b=1.0, 0.0=0.0, initial=0.7593042194, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.7593042194, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.24069578059999996}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.1569844718998781, b=1.0, 0.0=0.0, initial=0.8049844719, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.8049844719, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.1950155281}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.032661388277681995, b=1.0, 0.0=0.0, initial=0.03380410585, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.03380410585, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.96619589415}. output: true
input: {lowerBound=2.1, (fa * fb)=-0.008274870766608022, b=5.5, 0.0=0.0, initial=3.5, a=2.1, maximumIterations=2147483647, numIterations=2, fa=-0.475, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.017420780561280047}. output: true
input: {lowerBound=1.0E-323, (fa * fb)=-0.07822435638856674, b=0.1, 0.0=0.0, initial=0.05, a=1.0E-323, maximumIterations=2147483647, numIterations=1, fa=-0.09999999999999994, (fa * fb) >= 0.0=false, function!=null=true, upperBound=0.1, fb=0.782243563885668}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.24182784, b=1.0, 0.0=0.0, initial=0.5904, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.5904, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.40959999999999996}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.0, b=2.0, 0.0=0.0, initial=1.0, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.4772498680518209, (fa * fb) >= 0.0=true, function!=null=true, upperBound=1.7976931348623157E308, fb=0.0}. output: false
input: {lowerBound=0.0, (fa * fb)=-0.01037089585132176, b=1.0, 0.0=0.0, initial=0.9895192582, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9895192582, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.010480741800000026}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.07064850205051161, b=1.0, 0.0=0.0, initial=0.9234991121, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9234991121, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.07650088789999998}. output: true
input: {lowerBound=0.0, (fa * fb)=-5.85206332134359E-4, b=1.0, 0.0=0.0, initial=0.9994144508, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9994144508, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=5.855491999999796E-4}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.23409903369992627, b=1.0, 0.0=0.0, initial=0.6260990337, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.6260990337, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.3739009663}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.1875, b=1.0, 0.0=0.0, initial=0.75, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.75, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.25}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.14619219164363598, b=1.0, 0.0=0.0, initial=0.177807808356, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.177807808356, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.822192191644}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.2080431872573944, b=1.0, 0.0=0.0, initial=0.7048336221, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.7048336221, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.2951663779}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.14535108943797934, b=1.0, 0.0=0.0, initial=0.17650516146, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.17650516146, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.82349483854}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.0384, b=1.0, 0.0=0.0, initial=0.04, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.04, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.96}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.2492036316, b=1.0, 0.0=0.0, initial=0.52822, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.52822, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.47178}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-5.4934274728998116E-5, b=32.0, 0.0=0.0, initial=0.0, a=-32.0, maximumIterations=2147483647, numIterations=32, fa=-5.605217641073239E-5, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.9800560521764107}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.11015092670400002, b=1.0, 0.0=0.0, initial=0.873964, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.873964, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.12603600000000004}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.015522751584919139, b=1.0, 0.0=0.0, initial=0.01577149153, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.01577149153, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.98422850847}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.2477225575056592, b=1.0, 0.0=0.0, initial=0.5477225575, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.5477225575, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.4522774425}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.24, b=1.0, 0.0=0.0, initial=0.6, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.6, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.4}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.021580268755690787, b=1.0, 0.0=0.0, initial=0.02206723146, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.02206723146, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.97793276854}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.04352422515042982, b=3.5, 0.0=0.0, initial=1.5, a=0.0, maximumIterations=2147483647, numIterations=2, fa=-0.05, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.8704845030085964}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-0.03267686723226694, b=3.0, 0.0=0.0, initial=0.0, a=-3.0, maximumIterations=2147483647, numIterations=3, fa=-0.9349503760512686, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.03495037605126872}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.032232177663999995, b=1.0, 0.0=0.0, initial=0.033344, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.033344, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.966656}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.23284165123279368, b=1.0, 0.0=0.0, initial=0.6309898804, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.6309898804, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.36901011959999996}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.2071067811851175, b=1.0, 0.0=0.0, initial=0.29289321881, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.29289321881, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.70710678119}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.0010875342896325857, b=1.0, 0.0=0.0, initial=0.9989112804, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9989112804, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.0010887196000000099}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.07064850204204165, b=1.0, 0.0=0.0, initial=0.07650088789, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.07650088789, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.92349911211}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.031733364957671914, b=1.0, 0.0=0.0, initial=0.9671901487, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9671901487, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.032809851300000026}. output: true
input: {lowerBound=1.0E-323, (fa * fb)=-0.02143108909714164, b=0.1, 0.0=0.0, initial=0.05, a=1.0E-323, maximumIterations=2147483647, numIterations=1, fa=-0.024999999999999932, (fa * fb) >= 0.0=false, function!=null=true, upperBound=0.1, fb=0.8572435638856679}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-0.03267686723226694, b=3.0, 0.0=0.0, initial=0.0, a=-3.0, maximumIterations=2147483647, numIterations=3, fa=-0.03495037605126872, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.9349503760512686}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.2499, b=1.0, 0.0=0.0, initial=0.49, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.49, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.51}. output: true
input: {lowerBound=0.0, (fa * fb)=-4.5978840000001595E-4, b=1.0, 0.0=0.0, initial=0.99954, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.99954, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=4.6000000000001595E-4}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.12656025885769398, b=1.0, 0.0=0.0, initial=0.8513399225, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.8513399225, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.1486600775}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.09000000000000001, b=1.0, 0.0=0.0, initial=0.1, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.1, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.9}. output: true
input: {lowerBound=0.0, (fa * fb)=-8.74816775450824E-5, b=21.5, 0.0=0.0, initial=1.5, a=0.0, maximumIterations=2147483647, numIterations=20, fa=-0.999, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=8.756924679187428E-5}. output: true
input: {lowerBound=0.0, (fa * fb)=-4.773859847715045E-4, b=1.0, 0.0=0.0, initial=0.9995223859, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9995223859, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=4.7761410000002336E-4}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.001087534284643463, b=1.0, 0.0=0.0, initial=0.001088719595, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.001088719595, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.998911280405}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.06248242827256096, b=1.0, 0.0=0.0, initial=0.9330329915, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9330329915, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.06696700850000004}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-0.00124380970929521, b=5.0, 0.0=0.0, initial=0.0, a=-5.0, maximumIterations=2147483647, numIterations=5, fa=-0.9912547830593628, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.001254783059362774}. output: true
input: {lowerBound=0.0, (fa * fb)=-4.597884E-4, b=1.0, 0.0=0.0, initial=4.6E-4, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-4.6E-4, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.99954}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.14535108946385888, b=1.0, 0.0=0.0, initial=0.8234948385, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.8234948385, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.17650516149999995}. output: true
input: {lowerBound=1.0E-323, (fa * fb)=-0.003124366816803844, b=16.0, 0.0=0.0, initial=5.0, a=1.0E-323, maximumIterations=2147483647, numIterations=11, fa=-0.99, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.0031559260775796405}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.17459666924229805, b=1.0, 0.0=0.0, initial=0.22540333076, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.22540333076, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.77459666924}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.054312066975681264, b=1.0, 0.0=0.0, initial=0.9423662883, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9423662883, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.05763371169999998}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.24968030723065393, b=1.0, 0.0=0.0, initial=0.5178799544, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.5178799544, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.4821200456}. output: true
input: {lowerBound=4.9E-324, (fa * fb)=-2.9272052260416714E-4, b=27.0, 0.0=0.0, initial=8.0, a=4.9E-324, maximumIterations=2147483647, numIterations=19, fa=-0.999, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=2.9301353614030745E-4}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.11265309248378705, b=1.0, 0.0=0.0, initial=0.870603437, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.870603437, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.12939656300000002}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.03266138832430163, b=1.0, 0.0=0.0, initial=0.9661958941, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9661958941, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.03380410590000005}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.2304, b=1.0, 0.0=0.0, initial=0.36, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.36, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.64}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.10056506494169568, b=1.0, 0.0=0.0, initial=0.8865681506, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.8865681506, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.11343184939999995}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.04868329805097486, b=1.0, 0.0=0.0, initial=0.05131670195, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.05131670195, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.94868329805}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.24861647142831655, b=1.0, 0.0=0.0, initial=0.4628041861, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.4628041861, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.5371958138999999}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.1569844718998781, b=1.0, 0.0=0.0, initial=0.1950155281, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.1950155281, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.8049844719}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-0.004802856167501176, b=3.0, 0.0=0.0, initial=0.0, a=-3.0, maximumIterations=2147483647, numIterations=3, fa=-0.9550290159641406, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.005029015964140626}. output: true
input: {lowerBound=1.0E-323, (fa * fb)=-0.003615272405998258, b=3.5, 0.0=0.0, initial=2.5, a=1.5, maximumIterations=2147483647, numIterations=1, fa=-0.013069814544395514, (fa * fb) >= 0.0=false, function!=null=true, upperBound=5.0, fb=0.2766123722504179}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.11280384, b=1.0, 0.0=0.0, initial=0.1296, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.1296, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.8704000000000001}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.23245553204259697, b=1.0, 0.0=0.0, initial=0.632455532, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.632455532, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.36754446799999996}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.16000000000000003, b=1.0, 0.0=0.0, initial=0.2, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.2, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.8}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.12656025884364042, b=1.0, 0.0=0.0, initial=0.14866007748, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.14866007748, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.85133992252}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-7.678291184906923E-5, b=6.0, 0.0=0.0, initial=0.0, a=-6.0, maximumIterations=2147483647, numIterations=6, fa=-7.693085520299296E-5, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.998076930855203}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.15389999999999995, b=1.0, 0.0=0.0, initial=0.81, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.81, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.18999999999999995}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.07989032911688447, b=1.0, 0.0=0.0, initial=0.9124435366, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9124435366, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.0875564634}. output: true
input: {lowerBound=4.9E-324, (fa * fb)=-0.004893334503478224, b=5.0, 0.0=0.0, initial=4.0, a=3.0, maximumIterations=2147483647, numIterations=1, fa=-0.0343575456215499, (fa * fb) >= 0.0=false, function!=null=true, upperBound=8.0, fb=0.1424238668669337}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.006674841599999949, b=1.0, 0.0=0.0, initial=0.99328, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.99328, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.006719999999999948}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.008034389999999999, b=1.0, 0.0=0.0, initial=0.0081, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.0081, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.9919}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.011652728880361887, b=1.0, 0.0=0.0, initial=0.0117917748341, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.0117917748341, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.9882082251659}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.14619219167198888, b=1.0, 0.0=0.0, initial=0.8221921916, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.8221921916, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.1778078084}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.20804353850535443, b=1.0, 0.0=0.0, initial=0.2951672353, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.2951672353, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.7048327647}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.05564929336455457, b=2.0, 0.0=0.0, initial=1.0, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.4959706533253018, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.11220279464409116}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.04731976505434912, b=1.0, 0.0=0.0, initial=0.04979978349, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.04979978349, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.95020021651}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-0.04162817492109664, b=2.0, 0.0=0.0, initial=0.0, a=-2.0, maximumIterations=2147483647, numIterations=2, fa=-0.04903026058507085, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.8490302605850709}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.04868329800610657, b=1.0, 0.0=0.0, initial=0.9486832981, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9486832981, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.05131670190000004}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-0.009551867232266921, b=3.0, 0.0=0.0, initial=0.0, a=-3.0, maximumIterations=2147483647, numIterations=3, fa=-0.9599503760512687, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.009950376051268695}. output: true
input: {lowerBound=4.9E-324, (fa * fb)=-6.776164470815789E-7, b=5.0, 0.0=0.0, initial=4.0, a=3.0, maximumIterations=2147483647, numIterations=1, fa=-0.2705254003710749, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=2.504816354220729E-6}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.015869910099817915, b=1.0, 0.0=0.0, initial=0.0161300899, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.0161300899, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.9838699101}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.003867462906443595, b=1.0, 0.0=0.0, initial=0.996117463, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.996117463, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.0038825369999999637}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.16287081590101787, b=1.0, 0.0=0.0, initial=0.7951765304, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.7951765304, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.20482346959999997}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.03640903051435961, b=1.0, 0.0=0.0, initial=0.037840969486, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.037840969486, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.962159030514}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-5.349273117552778E-4, b=13.0, 0.0=0.0, initial=0.0, a=-13.0, maximumIterations=2147483647, numIterations=13, fa=-5.627480278026127E-4, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.9505627480278026}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-0.009551867232266939, b=3.0, 0.0=0.0, initial=0.0, a=-3.0, maximumIterations=2147483647, numIterations=3, fa=-0.009950376051268714, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.9599503760512687}. output: true
input: {lowerBound=0.0, (fa * fb)=-3.1034112855863184E-4, b=1.0, 0.0=0.0, initial=0.9996895625, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9996895625, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=3.104375000000381E-4}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.06551600308100075, b=1.0, 0.0=0.0, initial=0.9295160031, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9295160031, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.07048399689999996}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.15234375, b=1.0, 0.0=0.0, initial=0.1875, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.1875, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.8125}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-0.004764935486381743, b=4.0, 0.0=0.0, initial=0.0, a=-4.0, maximumIterations=2147483647, numIterations=4, fa=-0.004838292259584275, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.9848382922595843}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.11617735490874095, b=1.0, 0.0=0.0, initial=0.8658177758, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.8658177758, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.13418222420000003}. output: true
input: {lowerBound=2.1, (fa * fb)=-0.0011861824750272166, b=5.5, 0.0=0.0, initial=3.5, a=2.1, maximumIterations=2147483647, numIterations=2, fa=-0.49, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.0024207805612800337}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.019902645079716768, b=1.0, 0.0=0.0, initial=0.0203153588864, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.0203153588864, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.9796846411136}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.24828026072239004, b=1.0, 0.0=0.0, initial=0.4585302607, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.4585302607, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.5414697393}. output: true
input: {lowerBound=1.0E-323, (fa * fb)=-0.02228827846813918, b=10.0, 0.0=0.0, initial=5.0, a=1.0E-323, maximumIterations=2147483647, numIterations=5, fa=-0.9, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.024764753853487975}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.093184, b=1.0, 0.0=0.0, initial=0.104, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.104, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.896}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.002986958379467622, b=1.0, 0.0=0.0, initial=0.997004066, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.997004066, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.002995933999999978}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.24721359549996239, b=1.0, 0.0=0.0, initial=0.5527864045, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.5527864045, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.44721359549999995}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.021710890780941693, b=1.0, 0.0=0.0, initial=0.02220390414, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.02220390414, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.97779609586}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-0.004372843843857357, b=7.0, 0.0=0.0, initial=0.0, a=-7.0, maximumIterations=2147483647, numIterations=7, fa=-0.9048327646991334, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.004832764699133518}. output: true
input: {lowerBound=1.0E-323, (fa * fb)=-0.014017401227943828, b=2.1, 0.0=0.0, initial=0.1, a=1.0E-323, maximumIterations=2147483647, numIterations=2, fa=-0.9749999999999999, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.014376821772250081}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.15999999999999998, b=1.0, 0.0=0.0, initial=0.8, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.8, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.19999999999999996}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.21622776601800014, b=1.0, 0.0=0.0, initial=0.68377223398, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.68377223398, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.31622776602}. output: true
input: {lowerBound=1.0E-323, (fa * fb)=-0.00847802607351737, b=4.5, 0.0=0.0, initial=2.5, a=0.5, maximumIterations=2147483647, numIterations=2, fa=-0.017123293232629594, (fa * fb) >= 0.0=false, function!=null=true, upperBound=5.0, fb=0.4951165618867005}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.20804353850535443, b=1.0, 0.0=0.0, initial=0.7048327647, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.7048327647, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.2951672353}. output: true
input: {lowerBound=1.0E-323, (fa * fb)=-0.001083127043706306, b=4.5, 0.0=0.0, initial=2.5, a=0.5, maximumIterations=2147483647, numIterations=2, fa=-0.0021232932326295927, (fa * fb) >= 0.0=false, function!=null=true, upperBound=5.0, fb=0.5101165618867005}. output: true
input: {lowerBound=1.0E-323, (fa * fb)=-0.004988416792429802, b=3.1, 0.0=0.0, initial=0.1, a=1.0E-323, maximumIterations=2147483647, numIterations=3, fa=-0.9899999999999999, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.005038804840838185}. output: true
input: {lowerBound=1.0E-323, (fa * fb)=-0.02291641676479785, b=1.1, 0.0=0.0, initial=0.1, a=1.0E-323, maximumIterations=2147483647, numIterations=1, fa=-0.9499999999999998, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.02412254396294511}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.19267545263196192, b=1.0, 0.0=0.0, initial=0.260574547368, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.260574547368, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.739425452632}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-7.678291184907086E-5, b=6.0, 0.0=0.0, initial=0.0, a=-6.0, maximumIterations=2147483647, numIterations=6, fa=-0.998076930855203, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=7.693085520299459E-5}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.228096, b=1.0, 0.0=0.0, initial=0.352, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.352, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.648}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.00159744, b=1.0, 0.0=0.0, initial=0.0016, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.0016, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.9984}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-0.004764935486381787, b=4.0, 0.0=0.0, initial=0.0, a=-4.0, maximumIterations=2147483647, numIterations=4, fa=-0.9848382922595843, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.00483829225958432}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.0042673167294825926, b=6.5, 0.0=0.0, initial=1.5, a=0.0, maximumIterations=2147483647, numIterations=5, fa=-0.975, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.004376735107161633}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.169344, b=1.0, 0.0=0.0, initial=0.216, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.216, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.784}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.19267545264728514, b=1.0, 0.0=0.0, initial=0.7394254526, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.7394254526, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.26057454739999997}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.12889480816666768, b=1.0, 0.0=0.0, initial=0.1519982876, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.1519982876, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.8480017124}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.11015092670400001, b=1.0, 0.0=0.0, initial=0.126036, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.126036, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.873964}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.03173336491207413, b=1.0, 0.0=0.0, initial=0.0328098512512, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.0328098512512, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.9671901487488}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.0038674629530786723, b=1.0, 0.0=0.0, initial=0.003882537047, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.003882537047, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.996117462953}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.23409903369992627, b=1.0, 0.0=0.0, initial=0.3739009663, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.3739009663, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.6260990337}. output: true
input: {lowerBound=1.0E-323, (fa * fb)=-0.014451608519070474, b=12.0, 0.0=0.0, initial=5.0, a=1.0E-323, maximumIterations=2147483647, numIterations=7, fa=-0.95, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.015212219493758394}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.1875, b=1.0, 0.0=0.0, initial=0.25, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.25, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.75}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.06551600308959112, b=1.0, 0.0=0.0, initial=0.07048399691, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.07048399691, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.92951600309}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.21000000000000002, b=1.0, 0.0=0.0, initial=0.7, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.7, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.30000000000000004}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.10263347648332599, b=1.0, 0.0=0.0, initial=0.116116523517, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.116116523517, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.883883476483}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.010370895841531346, b=1.0, 0.0=0.0, initial=0.01048074179, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.01048074179, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.98951925821}. output: true
input: {lowerBound=1.0E-323, (fa * fb)=-5.831198130044919E-4, b=5.0, 0.0=0.0, initial=2.5, a=1.0E-323, maximumIterations=2147483647, numIterations=3, fa=-0.001, (fa * fb) >= 0.0=false, function!=null=true, upperBound=5.0, fb=0.5831198130044919}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.027216, b=1.0, 0.0=0.0, initial=0.028, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.028, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.972}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.2328416512327937, b=1.0, 0.0=0.0, initial=0.3690101196, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.3690101196, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.6309898804}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.0748242684, b=1.0, 0.0=0.0, initial=0.08146, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.08146, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.91854}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.1539, b=1.0, 0.0=0.0, initial=0.19, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.19, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.81}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.24721359549996236, b=1.0, 0.0=0.0, initial=0.4472135955, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.4472135955, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.5527864044999999}. output: true
input: {lowerBound=4.9E-324, (fa * fb)=-0.0037395448758017727, b=7.0, 0.0=0.0, initial=4.0, a=1.0, maximumIterations=2147483647, numIterations=3, fa=-0.008248377443709175, (fa * fb) >= 0.0=false, function!=null=true, upperBound=8.0, fb=0.45336733209921515}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.1344, b=1.0, 0.0=0.0, initial=0.16, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.16, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.84}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-2.162306163294134E-6, b=319.0, 0.0=0.0, initial=0.0, a=-319.0, maximumIterations=2147483647, numIterations=319, fa=-2.166634738464974E-6, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.9980021666347385}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.2304, b=1.0, 0.0=0.0, initial=0.64, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.64, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.36}. output: true
input: {lowerBound=0.0, (fa * fb)=-3.2171179190857006E-6, b=1.0, 0.0=0.0, initial=3.217128269E-6, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-3.217128269E-6, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.999996782871731}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.08189999999999997, b=1.0, 0.0=0.0, initial=0.91, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.91, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.08999999999999997}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.24, b=1.0, 0.0=0.0, initial=0.4, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.4, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.6}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.0025379007738134548, b=1.0, 0.0=0.0, initial=0.002544374616, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.002544374616, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.997455625384}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.20804318727787777, b=1.0, 0.0=0.0, initial=0.29516637795, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.29516637795, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.70483362205}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.13440000000000002, b=1.0, 0.0=0.0, initial=0.84, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.84, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.16000000000000003}. output: true
input: {lowerBound=4.9E-324, (fa * fb)=-0.003679175854663835, b=18.0, 0.0=0.0, initial=8.0, a=4.9E-324, maximumIterations=2147483647, numIterations=10, fa=-0.975, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.003773513697091113}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-0.06250000000000017, b=1.0, 0.0=0.0, initial=0.0, a=-1.0, maximumIterations=2147483647, numIterations=1, fa=-0.25000000000000033, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.25000000000000033}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.22563279, b=1.0, 0.0=0.0, initial=0.6561, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.6561, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.3439}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.0740641166276143, b=1.0, 0.0=0.0, initial=0.9194471163, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9194471163, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.08055288370000002}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.09442719099984952, b=1.0, 0.0=0.0, initial=0.105572809, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.105572809, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.894427191}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.07724285804787785, b=1.0, 0.0=0.0, initial=0.9156406404, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9156406404, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.08435935959999996}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.169344, b=1.0, 0.0=0.0, initial=0.784, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.784, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.21599999999999997}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.027216000000000025, b=1.0, 0.0=0.0, initial=0.972, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.972, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.028000000000000025}. output: true
input: {lowerBound=0.0, (fa * fb)=-9.194845030085964E-4, b=3.5, 0.0=0.0, initial=1.5, a=0.0, maximumIterations=2147483647, numIterations=2, fa=-0.001, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.9194845030085964}. output: true
input: {lowerBound=0.0, (fa * fb)=-3.2170896502201566E-6, b=1.0, 0.0=0.0, initial=0.9999967829, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9999967829, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=3.2170999999525662E-6}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.10056506496488982, b=1.0, 0.0=0.0, initial=0.11343184943, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.11343184943, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.88656815057}. output: true
input: {lowerBound=1.0E-323, (fa * fb)=-0.04161217819428334, b=0.1, 0.0=0.0, initial=0.05, a=1.0E-323, maximumIterations=2147483647, numIterations=1, fa=-0.04999999999999993, (fa * fb) >= 0.0=false, function!=null=true, upperBound=0.1, fb=0.8322435638856679}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.011652728847066127, b=1.0, 0.0=0.0, initial=0.9882082252, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9882082252, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.011791774800000043}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-5.349273117553141E-4, b=13.0, 0.0=0.0, initial=0.0, a=-13.0, maximumIterations=2147483647, numIterations=13, fa=-0.9505627480278026, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=5.627480278026509E-4}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.04873298840518535, b=1.0, 0.0=0.0, initial=0.0513720788952, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.0513720788952, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.9486279211048}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.054312066957986634, b=1.0, 0.0=0.0, initial=0.05763371168, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.05763371168, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.94236628832}. output: true
input: {lowerBound=1.0E-323, (fa * fb)=-0.0015807010990253527, b=13.0, 0.0=0.0, initial=5.0, a=1.0E-323, maximumIterations=2147483647, numIterations=8, fa=-0.975, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.0016212318964362593}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.0027205580159999528, b=1.0, 0.0=0.0, initial=0.997272, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.997272, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.0027279999999999527}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.0029869583605814896, b=1.0, 0.0=0.0, initial=0.002995933981, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.002995933981, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.997004066019}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.18245199, b=1.0, 0.0=0.0, initial=0.2401, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.2401, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.7599}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.07406411660882305, b=1.0, 0.0=0.0, initial=0.0805528836776, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.0805528836776, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.9194471163224001}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.07482426839999998, b=1.0, 0.0=0.0, initial=0.91854, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.91854, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.08145999999999998}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.02238711257521491, b=3.5, 0.0=0.0, initial=1.5, a=0.0, maximumIterations=2147483647, numIterations=2, fa=-0.025, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.8954845030085964}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.2412362493558882, b=1.0, 0.0=0.0, initial=0.4063850939, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.4063850939, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.5936149061}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-0.008274870766608012, b=2.1, 0.0=0.0, initial=0.7000000000000002, a=-1.2999999999999998, maximumIterations=2147483647, numIterations=2, fa=-0.017420780561280026, (fa * fb) >= 0.0=false, function!=null=true, upperBound=2.1, fb=0.475}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.024944640000000004, b=1.0, 0.0=0.0, initial=0.0256, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.0256, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.9744}. output: true
input: {lowerBound=0.0, (fa * fb)=-4.773859424119828E-4, b=1.0, 0.0=0.0, initial=4.776140576E-4, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-4.776140576E-4, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.9995223859424}. output: true
input: {lowerBound=4.9E-324, (fa * fb)=-5.655298796332906E-4, b=8.0, 0.0=0.0, initial=4.0, a=4.9E-324, maximumIterations=2147483647, numIterations=4, fa=-0.001, (fa * fb) >= 0.0=false, function!=null=true, upperBound=8.0, fb=0.5655298796332906}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.08204845030085965, b=3.5, 0.0=0.0, initial=1.5, a=0.0, maximumIterations=2147483647, numIterations=2, fa=-0.1, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.8204845030085964}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.24861647142831655, b=1.0, 0.0=0.0, initial=0.5371958139, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.5371958139, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.46280418609999996}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.007104386348925316, b=1.0, 0.0=0.0, initial=0.9928444112, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9928444112, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.007155588800000001}. output: true
input: {lowerBound=4.9E-324, (fa * fb)=-0.002824044661999664, b=21.0, 0.0=0.0, initial=8.0, a=4.9E-324, maximumIterations=2147483647, numIterations=13, fa=-0.99, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.0028525703656562262}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.20581259673600003, b=1.0, 0.0=0.0, initial=0.710208, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.710208, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.28979200000000005}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.008443736657701822, b=1.0, 0.0=0.0, initial=0.9914837366, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9914837366, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.008516263400000001}. output: true
input: {lowerBound=4.9E-324, (fa * fb)=-0.007238893607900232, b=16.0, 0.0=0.0, initial=8.0, a=4.9E-324, maximumIterations=2147483647, numIterations=8, fa=-0.95, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.007619888008316034}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.17459666926426576, b=1.0, 0.0=0.0, initial=0.7745966692, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.7745966692, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.22540333079999997}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.0794640384, b=1.0, 0.0=0.0, initial=0.91296, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.91296, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.08704}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.008443736629195763, b=1.0, 0.0=0.0, initial=0.008516263371, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.008516263371, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.991483736629}. output: true
input: {lowerBound=0.0, (fa * fb)=-5.591757558500842E-5, b=1.0, 0.0=0.0, initial=5.592070271E-5, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-5.592070271E-5, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.99994407929729}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.2234179584, b=1.0, 0.0=0.0, initial=0.66304, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.66304, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.33696000000000004}. output: true
input: {lowerBound=1.0E-323, (fa * fb)=-0.00872243563885662, b=0.1, 0.0=0.0, initial=0.05, a=1.0E-323, maximumIterations=2147483647, numIterations=1, fa=-0.00999999999999993, (fa * fb) >= 0.0=false, function!=null=true, upperBound=0.1, fb=0.8722435638856679}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-0.10137299837679904, b=1.0, 0.0=0.0, initial=0.0, a=-1.0, maximumIterations=2147483647, numIterations=1, fa=-0.31839126617543867, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.31839126617543867}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.0794640384, b=1.0, 0.0=0.0, initial=0.08704, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.08704, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.91296}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.029832591600000027, b=1.0, 0.0=0.0, initial=0.96922, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.96922, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.03078000000000003}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.24589193137279458, b=1.0, 0.0=0.0, initial=0.5640942168, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.5640942168, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.43590578319999995}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.032232177664000036, b=1.0, 0.0=0.0, initial=0.966656, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.966656, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.03334400000000004}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.2492036316, b=1.0, 0.0=0.0, initial=0.47178, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.47178, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.52822}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.23396608845654315, b=1.0, 0.0=0.0, initial=0.6266250826, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.6266250826, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.37337491739999995}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.007104386326254472, b=1.0, 0.0=0.0, initial=0.007155588777, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.007155588777, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.992844411223}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.006052983049310825, b=1.0, 0.0=0.0, initial=0.0060900720266, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.0060900720266, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.9939099279734}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.01552275155586544, b=1.0, 0.0=0.0, initial=0.9842285085, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9842285085, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.015771491500000012}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.24828026072438059, b=1.0, 0.0=0.0, initial=0.541469739276, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.541469739276, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.45853026072400005}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.07724285806450353, b=1.0, 0.0=0.0, initial=0.08435935962, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.08435935962, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.91564064038}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.19369820159999998, b=1.0, 0.0=0.0, initial=0.73728, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.73728, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.26271999999999995}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.05859375, b=1.0, 0.0=0.0, initial=0.0625, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.0625, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.9375}. output: true
input: {lowerBound=4.9E-324, (fa * fb)=-0.0073331216190993895, b=16.0, 0.0=0.0, initial=8.0, a=4.9E-324, maximumIterations=2147483647, numIterations=8, fa=-0.9499, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.007719888008316023}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.04873298840949213, b=1.0, 0.0=0.0, initial=0.9486279211, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9486279211, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.05137207889999995}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.2499, b=1.0, 0.0=0.0, initial=0.51, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.51, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.49}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.2412362493558882, b=1.0, 0.0=0.0, initial=0.5936149061, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.5936149061, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.4063850939}. output: true
input: {lowerBound=0.0, (fa * fb)=-9.998999999998899E-5, b=1.0, 0.0=0.0, initial=0.9999, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9999, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=9.999999999998899E-5}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.0819, b=1.0, 0.0=0.0, initial=0.09, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.09, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.91}. output: true
input: {lowerBound=2.1, (fa * fb)=-0.0022824580206928747, b=4.5, 0.0=0.0, initial=3.5, a=2.5, maximumIterations=2147483647, numIterations=1, fa=-0.3375484810979923, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.006761867253167297}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.021580268793925415, b=1.0, 0.0=0.0, initial=0.9779327685, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9779327685, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.022067231500000006}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.01843605270773675, b=3.5, 0.0=0.0, initial=1.5, a=0.0, maximumIterations=2147483647, numIterations=2, fa=-0.9, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.02048450300859639}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.0025074385284574396, b=4.5, 0.0=0.0, initial=1.5, a=0.0, maximumIterations=2147483647, numIterations=3, fa=-0.95, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.0026394089773236207}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.0099, b=1.0, 0.0=0.0, initial=0.01, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.01, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.99}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.16337089024660859, b=1.0, 0.0=0.0, initial=0.20567176528, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.20567176528, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.79432823472}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-0.014503359032669829, b=3.0, 0.0=0.0, initial=0.0, a=-3.0, maximumIterations=2147483647, numIterations=3, fa=-0.9650289369340037, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.015028936934003756}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.07707200317679055, b=2.0, 0.0=0.0, initial=1.0, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.5724780279076003, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.1346287532789472}. output: true
input: {lowerBound=1.0E-323, (fa * fb)=-8.81243563885606E-4, b=0.1, 0.0=0.0, initial=0.05, a=1.0E-323, maximumIterations=2147483647, numIterations=1, fa=-9.999999999999298E-4, (fa * fb) >= 0.0=false, function!=null=true, upperBound=0.1, fb=0.8812435638856679}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.09318399999999999, b=1.0, 0.0=0.0, initial=0.896, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.896, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.10399999999999998}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.047319765063353156, b=1.0, 0.0=0.0, initial=0.9502002165, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9502002165, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.04979978350000003}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.12889480816666768, b=1.0, 0.0=0.0, initial=0.8480017124, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.8480017124, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.1519982876}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-2.1623061633387137E-6, b=319.0, 0.0=0.0, initial=0.0, a=-319.0, maximumIterations=2147483647, numIterations=319, fa=-0.9980021666347385, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=2.166634738509643E-6}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.10263347647027396, b=1.0, 0.0=0.0, initial=0.8838834765, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.8838834765, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.11611652350000001}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-0.041628174921096654, b=2.0, 0.0=0.0, initial=0.0, a=-2.0, maximumIterations=2147483647, numIterations=2, fa=-0.8490302605850709, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.04903026058507087}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.03381118002481032, b=1.0, 0.0=0.0, initial=0.03503890488, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.03503890488, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.9649610951200001}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.09097572053915039, b=1.0, 0.0=0.0, initial=0.8987784842, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.8987784842, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.10122151580000005}. output: true
input: {lowerBound=1.0E-323, (fa * fb)=-3.2734366808958524E-4, b=6.1, 0.0=0.0, initial=0.1, a=1.0E-323, maximumIterations=2147483647, numIterations=6, fa=-0.9989999999999999, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=3.276713394290143E-4}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-0.002282458020692842, b=1.7000000000000002, 0.0=0.0, initial=0.7000000000000002, a=-0.2999999999999998, maximumIterations=2147483647, numIterations=1, fa=-0.0067618672531672, (fa * fb) >= 0.0=false, function!=null=true, upperBound=2.1, fb=0.33754848109799235}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.18276132177542626, b=1.0, 0.0=0.0, initial=0.24069578055, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.24069578055, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.75930421945}. output: true
input: {lowerBound=1.0E-323, (fa * fb)=-0.06671028956665054, b=1.1, 0.0=0.0, initial=0.1, a=1.0E-323, maximumIterations=2147483647, numIterations=1, fa=-0.8999999999999999, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.07412254396294504}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.05859375, b=1.0, 0.0=0.0, initial=0.9375, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9375, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.0625}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.06248242823791829, b=1.0, 0.0=0.0, initial=0.06696700846, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.06696700846, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.93303299154}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.019902645092764213, b=1.0, 0.0=0.0, initial=0.9796846411, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.9796846411, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.020315358900000025}. output: true
input: {lowerBound=-1.7976931348623157E308, (fa * fb)=-0.004372843843857313, b=7.0, 0.0=0.0, initial=0.0, a=-7.0, maximumIterations=2147483647, numIterations=7, fa=-0.00483276469913347, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.7976931348623157E308, fb=0.9048327646991334}. output: true
input: {lowerBound=0.0, (fa * fb)=-0.07989032914987994, b=1.0, 0.0=0.0, initial=0.08755646344, a=0.0, maximumIterations=2147483647, numIterations=1, fa=-0.08755646344, (fa * fb) >= 0.0=false, function!=null=true, upperBound=1.0, fb=0.91244353656}. output: true
14:18:20.011 [main] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Operators:
14:18:20.356 [main] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - SMTLib Script:
(set-option :produce-models true)
(set-logic AUFNIRA)
(declare-fun L@out () Int)
(define-fun Acyclicity () Bool true)
(define-fun Consistency () Bool true)
(define-fun LineBound ((L@out Int)) Bool (or (= 5 L@out) (= 14 L@out)))
(define-fun WellFormedProgram ((L@out Int)) Bool (and Acyclicity Consistency (LineBound L@out)))
(define-fun Connectivity ((L@out Int)(in<0> Real)(in<1> Real)(in<2> Real)(in<3> Real)(in<4> Real)(in<5> Bool)(in<6> Real)(in<7> Real)(in<8> Real)(in<9> Real)(in<10> Real)(in<11> Real)(in<12> Real)(in<13> Real)(in<14> Bool)(in<15> Real)(out Bool)) Bool (and (=> (= L@out 5) (= out in<5>)) (=> (= L@out 14) (= out in<14>))))
(define-fun Library () Bool true)
(define-fun Verification ((L@out Int)(in<0> Real)(in<1> Real)(in<2> Real)(in<3> Real)(in<4> Real)(in<5> Bool)(in<6> Real)(in<7> Real)(in<8> Real)(in<9> Real)(in<10> Real)(in<11> Real)(in<12> Real)(in<13> Real)(in<14> Bool)(in<15> Real)(out Bool)) Bool (and (Connectivity L@out in<0> in<1> in<2> in<3> in<4> in<5> in<6> in<7> in<8> in<9> in<10> in<11> in<12> in<13> in<14> in<15> out) Library))
(assert (Verification L@out 0.0 (- 0.1366600265368197) 1.0 0.0 (- 0.16333997347) false 0.8366600265299999 1.0 0.0 (- 1.0) 0.0 0.16333997347 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.002502283145950502) 1.0 0.0 (- 0.9974914239) false 0.002508576099999993 1.0 0.0 (- 1.0) 0.0 0.9974914239 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.000055917572875356514) 1.0 0.0 (- 0.9999440793) false 0.00005592070000004501 1.0 0.0 (- 1.0) 0.0 0.9999440793 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.21622776601064925) 1.0 0.0 (- 0.316227766) false 0.683772234 1.0 0.0 (- 1.0) 0.0 0.316227766 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.0011861824750272123) 2.1 (- 1.3) (- 0.002420780561280025) false 0.49 1.0 0.0 (- 1.0) 0.0 0.7000000000000002 2.0 2147483647.0 true 2.1 true))
(assert (Verification L@out 0.0 (- 0.22563279) 1.0 0.0 (- 0.3439) false 0.6561 1.0 0.0 (- 1.0) 0.0 0.3439 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.16287630320535443) 1.0 0.0 (- 0.7951672353) false 0.2048327647 1.0 0.0 (- 1.0) 0.0 0.7951672353 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.16287081591872848) 1.0 0.0 (- 0.20482346963) false 0.79517653037 1.0 0.0 (- 1.0) 0.0 0.20482346963 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 (- 0.019802857789869146) 4.5 0.5 (- 0.042123293232629595) false 0.47011656188670053 1.0 0.0 (- 1.0) 0.0 2.5 2.0 2147483647.0 true 5.0 true))
(assert (Verification L@out 0.0 (- 0.021710890742717953) 1.0 0.0 (- 0.9777960959) false 0.02220390409999995 1.0 0.0 (- 1.0) 0.0 0.9777960959 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out (- 2.0) (- 0.7080734182735712) 1.0 (- 1.0) (- 0.8414709848078965) false 0.8414709848078965 1.0 0.0 (- 1.0) 0.0 0.0 1.0 2147483647.0 true 2.0 true))
(assert (Verification L@out 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000049 (- 0.01606488424283389) 14.0 2.0 (- 0.8810118431238462) false 0.01823458375527831 1.0 0.0 (- 1.0) 0.0 8.0 6.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.0015974400000000456) 1.0 0.0 (- 0.9984) false 0.0016000000000000458 1.0 0.0 (- 1.0) 0.0 0.9984 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.0163217887129341) 1.7 (- 0.2999999999999998) (- 0.0567618672531672) false 0.28754848109799236 1.0 0.0 (- 1.0) 0.0 0.7000000000000002 1.0 2147483647.0 true 2.1 true))
(assert (Verification L@out 0.0 (- 0.11280384000000003) 1.0 0.0 (- 0.8704) false 0.12960000000000005 1.0 0.0 (- 1.0) 0.0 0.8704 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.24182784000000002) 1.0 0.0 (- 0.4096) false 0.5904 1.0 0.0 (- 1.0) 0.0 0.4096 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.000028510335744403796) 1.0 0.0 (- 0.00002851114863) false 0.99997148885137 1.0 0.0 (- 1.0) 0.0 0.00002851114863 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.20581259673599997) 1.0 0.0 (- 0.289792) false 0.710208 1.0 0.0 (- 1.0) 0.0 0.289792 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@outfalse 0.5647298796332906 1.0 0.0 (- 1.0) 0.0 2.0 2.0 2147483647.0 true 4.0 true))
(assert (Verification L@out 0.0 (- 0.11265309249861116) 1.0 0.0 (- 0.12939656302) false 0.87060343698 1.0 0.0 (- 1.0) 0.0 0.12939656302 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.09097572053915035) 1.0 0.0 (- 0.1012215158) false 0.8987784842 1.0 0.0 (- 1.0) 0.0 0.1012215158 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.03840000000000003) 1.0 0.0 (- 0.96) false 0.040000000000000036 1.0 0.0 (- 1.0) 0.0 0.96 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.03640903052730011) 1.0 0.0 (- 0.9621590305) false 0.03784096950000004 1.0 0.0 (- 1.0) 0.0 0.9621590305 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000049 (- 0.00938939716798866) 6.0 2.0 (- 0.03101184312384619) false 0.30276811121776875 1.0 0.0 (- 1.0) 0.0 4.0 2.0 2147483647.0 true 8.0 true))
(assert (Verification L@out 0.0 (- 0.047261936881136495) 1.0 0.0 (- 0.04973556312) false 0.95026443688 1.0 0.0 (- 1.0) 0.0 0.04973556312 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.25) 1.0 0.0 (- 0.5) false 0.5 1.0 0.0 (- 1.0) 0.0 0.5 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.0338111800434087) 1.0 0.0 (- 0.9649610951) false 0.035038904899999945 1.0 0.0 (- 1.0) 0.0 0.9649610951 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.009104845030085964) 3.5 0.0 (- 0.01) false 0.9104845030085964 1.0 0.0 (- 1.0) 0.0 1.5 2.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.00008156785682314489) 2.1 (- 2.3) (- 0.00016346263892413806) false 0.499 1.0 0.0 (- 1.0) 0.0 0.7000000000000002 3.0 2147483647.0 true 2.1 true))
(assert (Verification L@out 0.0 (- 0.2234179584) 1.0 0.0 (- 0.33696) false 0.6630400000000001 1.0 0.0 (- 1.0) 0.0 0.33696 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.002537900757894885) 1.0 0.0 (- 0.9974556254) false 0.00254437460000001 1.0 0.0 (- 1.0) 0.0 0.9974556254 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.2071067811809753) 1.0 0.0 (- 0.7071067812) false 0.29289321879999997 1.0 0.0 (- 1.0) 0.0 0.7071067812 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.24636501825366022) 1.0 0.0 (- 0.5602908098) false 0.4397091902 1.0 0.0 (- 1.0) 0.0 0.5602908098 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.02494463999999996) 1.0 0.0 (- 0.9744) false 0.025599999999999956 1.0 0.0 (- 1.0) 0.0 0.9744 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.006674841600000001) 1.0 0.0 (- 0.00672) false 0.99328 1.0 0.0 (- 1.0) 0.0 0.00672 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.24772255750470473) 1.0 0.0 (- 0.45227744249) false 0.54772255751 1.0 0.0 (- 1.0) 0.0 0.45227744249 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.008034389999999995) 1.0 0.0 (- 0.9919) false 0.008099999999999996 1.0 0.0 (- 1.0) 0.0 0.9919 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.00031034117592916425) 1.0 0.0 (- 0.0003104375474) false 0.9996895624526 1.0 0.0 (- 1.0) 0.0 0.0003104375474 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.0005852063438206774) 1.0 0.0 (- 0.0005855492117) false 0.9994144507883 1.0 0.0 (- 1.0) 0.0 0.0005855492117 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.228096) 1.0 0.0 (- 0.648) false 0.352 1.0 0.0 (- 1.0) 0.0 0.648 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000049 (- 0.001970490465640596) 6.0 2.0 (- 0.00601184312384619) false 0.3277681112177687 1.0 0.0 (- 1.0) 0.0 4.0 2.0 2147483647.0 true 8.0 true))
(assert (Verification L@out 0.0 (- 0.11617735487252497) 1.0 0.0 (- 0.1341822241505) false 0.8658177758495 1.0 0.0 (- 1.0) 0.0 0.1341822241505 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.23245553203464966) 1.0 0.0 (- 0.36754446797) false 0.63245553203 1.0 0.0 (- 1.0) 0.0 0.36754446797 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.16287630320535443) 1.0 0.0 (- 0.2048327647) false 0.7951672353 1.0 0.0 (- 1.0) 0.0 0.2048327647 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 2.1 (- 0.00008156785682311762) 6.5 2.1 (- 0.499) false 0.00016346263892408341 1.0 0.0 (- 1.0) 0.0 3.5 3.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.04726193686312596) 1.0 0.0 (- 0.9502644369) false 0.049735563100000046 1.0 0.0 (- 1.0) 0.0 0.9502644369 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.002720558016) 1.0 0.0 (- 0.002728) false 0.997272 1.0 0.0 (- 1.0) 0.0 0.002728 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.029832591599999996) 1.0 0.0 (- 0.03078) false 0.96922 1.0 0.0 (- 1.0) 0.0 0.03078 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.01810161439704148) 4.0 (- 4.0) (- 0.022020869622630723) false 0.8220208696226308 1.0 0.0 (- 1.0) 0.0 0.0 4.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.095819233395497) 1.0 0.0 (- 0.10734141216) false 0.89265858784 1.0 0.0 (- 1.0) 0.0 0.10734141216 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.01810161439704148) 4.0 (- 4.0) (- 0.8220208696226308) false 0.022020869622630723 1.0 0.0 (- 1.0) 0.0 0.0 4.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.15234375) 1.0 0.0 (- 0.8125) false 0.1875 1.0 0.0 (- 1.0) 0.0 0.8125 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.24589193137279464) 1.0 0.0 (- 0.4359057832) false 0.5640942168 1.0 0.0 (- 1.0) 0.0 0.4359057832 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.000028510287117193898) 1.0 0.0 (- 0.9999714889) false 0.00002851110000001711 1.0 0.0 (- 1.0) 0.0 0.9999714889 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.0025022831322197452) 1.0 0.0 (- 0.0025085760862) false 0.9974914239138 1.0 0.0 (- 1.0) 0.0 0.0025085760862 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.09442719099984952) 1.0 0.0 (- 0.894427191) false 0.10557280899999999 1.0 0.0 (- 1.0) 0.0 0.894427191 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.18245198999999998) 1.0 0.0 (- 0.7599) false 0.24009999999999998 1.0 0.0 (- 1.0) 0.0 0.7599 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.1633708902583817) 1.0 0.0 (- 0.7943282347) false 0.20567176529999998 1.0 0.0 (- 1.0) 0.0 0.7943282347 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.015869910099817898) 1.0 0.0 (- 0.9838699101) false 0.016130089899999978 1.0 0.0 (- 1.0) 0.0 0.9838699101 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.08999999999999998) 1.0 0.0 (- 0.9) false 0.09999999999999998 1.0 0.0 (- 1.0) 0.0 0.9 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.24636501825366022) 1.0 0.0 (- 0.4397091902) false 0.5602908098 1.0 0.0 (- 1.0) 0.0 0.4397091902 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.13666002655701928) 1.0 0.0 (- 0.8366600265) false 0.16333997349999996 1.0 0.0 (- 1.0) 0.0 0.8366600265 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.0018656338002777683) 9.5 0.0 (- 0.99) false 0.00188447858613916 1.0 0.0 (- 1.0) 0.0 1.5 8.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.23396608845654315) 1.0 0.0 (- 0.3733749174) false 0.6266250825999999 1.0 0.0 (- 1.0) 0.0 0.3733749174 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.00990000000000001) 1.0 0.0 (- 0.99) false 0.010000000000000009 1.0 0.0 (- 1.0) 0.0 0.99 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.00005493427472895902) 32.0 (- 32.0) (- 0.9800560521764107) false 0.00005605217641069249 1.0 0.0 (- 1.0) 0.0 0.0 32.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@outfalse 0.00018994038181030515 1.0 0.0 (- 1.0) 0.0 5.0 16.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.09581923342690972) 1.0 0.0 (- 0.8926585878) false 0.10734141220000004 1.0 0.0 (- 1.0) 0.0 0.8926585878 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.19369820159999998) 1.0 0.0 (- 0.26272) false 0.7372799999999999 1.0 0.0 (- 1.0) 0.0 0.26272 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.00009999000000000001) 1.0 0.0 (- 0.00010) false 0.9999 1.0 0.0 (- 1.0) 0.0 0.00010 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 2.1 (- 0.016321788712934108) 4.5 2.5 (- 0.28754848109799236) false 0.05676186725316723 1.0 0.0 (- 1.0) 0.0 3.5 1.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.006052983023034818) 1.0 0.0 (- 0.993909928) false 0.006090072000000002 1.0 0.0 (- 1.0) 0.0 0.993909928 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.24968030723065393) 1.0 0.0 (- 0.4821200456) false 0.5178799544 1.0 0.0 (- 1.0) 0.0 0.4821200456 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.24605019422516072) 2.0 0.00002000040000793568 (- 0.4371525197415259) false 0.5628474802584741 1.0 0.0 (- 1.0) 0.0 1.0 1.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@outfalse 0.0026132285615360074 1.0 0.0 (- 1.0) 0.0 2.0 9.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.21) 1.0 0.0 (- 0.3) false 0.7 1.0 0.0 (- 1.0) 0.0 0.3 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.18276132180135665) 1.0 0.0 (- 0.7593042194) false 0.24069578059999996 1.0 0.0 (- 1.0) 0.0 0.7593042194 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.1569844718998781) 1.0 0.0 (- 0.8049844719) false 0.1950155281 1.0 0.0 (- 1.0) 0.0 0.8049844719 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.032661388277681995) 1.0 0.0 (- 0.03380410585) false 0.96619589415 1.0 0.0 (- 1.0) 0.0 0.03380410585 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 2.1 (- 0.008274870766608022) 5.5 2.1 (- 0.475) false 0.017420780561280047 1.0 0.0 (- 1.0) 0.0 3.5 2.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 (- 0.07822435638856674) 0.1 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 (- 0.09999999999999994) false 0.782243563885668 1.0 0.0 (- 1.0) 0.0 0.05 1.0 2147483647.0 true 0.1 true))
(assert (Verification L@out 0.0 (- 0.24182784) 1.0 0.0 (- 0.5904) false 0.40959999999999996 1.0 0.0 (- 1.0) 0.0 0.5904 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 0.0 2.0 0.0 (- 0.4772498680518209) true 0.0 1.0 0.0 (- 1.0) 0.0 1.0 1.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 false))
(assert (Verification L@out 0.0 (- 0.01037089585132176) 1.0 0.0 (- 0.9895192582) false 0.010480741800000026 1.0 0.0 (- 1.0) 0.0 0.9895192582 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.07064850205051161) 1.0 0.0 (- 0.9234991121) false 0.07650088789999998 1.0 0.0 (- 1.0) 0.0 0.9234991121 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.000585206332134359) 1.0 0.0 (- 0.9994144508) false 0.0005855491999999796 1.0 0.0 (- 1.0) 0.0 0.9994144508 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.23409903369992627) 1.0 0.0 (- 0.6260990337) false 0.3739009663 1.0 0.0 (- 1.0) 0.0 0.6260990337 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.1875) 1.0 0.0 (- 0.75) false 0.25 1.0 0.0 (- 1.0) 0.0 0.75 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.14619219164363598) 1.0 0.0 (- 0.177807808356) false 0.822192191644 1.0 0.0 (- 1.0) 0.0 0.177807808356 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.2080431872573944) 1.0 0.0 (- 0.7048336221) false 0.2951663779 1.0 0.0 (- 1.0) 0.0 0.7048336221 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.14535108943797934) 1.0 0.0 (- 0.17650516146) false 0.82349483854 1.0 0.0 (- 1.0) 0.0 0.17650516146 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.0384) 1.0 0.0 (- 0.04) false 0.96 1.0 0.0 (- 1.0) 0.0 0.04 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.2492036316) 1.0 0.0 (- 0.52822) false 0.47178 1.0 0.0 (- 1.0) 0.0 0.52822 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.000054934274728998116) 32.0 (- 32.0) (- 0.00005605217641073239) false 0.9800560521764107 1.0 0.0 (- 1.0) 0.0 0.0 32.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.11015092670400002) 1.0 0.0 (- 0.873964) false 0.12603600000000004 1.0 0.0 (- 1.0) 0.0 0.873964 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.015522751584919139) 1.0 0.0 (- 0.01577149153) false 0.98422850847 1.0 0.0 (- 1.0) 0.0 0.01577149153 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.2477225575056592) 1.0 0.0 (- 0.5477225575) false 0.4522774425 1.0 0.0 (- 1.0) 0.0 0.5477225575 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.24) 1.0 0.0 (- 0.6) false 0.4 1.0 0.0 (- 1.0) 0.0 0.6 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.021580268755690787) 1.0 0.0 (- 0.02206723146) false 0.97793276854 1.0 0.0 (- 1.0) 0.0 0.02206723146 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.04352422515042982) 3.5 0.0 (- 0.05) false 0.8704845030085964 1.0 0.0 (- 1.0) 0.0 1.5 2.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.03267686723226694) 3.0 (- 3.0) (- 0.9349503760512686) false 0.03495037605126872 1.0 0.0 (- 1.0) 0.0 0.0 3.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.032232177663999995) 1.0 0.0 (- 0.033344) false 0.966656 1.0 0.0 (- 1.0) 0.0 0.033344 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.23284165123279368) 1.0 0.0 (- 0.6309898804) false 0.36901011959999996 1.0 0.0 (- 1.0) 0.0 0.6309898804 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.2071067811851175) 1.0 0.0 (- 0.29289321881) false 0.70710678119 1.0 0.0 (- 1.0) 0.0 0.29289321881 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.0010875342896325857) 1.0 0.0 (- 0.9989112804) false 0.0010887196000000099 1.0 0.0 (- 1.0) 0.0 0.9989112804 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.07064850204204165) 1.0 0.0 (- 0.07650088789) false 0.92349911211 1.0 0.0 (- 1.0) 0.0 0.07650088789 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.031733364957671914) 1.0 0.0 (- 0.9671901487) false 0.032809851300000026 1.0 0.0 (- 1.0) 0.0 0.9671901487 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@outfalse 0.8572435638856679 1.0 0.0 (- 1.0) 0.0 0.05 1.0 2147483647.0 true 0.1 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.03267686723226694) 3.0 (- 3.0) (- 0.03495037605126872) false 0.9349503760512686 1.0 0.0 (- 1.0) 0.0 0.0 3.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.2499) 1.0 0.0 (- 0.49) false 0.51 1.0 0.0 (- 1.0) 0.0 0.49 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.00045978840000001595) 1.0 0.0 (- 0.99954) false 0.00046000000000001595 1.0 0.0 (- 1.0) 0.0 0.99954 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.12656025885769398) 1.0 0.0 (- 0.8513399225) false 0.1486600775 1.0 0.0 (- 1.0) 0.0 0.8513399225 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.09000000000000001) 1.0 0.0 (- 0.1) false 0.9 1.0 0.0 (- 1.0) 0.0 0.1 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.0000874816775450824) 21.5 0.0 (- 0.999) false 0.00008756924679187428 1.0 0.0 (- 1.0) 0.0 1.5 20.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.0004773859847715045) 1.0 0.0 (- 0.9995223859) false 0.00047761410000002336 1.0 0.0 (- 1.0) 0.0 0.9995223859 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.001087534284643463) 1.0 0.0 (- 0.001088719595) false 0.998911280405 1.0 0.0 (- 1.0) 0.0 0.001088719595 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.06248242827256096) 1.0 0.0 (- 0.9330329915) false 0.06696700850000004 1.0 0.0 (- 1.0) 0.0 0.9330329915 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.00124380970929521) 5.0 (- 5.0) (- 0.9912547830593628) false 0.001254783059362774 1.0 0.0 (- 1.0) 0.0 0.0 5.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.0004597884) 1.0 0.0 (- 0.00046) false 0.99954 1.0 0.0 (- 1.0) 0.0 0.00046 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.14535108946385888) 1.0 0.0 (- 0.8234948385) false 0.17650516149999995 1.0 0.0 (- 1.0) 0.0 0.8234948385 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 (- 0.003124366816803844) 16.0 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 (- 0.99) false 0.0031559260775796405 1.0 0.0 (- 1.0) 0.0 5.0 11.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.17459666924229805) 1.0 0.0 (- 0.22540333076) false 0.77459666924 1.0 0.0 (- 1.0) 0.0 0.22540333076 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.054312066975681264) 1.0 0.0 (- 0.9423662883) false 0.05763371169999998 1.0 0.0 (- 1.0) 0.0 0.9423662883 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.24968030723065393) 1.0 0.0 (- 0.5178799544) false 0.4821200456 1.0 0.0 (- 1.0) 0.0 0.5178799544 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@outfalse 0.00029301353614030745 1.0 0.0 (- 1.0) 0.0 8.0 19.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.11265309248378705) 1.0 0.0 (- 0.870603437) false 0.12939656300000002 1.0 0.0 (- 1.0) 0.0 0.870603437 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.03266138832430163) 1.0 0.0 (- 0.9661958941) false 0.03380410590000005 1.0 0.0 (- 1.0) 0.0 0.9661958941 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.2304) 1.0 0.0 (- 0.36) false 0.64 1.0 0.0 (- 1.0) 0.0 0.36 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.10056506494169568) 1.0 0.0 (- 0.8865681506) false 0.11343184939999995 1.0 0.0 (- 1.0) 0.0 0.8865681506 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.04868329805097486) 1.0 0.0 (- 0.05131670195) false 0.94868329805 1.0 0.0 (- 1.0) 0.0 0.05131670195 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.24861647142831655) 1.0 0.0 (- 0.4628041861) false 0.5371958138999999 1.0 0.0 (- 1.0) 0.0 0.4628041861 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.1569844718998781) 1.0 0.0 (- 0.1950155281) false 0.8049844719 1.0 0.0 (- 1.0) 0.0 0.1950155281 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.004802856167501176) 3.0 (- 3.0) (- 0.9550290159641406) false 0.005029015964140626 1.0 0.0 (- 1.0) 0.0 0.0 3.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 (- 0.003615272405998258) 3.5 1.5 (- 0.013069814544395514) false 0.2766123722504179 1.0 0.0 (- 1.0) 0.0 2.5 1.0 2147483647.0 true 5.0 true))
(assert (Verification L@out 0.0 (- 0.11280384) 1.0 0.0 (- 0.1296) false 0.8704000000000001 1.0 0.0 (- 1.0) 0.0 0.1296 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.23245553204259697) 1.0 0.0 (- 0.632455532) false 0.36754446799999996 1.0 0.0 (- 1.0) 0.0 0.632455532 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.16000000000000003) 1.0 0.0 (- 0.2) false 0.8 1.0 0.0 (- 1.0) 0.0 0.2 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.12656025884364042) 1.0 0.0 (- 0.14866007748) false 0.85133992252 1.0 0.0 (- 1.0) 0.0 0.14866007748 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.00007678291184906923) 6.0 (- 6.0) (- 0.00007693085520299296) false 0.998076930855203 1.0 0.0 (- 1.0) 0.0 0.0 6.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.15389999999999995) 1.0 0.0 (- 0.81) false 0.18999999999999995 1.0 0.0 (- 1.0) 0.0 0.81 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.07989032911688447) 1.0 0.0 (- 0.9124435366) false 0.0875564634 1.0 0.0 (- 1.0) 0.0 0.9124435366 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000049 (- 0.004893334503478224) 5.0 3.0 (- 0.0343575456215499) false 0.1424238668669337 1.0 0.0 (- 1.0) 0.0 4.0 1.0 2147483647.0 true 8.0 true))
(assert (Verification L@out 0.0 (- 0.006674841599999949) 1.0 0.0 (- 0.99328) false 0.006719999999999948 1.0 0.0 (- 1.0) 0.0 0.99328 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.008034389999999999) 1.0 0.0 (- 0.0081) false 0.9919 1.0 0.0 (- 1.0) 0.0 0.0081 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.011652728880361887) 1.0 0.0 (- 0.0117917748341) false 0.9882082251659 1.0 0.0 (- 1.0) 0.0 0.0117917748341 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.14619219167198888) 1.0 0.0 (- 0.8221921916) false 0.1778078084 1.0 0.0 (- 1.0) 0.0 0.8221921916 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.20804353850535443) 1.0 0.0 (- 0.2951672353) false 0.7048327647 1.0 0.0 (- 1.0) 0.0 0.2951672353 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.05564929336455457) 2.0 0.0 (- 0.4959706533253018) false 0.11220279464409116 1.0 0.0 (- 1.0) 0.0 1.0 1.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.04731976505434912) 1.0 0.0 (- 0.04979978349) false 0.95020021651 1.0 0.0 (- 1.0) 0.0 0.04979978349 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.04162817492109664) 2.0 (- 2.0) (- 0.04903026058507085) false 0.8490302605850709 1.0 0.0 (- 1.0) 0.0 0.0 2.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.04868329800610657) 1.0 0.0 (- 0.9486832981) false 0.05131670190000004 1.0 0.0 (- 1.0) 0.0 0.9486832981 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.009551867232266921) 3.0 (- 3.0) (- 0.9599503760512687) false 0.009950376051268695 1.0 0.0 (- 1.0) 0.0 0.0 3.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000049 (- 0.0000006776164470815789) 5.0 3.0 (- 0.2705254003710749) false 0.000002504816354220729 1.0 0.0 (- 1.0) 0.0 4.0 1.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.015869910099817915) 1.0 0.0 (- 0.0161300899) false 0.9838699101 1.0 0.0 (- 1.0) 0.0 0.0161300899 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.003867462906443595) 1.0 0.0 (- 0.996117463) false 0.0038825369999999637 1.0 0.0 (- 1.0) 0.0 0.996117463 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.16287081590101787) 1.0 0.0 (- 0.7951765304) false 0.20482346959999997 1.0 0.0 (- 1.0) 0.0 0.7951765304 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.03640903051435961) 1.0 0.0 (- 0.037840969486) false 0.962159030514 1.0 0.0 (- 1.0) 0.0 0.037840969486 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.0005349273117552778) 13.0 (- 13.0) (- 0.0005627480278026127) false 0.9505627480278026 1.0 0.0 (- 1.0) 0.0 0.0 13.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.009551867232266939) 3.0 (- 3.0) (- 0.009950376051268714) false 0.9599503760512687 1.0 0.0 (- 1.0) 0.0 0.0 3.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.00031034112855863184) 1.0 0.0 (- 0.9996895625) false 0.0003104375000000381 1.0 0.0 (- 1.0) 0.0 0.9996895625 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.06551600308100075) 1.0 0.0 (- 0.9295160031) false 0.07048399689999996 1.0 0.0 (- 1.0) 0.0 0.9295160031 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.15234375) 1.0 0.0 (- 0.1875) false 0.8125 1.0 0.0 (- 1.0) 0.0 0.1875 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.004764935486381743) 4.0 (- 4.0) (- 0.004838292259584275) false 0.9848382922595843 1.0 0.0 (- 1.0) 0.0 0.0 4.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.11617735490874095) 1.0 0.0 (- 0.8658177758) false 0.13418222420000003 1.0 0.0 (- 1.0) 0.0 0.8658177758 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 2.1 (- 0.0011861824750272166) 5.5 2.1 (- 0.49) false 0.0024207805612800337 1.0 0.0 (- 1.0) 0.0 3.5 2.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.019902645079716768) 1.0 0.0 (- 0.0203153588864) false 0.9796846411136 1.0 0.0 (- 1.0) 0.0 0.0203153588864 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.24828026072239004) 1.0 0.0 (- 0.4585302607) false 0.5414697393 1.0 0.0 (- 1.0) 0.0 0.4585302607 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 (- 0.02228827846813918) 10.0 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 (- 0.9) false 0.024764753853487975 1.0 0.0 (- 1.0) 0.0 5.0 5.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.093184) 1.0 0.0 (- 0.104) false 0.896 1.0 0.0 (- 1.0) 0.0 0.104 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.002986958379467622) 1.0 0.0 (- 0.997004066) false 0.002995933999999978 1.0 0.0 (- 1.0) 0.0 0.997004066 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.24721359549996239) 1.0 0.0 (- 0.5527864045) false 0.44721359549999995 1.0 0.0 (- 1.0) 0.0 0.5527864045 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.021710890780941693) 1.0 0.0 (- 0.02220390414) false 0.97779609586 1.0 0.0 (- 1.0) 0.0 0.02220390414 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.004372843843857357) 7.0 (- 7.0) (- 0.9048327646991334) false 0.004832764699133518 1.0 0.0 (- 1.0) 0.0 0.0 7.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 (- 0.014017401227943828) 2.1 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 (- 0.9749999999999999) false 0.014376821772250081 1.0 0.0 (- 1.0) 0.0 0.1 2.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.15999999999999998) 1.0 0.0 (- 0.8) false 0.19999999999999996 1.0 0.0 (- 1.0) 0.0 0.8 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.21622776601800014) 1.0 0.0 (- 0.68377223398) false 0.31622776602 1.0 0.0 (- 1.0) 0.0 0.68377223398 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 (- 0.00847802607351737) 4.5 0.5 (- 0.017123293232629594) false 0.4951165618867005 1.0 0.0 (- 1.0) 0.0 2.5 2.0 2147483647.0 true 5.0 true))
(assert (Verification L@out 0.0 (- 0.20804353850535443) 1.0 0.0 (- 0.7048327647) false 0.2951672353 1.0 0.0 (- 1.0) 0.0 0.7048327647 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 (- 0.001083127043706306) 4.5 0.5 (- 0.0021232932326295927) false 0.5101165618867005 1.0 0.0 (- 1.0) 0.0 2.5 2.0 2147483647.0 true 5.0 true))
(assert (Verification L@outfalse 0.005038804840838185 1.0 0.0 (- 1.0) 0.0 0.1 3.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 (- 0.02291641676479785) 1.1 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 (- 0.9499999999999998) false 0.02412254396294511 1.0 0.0 (- 1.0) 0.0 0.1 1.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.19267545263196192) 1.0 0.0 (- 0.260574547368) false 0.739425452632 1.0 0.0 (- 1.0) 0.0 0.260574547368 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.00007678291184907086) 6.0 (- 6.0) (- 0.998076930855203) false 0.00007693085520299459 1.0 0.0 (- 1.0) 0.0 0.0 6.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.228096) 1.0 0.0 (- 0.352) false 0.648 1.0 0.0 (- 1.0) 0.0 0.352 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.00159744) 1.0 0.0 (- 0.0016) false 0.9984 1.0 0.0 (- 1.0) 0.0 0.0016 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.004764935486381787) 4.0 (- 4.0) (- 0.9848382922595843) false 0.00483829225958432 1.0 0.0 (- 1.0) 0.0 0.0 4.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.0042673167294825926) 6.5 0.0 (- 0.975) false 0.004376735107161633 1.0 0.0 (- 1.0) 0.0 1.5 5.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.169344) 1.0 0.0 (- 0.216) false 0.784 1.0 0.0 (- 1.0) 0.0 0.216 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.19267545264728514) 1.0 0.0 (- 0.7394254526) false 0.26057454739999997 1.0 0.0 (- 1.0) 0.0 0.7394254526 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.12889480816666768) 1.0 0.0 (- 0.1519982876) false 0.8480017124 1.0 0.0 (- 1.0) 0.0 0.1519982876 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.11015092670400001) 1.0 0.0 (- 0.126036) false 0.873964 1.0 0.0 (- 1.0) 0.0 0.126036 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.03173336491207413) 1.0 0.0 (- 0.0328098512512) false 0.9671901487488 1.0 0.0 (- 1.0) 0.0 0.0328098512512 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.0038674629530786723) 1.0 0.0 (- 0.003882537047) false 0.996117462953 1.0 0.0 (- 1.0) 0.0 0.003882537047 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.23409903369992627) 1.0 0.0 (- 0.3739009663) false 0.6260990337 1.0 0.0 (- 1.0) 0.0 0.3739009663 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@outfalse 0.015212219493758394 1.0 0.0 (- 1.0) 0.0 5.0 7.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.1875) 1.0 0.0 (- 0.25) false 0.75 1.0 0.0 (- 1.0) 0.0 0.25 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.06551600308959112) 1.0 0.0 (- 0.07048399691) false 0.92951600309 1.0 0.0 (- 1.0) 0.0 0.07048399691 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.21000000000000002) 1.0 0.0 (- 0.7) false 0.30000000000000004 1.0 0.0 (- 1.0) 0.0 0.7 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.10263347648332599) 1.0 0.0 (- 0.116116523517) false 0.883883476483 1.0 0.0 (- 1.0) 0.0 0.116116523517 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.010370895841531346) 1.0 0.0 (- 0.01048074179) false 0.98951925821 1.0 0.0 (- 1.0) 0.0 0.01048074179 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@outfalse 0.5831198130044919 1.0 0.0 (- 1.0) 0.0 2.5 3.0 2147483647.0 true 5.0 true))
(assert (Verification L@out 0.0 (- 0.027216) 1.0 0.0 (- 0.028) false 0.972 1.0 0.0 (- 1.0) 0.0 0.028 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.2328416512327937) 1.0 0.0 (- 0.3690101196) false 0.6309898804 1.0 0.0 (- 1.0) 0.0 0.3690101196 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.0748242684) 1.0 0.0 (- 0.08146) false 0.91854 1.0 0.0 (- 1.0) 0.0 0.08146 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.1539) 1.0 0.0 (- 0.19) false 0.81 1.0 0.0 (- 1.0) 0.0 0.19 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.24721359549996236) 1.0 0.0 (- 0.4472135955) false 0.5527864044999999 1.0 0.0 (- 1.0) 0.0 0.4472135955 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000049 (- 0.0037395448758017727) 7.0 1.0 (- 0.008248377443709175) false 0.45336733209921515 1.0 0.0 (- 1.0) 0.0 4.0 3.0 2147483647.0 true 8.0 true))
(assert (Verification L@out 0.0 (- 0.1344) 1.0 0.0 (- 0.16) false 0.84 1.0 0.0 (- 1.0) 0.0 0.16 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.000002162306163294134) 319.0 (- 319.0) (- 0.000002166634738464974) false 0.9980021666347385 1.0 0.0 (- 1.0) 0.0 0.0 319.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.2304) 1.0 0.0 (- 0.64) false 0.36 1.0 0.0 (- 1.0) 0.0 0.64 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.0000032171179190857006) 1.0 0.0 (- 0.000003217128269) false 0.999996782871731 1.0 0.0 (- 1.0) 0.0 0.000003217128269 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.08189999999999997) 1.0 0.0 (- 0.91) false 0.08999999999999997 1.0 0.0 (- 1.0) 0.0 0.91 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.24) 1.0 0.0 (- 0.4) false 0.6 1.0 0.0 (- 1.0) 0.0 0.4 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.0025379007738134548) 1.0 0.0 (- 0.002544374616) false 0.997455625384 1.0 0.0 (- 1.0) 0.0 0.002544374616 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.20804318727787777) 1.0 0.0 (- 0.29516637795) false 0.70483362205 1.0 0.0 (- 1.0) 0.0 0.29516637795 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.13440000000000002) 1.0 0.0 (- 0.84) false 0.16000000000000003 1.0 0.0 (- 1.0) 0.0 0.84 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@outfalse 0.003773513697091113 1.0 0.0 (- 1.0) 0.0 8.0 10.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.06250000000000017) 1.0 (- 1.0) (- 0.25000000000000033) false 0.25000000000000033 1.0 0.0 (- 1.0) 0.0 0.0 1.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.22563279) 1.0 0.0 (- 0.6561) false 0.3439 1.0 0.0 (- 1.0) 0.0 0.6561 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.0740641166276143) 1.0 0.0 (- 0.9194471163) false 0.08055288370000002 1.0 0.0 (- 1.0) 0.0 0.9194471163 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.09442719099984952) 1.0 0.0 (- 0.105572809) false 0.894427191 1.0 0.0 (- 1.0) 0.0 0.105572809 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.07724285804787785) 1.0 0.0 (- 0.9156406404) false 0.08435935959999996 1.0 0.0 (- 1.0) 0.0 0.9156406404 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.169344) 1.0 0.0 (- 0.784) false 0.21599999999999997 1.0 0.0 (- 1.0) 0.0 0.784 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.027216000000000025) 1.0 0.0 (- 0.972) false 0.028000000000000025 1.0 0.0 (- 1.0) 0.0 0.972 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.0009194845030085964) 3.5 0.0 (- 0.001) false 0.9194845030085964 1.0 0.0 (- 1.0) 0.0 1.5 2.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.0000032170896502201566) 1.0 0.0 (- 0.9999967829) false 0.0000032170999999525662 1.0 0.0 (- 1.0) 0.0 0.9999967829 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.10056506496488982) 1.0 0.0 (- 0.11343184943) false 0.88656815057 1.0 0.0 (- 1.0) 0.0 0.11343184943 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@outfalse 0.8322435638856679 1.0 0.0 (- 1.0) 0.0 0.05 1.0 2147483647.0 true 0.1 true))
(assert (Verification L@out 0.0 (- 0.011652728847066127) 1.0 0.0 (- 0.9882082252) false 0.011791774800000043 1.0 0.0 (- 1.0) 0.0 0.9882082252 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.0005349273117553141) 13.0 (- 13.0) (- 0.9505627480278026) false 0.0005627480278026509 1.0 0.0 (- 1.0) 0.0 0.0 13.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.04873298840518535) 1.0 0.0 (- 0.0513720788952) false 0.9486279211048 1.0 0.0 (- 1.0) 0.0 0.0513720788952 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.054312066957986634) 1.0 0.0 (- 0.05763371168) false 0.94236628832 1.0 0.0 (- 1.0) 0.0 0.05763371168 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@outfalse 0.0016212318964362593 1.0 0.0 (- 1.0) 0.0 5.0 8.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.0027205580159999528) 1.0 0.0 (- 0.997272) false 0.0027279999999999527 1.0 0.0 (- 1.0) 0.0 0.997272 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.0029869583605814896) 1.0 0.0 (- 0.002995933981) false 0.997004066019 1.0 0.0 (- 1.0) 0.0 0.002995933981 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.18245199) 1.0 0.0 (- 0.2401) false 0.7599 1.0 0.0 (- 1.0) 0.0 0.2401 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.07406411660882305) 1.0 0.0 (- 0.0805528836776) false 0.9194471163224001 1.0 0.0 (- 1.0) 0.0 0.0805528836776 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.07482426839999998) 1.0 0.0 (- 0.91854) false 0.08145999999999998 1.0 0.0 (- 1.0) 0.0 0.91854 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.02238711257521491) 3.5 0.0 (- 0.025) false 0.8954845030085964 1.0 0.0 (- 1.0) 0.0 1.5 2.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.2412362493558882) 1.0 0.0 (- 0.4063850939) false 0.5936149061 1.0 0.0 (- 1.0) 0.0 0.4063850939 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.008274870766608012) 2.1 (- 1.3) (- 0.017420780561280026) false 0.475 1.0 0.0 (- 1.0) 0.0 0.7000000000000002 2.0 2147483647.0 true 2.1 true))
(assert (Verification L@out 0.0 (- 0.024944640000000004) 1.0 0.0 (- 0.0256) false 0.9744 1.0 0.0 (- 1.0) 0.0 0.0256 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.0004773859424119828) 1.0 0.0 (- 0.0004776140576) false 0.9995223859424 1.0 0.0 (- 1.0) 0.0 0.0004776140576 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@outfalse 0.5655298796332906 1.0 0.0 (- 1.0) 0.0 4.0 4.0 2147483647.0 true 8.0 true))
(assert (Verification L@out 0.0 (- 0.08204845030085965) 3.5 0.0 (- 0.1) false 0.8204845030085964 1.0 0.0 (- 1.0) 0.0 1.5 2.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.24861647142831655) 1.0 0.0 (- 0.5371958139) false 0.46280418609999996 1.0 0.0 (- 1.0) 0.0 0.5371958139 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.007104386348925316) 1.0 0.0 (- 0.9928444112) false 0.007155588800000001 1.0 0.0 (- 1.0) 0.0 0.9928444112 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@outfalse 0.0028525703656562262 1.0 0.0 (- 1.0) 0.0 8.0 13.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.20581259673600003) 1.0 0.0 (- 0.710208) false 0.28979200000000005 1.0 0.0 (- 1.0) 0.0 0.710208 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.008443736657701822) 1.0 0.0 (- 0.9914837366) false 0.008516263400000001 1.0 0.0 (- 1.0) 0.0 0.9914837366 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@outfalse 0.007619888008316034 1.0 0.0 (- 1.0) 0.0 8.0 8.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.17459666926426576) 1.0 0.0 (- 0.7745966692) false 0.22540333079999997 1.0 0.0 (- 1.0) 0.0 0.7745966692 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.0794640384) 1.0 0.0 (- 0.91296) false 0.08704 1.0 0.0 (- 1.0) 0.0 0.91296 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.008443736629195763) 1.0 0.0 (- 0.008516263371) false 0.991483736629 1.0 0.0 (- 1.0) 0.0 0.008516263371 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.00005591757558500842) 1.0 0.0 (- 0.00005592070271) false 0.99994407929729 1.0 0.0 (- 1.0) 0.0 0.00005592070271 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.2234179584) 1.0 0.0 (- 0.66304) false 0.33696000000000004 1.0 0.0 (- 1.0) 0.0 0.66304 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@outfalse 0.8722435638856679 1.0 0.0 (- 1.0) 0.0 0.05 1.0 2147483647.0 true 0.1 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.10137299837679904) 1.0 (- 1.0) (- 0.31839126617543867) false 0.31839126617543867 1.0 0.0 (- 1.0) 0.0 0.0 1.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.0794640384) 1.0 0.0 (- 0.08704) false 0.91296 1.0 0.0 (- 1.0) 0.0 0.08704 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.029832591600000027) 1.0 0.0 (- 0.96922) false 0.03078000000000003 1.0 0.0 (- 1.0) 0.0 0.96922 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.24589193137279458) 1.0 0.0 (- 0.5640942168) false 0.43590578319999995 1.0 0.0 (- 1.0) 0.0 0.5640942168 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.032232177664000036) 1.0 0.0 (- 0.966656) false 0.03334400000000004 1.0 0.0 (- 1.0) 0.0 0.966656 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.2492036316) 1.0 0.0 (- 0.47178) false 0.52822 1.0 0.0 (- 1.0) 0.0 0.47178 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.23396608845654315) 1.0 0.0 (- 0.6266250826) false 0.37337491739999995 1.0 0.0 (- 1.0) 0.0 0.6266250826 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.007104386326254472) 1.0 0.0 (- 0.007155588777) false 0.992844411223 1.0 0.0 (- 1.0) 0.0 0.007155588777 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.006052983049310825) 1.0 0.0 (- 0.0060900720266) false 0.9939099279734 1.0 0.0 (- 1.0) 0.0 0.0060900720266 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.01552275155586544) 1.0 0.0 (- 0.9842285085) false 0.015771491500000012 1.0 0.0 (- 1.0) 0.0 0.9842285085 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.24828026072438059) 1.0 0.0 (- 0.541469739276) false 0.45853026072400005 1.0 0.0 (- 1.0) 0.0 0.541469739276 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.07724285806450353) 1.0 0.0 (- 0.08435935962) false 0.91564064038 1.0 0.0 (- 1.0) 0.0 0.08435935962 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.19369820159999998) 1.0 0.0 (- 0.73728) false 0.26271999999999995 1.0 0.0 (- 1.0) 0.0 0.73728 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.05859375) 1.0 0.0 (- 0.0625) false 0.9375 1.0 0.0 (- 1.0) 0.0 0.0625 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@outfalse 0.007719888008316023 1.0 0.0 (- 1.0) 0.0 8.0 8.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.04873298840949213) 1.0 0.0 (- 0.9486279211) false 0.05137207889999995 1.0 0.0 (- 1.0) 0.0 0.9486279211 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.2499) 1.0 0.0 (- 0.51) false 0.49 1.0 0.0 (- 1.0) 0.0 0.51 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.2412362493558882) 1.0 0.0 (- 0.5936149061) false 0.4063850939 1.0 0.0 (- 1.0) 0.0 0.5936149061 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.00009998999999998899) 1.0 0.0 (- 0.9999) false 0.00009999999999998899 1.0 0.0 (- 1.0) 0.0 0.9999 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.0819) 1.0 0.0 (- 0.09) false 0.91 1.0 0.0 (- 1.0) 0.0 0.09 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 2.1 (- 0.0022824580206928747) 4.5 2.5 (- 0.3375484810979923) false 0.006761867253167297 1.0 0.0 (- 1.0) 0.0 3.5 1.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.021580268793925415) 1.0 0.0 (- 0.9779327685) false 0.022067231500000006 1.0 0.0 (- 1.0) 0.0 0.9779327685 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.01843605270773675) 3.5 0.0 (- 0.9) false 0.02048450300859639 1.0 0.0 (- 1.0) 0.0 1.5 2.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.0025074385284574396) 4.5 0.0 (- 0.95) false 0.0026394089773236207 1.0 0.0 (- 1.0) 0.0 1.5 3.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.0099) 1.0 0.0 (- 0.01) false 0.99 1.0 0.0 (- 1.0) 0.0 0.01 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.16337089024660859) 1.0 0.0 (- 0.20567176528) false 0.79432823472 1.0 0.0 (- 1.0) 0.0 0.20567176528 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.014503359032669829) 3.0 (- 3.0) (- 0.9650289369340037) false 0.015028936934003756 1.0 0.0 (- 1.0) 0.0 0.0 3.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.07707200317679055) 2.0 0.0 (- 0.5724780279076003) false 0.1346287532789472 1.0 0.0 (- 1.0) 0.0 1.0 1.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@outfalse 0.8812435638856679 1.0 0.0 (- 1.0) 0.0 0.05 1.0 2147483647.0 true 0.1 true))
(assert (Verification L@out 0.0 (- 0.09318399999999999) 1.0 0.0 (- 0.896) false 0.10399999999999998 1.0 0.0 (- 1.0) 0.0 0.896 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.047319765063353156) 1.0 0.0 (- 0.9502002165) false 0.04979978350000003 1.0 0.0 (- 1.0) 0.0 0.9502002165 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.12889480816666768) 1.0 0.0 (- 0.8480017124) false 0.1519982876 1.0 0.0 (- 1.0) 0.0 0.8480017124 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.0000021623061633387137) 319.0 (- 319.0) (- 0.9980021666347385) false 0.000002166634738509643 1.0 0.0 (- 1.0) 0.0 0.0 319.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.10263347647027396) 1.0 0.0 (- 0.8838834765) false 0.11611652350000001 1.0 0.0 (- 1.0) 0.0 0.8838834765 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.041628174921096654) 2.0 (- 2.0) (- 0.8490302605850709) false 0.04903026058507087 1.0 0.0 (- 1.0) 0.0 0.0 2.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.03381118002481032) 1.0 0.0 (- 0.03503890488) false 0.9649610951200001 1.0 0.0 (- 1.0) 0.0 0.03503890488 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.09097572053915039) 1.0 0.0 (- 0.8987784842) false 0.10122151580000005 1.0 0.0 (- 1.0) 0.0 0.8987784842 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@outfalse 0.0003276713394290143 1.0 0.0 (- 1.0) 0.0 0.1 6.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.002282458020692842) 1.7 (- 0.2999999999999998) (- 0.0067618672531672) false 0.33754848109799235 1.0 0.0 (- 1.0) 0.0 0.7000000000000002 1.0 2147483647.0 true 2.1 true))
(assert (Verification L@out 0.0 (- 0.18276132177542626) 1.0 0.0 (- 0.24069578055) false 0.75930421945 1.0 0.0 (- 1.0) 0.0 0.24069578055 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@outfalse 0.07412254396294504 1.0 0.0 (- 1.0) 0.0 0.1 1.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.05859375) 1.0 0.0 (- 0.9375) false 0.0625 1.0 0.0 (- 1.0) 0.0 0.9375 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.06248242823791829) 1.0 0.0 (- 0.06696700846) false 0.93303299154 1.0 0.0 (- 1.0) 0.0 0.06696700846 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out 0.0 (- 0.019902645092764213) 1.0 0.0 (- 0.9796846411) false 0.020315358900000025 1.0 0.0 (- 1.0) 0.0 0.9796846411 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.004372843843857313) 7.0 (- 7.0) (- 0.00483276469913347) false 0.9048327646991334 1.0 0.0 (- 1.0) 0.0 0.0 7.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@out 0.0 (- 0.07989032914987994) 1.0 0.0 (- 0.08755646344) false 0.91244353656 1.0 0.0 (- 1.0) 0.0 0.08755646344 1.0 2147483647.0 true 1.0 true))
(assert (WellFormedProgram L@out))
14:18:20.482 [main] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
14:18:20.653 [main] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - SMTLib Script:
(set-option :produce-models true)
(set-logic AUFNIRA)
(declare-fun L@op<0> () Int)
(declare-fun L@op<1> () Int)
(declare-fun L@op<2> () Int)
(declare-fun L@op<3> () Int)
(declare-fun L@op<0><0> () Int)
(declare-fun L@op<0><1> () Int)
(declare-fun L@op<1><0> () Int)
(declare-fun L@op<1><1> () Int)
(declare-fun L@op<2><0> () Int)
(declare-fun L@op<2><1> () Int)
(declare-fun L@op<3><0> () Int)
(declare-fun L@op<3><1> () Int)
(declare-fun L@out () Int)
(define-fun Acyclicity ((L@op<0> Int)(L@op<1> Int)(L@op<2> Int)(L@op<3> Int)(L@op<0><0> Int)(L@op<0><1> Int)(L@op<1><0> Int)(L@op<1><1> Int)(L@op<2><0> Int)(L@op<2><1> Int)(L@op<3><0> Int)(L@op<3><1> Int)) Bool (and (< L@op<0><0> L@op<0>) (< L@op<0><1> L@op<0>) (< L@op<1><0> L@op<1>) (< L@op<1><1> L@op<1>) (< L@op<2><0> L@op<2>) (< L@op<2><1> L@op<2>) (< L@op<3><0> L@op<3>) (< L@op<3><1> L@op<3>)))
(define-fun Consistency ((L@op<0> Int)(L@op<1> Int)(L@op<2> Int)(L@op<3> Int)) Bool (and (distinct L@op<0> L@op<1>) (distinct L@op<0> L@op<2>) (distinct L@op<0> L@op<3>) (distinct L@op<1> L@op<2>) (distinct L@op<1> L@op<3>) (distinct L@op<2> L@op<3>)))
(define-fun LineBound ((L@op<0> Int)(L@op<1> Int)(L@op<2> Int)(L@op<3> Int)(L@op<0><0> Int)(L@op<0><1> Int)(L@op<1><0> Int)(L@op<1><1> Int)(L@op<2><0> Int)(L@op<2><1> Int)(L@op<3><0> Int)(L@op<3><1> Int)(L@out Int)) Bool (and (and (<= 16 L@op<0>) (<= L@op<0> 19)) (and (<= 16 L@op<1>) (<= L@op<1> 19)) (and (<= 16 L@op<2>) (<= L@op<2> 19)) (and (<= 16 L@op<3>) (<= L@op<3> 19)) (or (= 0 L@op<0><0>) (= 1 L@op<0><0>) (= 2 L@op<0><0>) (= 3 L@op<0><0>) (= 4 L@op<0><0>) (= 6 L@op<0><0>) (= 7 L@op<0><0>) (= 8 L@op<0><0>) (= 9 L@op<0><0>) (= 10 L@op<0><0>) (= 11 L@op<0><0>) (= 12 L@op<0><0>) (= 13 L@op<0><0>) (= 15 L@op<0><0>)) (or (= 0 L@op<0><1>) (= 1 L@op<0><1>) (= 2 L@op<0><1>) (= 3 L@op<0><1>) (= 4 L@op<0><1>) (= 6 L@op<0><1>) (= 7 L@op<0><1>) (= 8 L@op<0><1>) (= 9 L@op<0><1>) (= 10 L@op<0><1>) (= 11 L@op<0><1>) (= 12 L@op<0><1>) (= 13 L@op<0><1>) (= 15 L@op<0><1>)) (or (= 0 L@op<1><0>) (= 1 L@op<1><0>) (= 2 L@op<1><0>) (= 3 L@op<1><0>) (= 4 L@op<1><0>) (= 6 L@op<1><0>) (= 7 L@op<1><0>) (= 8 L@op<1><0>) (= 9 L@op<1><0>) (= 10 L@op<1><0>) (= 11 L@op<1><0>) (= 12 L@op<1><0>) (= 13 L@op<1><0>) (= 15 L@op<1><0>)) (or (= 0 L@op<1><1>) (= 1 L@op<1><1>) (= 2 L@op<1><1>) (= 3 L@op<1><1>) (= 4 L@op<1><1>) (= 6 L@op<1><1>) (= 7 L@op<1><1>) (= 8 L@op<1><1>) (= 9 L@op<1><1>) (= 10 L@op<1><1>) (= 11 L@op<1><1>) (= 12 L@op<1><1>) (= 13 L@op<1><1>) (= 15 L@op<1><1>)) (or (= 0 L@op<2><0>) (= 1 L@op<2><0>) (= 2 L@op<2><0>) (= 3 L@op<2><0>) (= 4 L@op<2><0>) (= 6 L@op<2><0>) (= 7 L@op<2><0>) (= 8 L@op<2><0>) (= 9 L@op<2><0>) (= 10 L@op<2><0>) (= 11 L@op<2><0>) (= 12 L@op<2><0>) (= 13 L@op<2><0>) (= 15 L@op<2><0>)) (or (= 0 L@op<2><1>) (= 1 L@op<2><1>) (= 2 L@op<2><1>) (= 3 L@op<2><1>) (= 4 L@op<2><1>) (= 6 L@op<2><1>) (= 7 L@op<2><1>) (= 8 L@op<2><1>) (= 9 L@op<2><1>) (= 10 L@op<2><1>) (= 11 L@op<2><1>) (= 12 L@op<2><1>) (= 13 L@op<2><1>) (= 15 L@op<2><1>)) (or (= 0 L@op<3><0>) (= 1 L@op<3><0>) (= 2 L@op<3><0>) (= 3 L@op<3><0>) (= 4 L@op<3><0>) (= 6 L@op<3><0>) (= 7 L@op<3><0>) (= 8 L@op<3><0>) (= 9 L@op<3><0>) (= 10 L@op<3><0>) (= 11 L@op<3><0>) (= 12 L@op<3><0>) (= 13 L@op<3><0>) (= 15 L@op<3><0>)) (or (= 0 L@op<3><1>) (= 1 L@op<3><1>) (= 2 L@op<3><1>) (= 3 L@op<3><1>) (= 4 L@op<3><1>) (= 6 L@op<3><1>) (= 7 L@op<3><1>) (= 8 L@op<3><1>) (= 9 L@op<3><1>) (= 10 L@op<3><1>) (= 11 L@op<3><1>) (= 12 L@op<3><1>) (= 13 L@op<3><1>) (= 15 L@op<3><1>)) (or (= 5 L@out) (= 14 L@out) (= L@op<0> L@out) (= L@op<1> L@out) (= L@op<2> L@out) (= L@op<3> L@out))))
(define-fun WellFormedProgram ((L@op<0> Int)(L@op<1> Int)(L@op<2> Int)(L@op<3> Int)(L@op<0><0> Int)(L@op<0><1> Int)(L@op<1><0> Int)(L@op<1><1> Int)(L@op<2><0> Int)(L@op<2><1> Int)(L@op<3><0> Int)(L@op<3><1> Int)(L@out Int)) Bool (and (Acyclicity L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1>) (Consistency L@op<0> L@op<1> L@op<2> L@op<3>) (LineBound L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out)))
(define-fun Connectivity ((L@op<0> Int)(L@op<1> Int)(L@op<2> Int)(L@op<3> Int)(L@op<0><0> Int)(L@op<0><1> Int)(L@op<1><0> Int)(L@op<1><1> Int)(L@op<2><0> Int)(L@op<2><1> Int)(L@op<3><0> Int)(L@op<3><1> Int)(L@out Int)(in<0> Real)(in<1> Real)(in<2> Real)(in<3> Real)(in<4> Real)(in<5> Bool)(in<6> Real)(in<7> Real)(in<8> Real)(in<9> Real)(in<10> Real)(in<11> Real)(in<12> Real)(in<13> Real)(in<14> Bool)(in<15> Real)(op<0> Bool)(op<1> Bool)(op<2> Bool)(op<3> Bool)(op<0><0> Real)(op<0><1> Real)(op<1><0> Real)(op<1><1> Real)(op<2><0> Real)(op<2><1> Real)(op<3><0> Real)(op<3><1> Real)(out Bool)) Bool (and (=> (= L@out 5) (= out in<5>)) (=> (= L@out 14) (= out in<14>)) (=> (= L@out L@op<0>) (= out op<0>)) (=> (= L@out L@op<1>) (= out op<1>)) (=> (= L@out L@op<2>) (= out op<2>)) (=> (= L@out L@op<3>) (= out op<3>)) (=> (= L@op<0><0> 0) (= op<0><0> in<0>)) (=> (= L@op<0><0> 1) (= op<0><0> in<1>)) (=> (= L@op<0><0> 2) (= op<0><0> in<2>)) (=> (= L@op<0><0> 3) (= op<0><0> in<3>)) (=> (= L@op<0><0> 4) (= op<0><0> in<4>)) (=> (= L@op<0><0> 6) (= op<0><0> in<6>)) (=> (= L@op<0><0> 7) (= op<0><0> in<7>)) (=> (= L@op<0><0> 8) (= op<0><0> in<8>)) (=> (= L@op<0><0> 9) (= op<0><0> in<9>)) (=> (= L@op<0><0> 10) (= op<0><0> in<10>)) (=> (= L@op<0><0> 11) (= op<0><0> in<11>)) (=> (= L@op<0><0> 12) (= op<0><0> in<12>)) (=> (= L@op<0><0> 13) (= op<0><0> in<13>)) (=> (= L@op<0><0> 15) (= op<0><0> in<15>)) (=> (= L@op<0><1> 0) (= op<0><1> in<0>)) (=> (= L@op<0><1> 1) (= op<0><1> in<1>)) (=> (= L@op<0><1> 2) (= op<0><1> in<2>)) (=> (= L@op<0><1> 3) (= op<0><1> in<3>)) (=> (= L@op<0><1> 4) (= op<0><1> in<4>)) (=> (= L@op<0><1> 6) (= op<0><1> in<6>)) (=> (= L@op<0><1> 7) (= op<0><1> in<7>)) (=> (= L@op<0><1> 8) (= op<0><1> in<8>)) (=> (= L@op<0><1> 9) (= op<0><1> in<9>)) (=> (= L@op<0><1> 10) (= op<0><1> in<10>)) (=> (= L@op<0><1> 11) (= op<0><1> in<11>)) (=> (= L@op<0><1> 12) (= op<0><1> in<12>)) (=> (= L@op<0><1> 13) (= op<0><1> in<13>)) (=> (= L@op<0><1> 15) (= op<0><1> in<15>)) (=> (= L@op<1><0> 0) (= op<1><0> in<0>)) (=> (= L@op<1><0> 1) (= op<1><0> in<1>)) (=> (= L@op<1><0> 2) (= op<1><0> in<2>)) (=> (= L@op<1><0> 3) (= op<1><0> in<3>)) (=> (= L@op<1><0> 4) (= op<1><0> in<4>)) (=> (= L@op<1><0> 6) (= op<1><0> in<6>)) (=> (= L@op<1><0> 7) (= op<1><0> in<7>)) (=> (= L@op<1><0> 8) (= op<1><0> in<8>)) (=> (= L@op<1><0> 9) (= op<1><0> in<9>)) (=> (= L@op<1><0> 10) (= op<1><0> in<10>)) (=> (= L@op<1><0> 11) (= op<1><0> in<11>)) (=> (= L@op<1><0> 12) (= op<1><0> in<12>)) (=> (= L@op<1><0> 13) (= op<1><0> in<13>)) (=> (= L@op<1><0> 15) (= op<1><0> in<15>)) (=> (= L@op<1><1> 0) (= op<1><1> in<0>)) (=> (= L@op<1><1> 1) (= op<1><1> in<1>)) (=> (= L@op<1><1> 2) (= op<1><1> in<2>)) (=> (= L@op<1><1> 3) (= op<1><1> in<3>)) (=> (= L@op<1><1> 4) (= op<1><1> in<4>)) (=> (= L@op<1><1> 6) (= op<1><1> in<6>)) (=> (= L@op<1><1> 7) (= op<1><1> in<7>)) (=> (= L@op<1><1> 8) (= op<1><1> in<8>)) (=> (= L@op<1><1> 9) (= op<1><1> in<9>)) (=> (= L@op<1><1> 10) (= op<1><1> in<10>)) (=> (= L@op<1><1> 11) (= op<1><1> in<11>)) (=> (= L@op<1><1> 12) (= op<1><1> in<12>)) (=> (= L@op<1><1> 13) (= op<1><1> in<13>)) (=> (= L@op<1><1> 15) (= op<1><1> in<15>)) (=> (= L@op<2><0> 0) (= op<2><0> in<0>)) (=> (= L@op<2><0> 1) (= op<2><0> in<1>)) (=> (= L@op<2><0> 2) (= op<2><0> in<2>)) (=> (= L@op<2><0> 3) (= op<2><0> in<3>)) (=> (= L@op<2><0> 4) (= op<2><0> in<4>)) (=> (= L@op<2><0> 6) (= op<2><0> in<6>)) (=> (= L@op<2><0> 7) (= op<2><0> in<7>)) (=> (= L@op<2><0> 8) (= op<2><0> in<8>)) (=> (= L@op<2><0> 9) (= op<2><0> in<9>)) (=> (= L@op<2><0> 10) (= op<2><0> in<10>)) (=> (= L@op<2><0> 11) (= op<2><0> in<11>)) (=> (= L@op<2><0> 12) (= op<2><0> in<12>)) (=> (= L@op<2><0> 13) (= op<2><0> in<13>)) (=> (= L@op<2><0> 15) (= op<2><0> in<15>)) (=> (= L@op<2><1> 0) (= op<2><1> in<0>)) (=> (= L@op<2><1> 1) (= op<2><1> in<1>)) (=> (= L@op<2><1> 2) (= op<2><1> in<2>)) (=> (= L@op<2><1> 3) (= op<2><1> in<3>)) (=> (= L@op<2><1> 4) (= op<2><1> in<4>)) (=> (= L@op<2><1> 6) (= op<2><1> in<6>)) (=> (= L@op<2><1> 7) (= op<2><1> in<7>)) (=> (= L@op<2><1> 8) (= op<2><1> in<8>)) (=> (= L@op<2><1> 9) (= op<2><1> in<9>)) (=> (= L@op<2><1> 10) (= op<2><1> in<10>)) (=> (= L@op<2><1> 11) (= op<2><1> in<11>)) (=> (= L@op<2><1> 12) (= op<2><1> in<12>)) (=> (= L@op<2><1> 13) (= op<2><1> in<13>)) (=> (= L@op<2><1> 15) (= op<2><1> in<15>)) (=> (= L@op<3><0> 0) (= op<3><0> in<0>)) (=> (= L@op<3><0> 1) (= op<3><0> in<1>)) (=> (= L@op<3><0> 2) (= op<3><0> in<2>)) (=> (= L@op<3><0> 3) (= op<3><0> in<3>)) (=> (= L@op<3><0> 4) (= op<3><0> in<4>)) (=> (= L@op<3><0> 6) (= op<3><0> in<6>)) (=> (= L@op<3><0> 7) (= op<3><0> in<7>)) (=> (= L@op<3><0> 8) (= op<3><0> in<8>)) (=> (= L@op<3><0> 9) (= op<3><0> in<9>)) (=> (= L@op<3><0> 10) (= op<3><0> in<10>)) (=> (= L@op<3><0> 11) (= op<3><0> in<11>)) (=> (= L@op<3><0> 12) (= op<3><0> in<12>)) (=> (= L@op<3><0> 13) (= op<3><0> in<13>)) (=> (= L@op<3><0> 15) (= op<3><0> in<15>)) (=> (= L@op<3><1> 0) (= op<3><1> in<0>)) (=> (= L@op<3><1> 1) (= op<3><1> in<1>)) (=> (= L@op<3><1> 2) (= op<3><1> in<2>)) (=> (= L@op<3><1> 3) (= op<3><1> in<3>)) (=> (= L@op<3><1> 4) (= op<3><1> in<4>)) (=> (= L@op<3><1> 6) (= op<3><1> in<6>)) (=> (= L@op<3><1> 7) (= op<3><1> in<7>)) (=> (= L@op<3><1> 8) (= op<3><1> in<8>)) (=> (= L@op<3><1> 9) (= op<3><1> in<9>)) (=> (= L@op<3><1> 10) (= op<3><1> in<10>)) (=> (= L@op<3><1> 11) (= op<3><1> in<11>)) (=> (= L@op<3><1> 12) (= op<3><1> in<12>)) (=> (= L@op<3><1> 13) (= op<3><1> in<13>)) (=> (= L@op<3><1> 15) (= op<3><1> in<15>))))
(define-fun Library ((op<0> Bool)(op<1> Bool)(op<2> Bool)(op<3> Bool)(op<0><0> Real)(op<0><1> Real)(op<1><0> Real)(op<1><1> Real)(op<2><0> Real)(op<2><1> Real)(op<3><0> Real)(op<3><1> Real)) Bool (and (= op<0> (= op<0><0> op<0><1>)) (= op<1> (distinct op<1><0> op<1><1>)) (= op<2> (< op<2><0> op<2><1>)) (= op<3> (<= op<3><0> op<3><1>))))
(define-fun Verification ((L@op<0> Int)(L@op<1> Int)(L@op<2> Int)(L@op<3> Int)(L@op<0><0> Int)(L@op<0><1> Int)(L@op<1><0> Int)(L@op<1><1> Int)(L@op<2><0> Int)(L@op<2><1> Int)(L@op<3><0> Int)(L@op<3><1> Int)(L@out Int)(in<0> Real)(in<1> Real)(in<2> Real)(in<3> Real)(in<4> Real)(in<5> Bool)(in<6> Real)(in<7> Real)(in<8> Real)(in<9> Real)(in<10> Real)(in<11> Real)(in<12> Real)(in<13> Real)(in<14> Bool)(in<15> Real)(out Bool)) Bool (exists ((op<0> Bool) (op<1> Bool) (op<2> Bool) (op<3> Bool) (op<0><0> Real) (op<0><1> Real) (op<1><0> Real) (op<1><1> Real) (op<2><0> Real) (op<2><1> Real) (op<3><0> Real) (op<3><1> Real) ) (and (Connectivity L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out in<0> in<1> in<2> in<3> in<4> in<5> in<6> in<7> in<8> in<9> in<10> in<11> in<12> in<13> in<14> in<15> op<0> op<1> op<2> op<3> op<0><0> op<0><1> op<1><0> op<1><1> op<2><0> op<2><1> op<3><0> op<3><1> out) (Library op<0> op<1> op<2> op<3> op<0><0> op<0><1> op<1><0> op<1><1> op<2><0> op<2><1> op<3><0> op<3><1>))))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.1366600265368197) 1.0 0.0 (- 0.16333997347) false 0.8366600265299999 1.0 0.0 (- 1.0) 0.0 0.16333997347 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.002502283145950502) 1.0 0.0 (- 0.9974914239) false 0.002508576099999993 1.0 0.0 (- 1.0) 0.0 0.9974914239 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.000055917572875356514) 1.0 0.0 (- 0.9999440793) false 0.00005592070000004501 1.0 0.0 (- 1.0) 0.0 0.9999440793 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.21622776601064925) 1.0 0.0 (- 0.316227766) false 0.683772234 1.0 0.0 (- 1.0) 0.0 0.316227766 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.0011861824750272123) 2.1 (- 1.3) (- 0.002420780561280025) false 0.49 1.0 0.0 (- 1.0) 0.0 0.7000000000000002 2.0 2147483647.0 true 2.1 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.22563279) 1.0 0.0 (- 0.3439) false 0.6561 1.0 0.0 (- 1.0) 0.0 0.3439 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.16287630320535443) 1.0 0.0 (- 0.7951672353) false 0.2048327647 1.0 0.0 (- 1.0) 0.0 0.7951672353 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.16287081591872848) 1.0 0.0 (- 0.20482346963) false 0.79517653037 1.0 0.0 (- 1.0) 0.0 0.20482346963 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 (- 0.019802857789869146) 4.5 0.5 (- 0.042123293232629595) false 0.47011656188670053 1.0 0.0 (- 1.0) 0.0 2.5 2.0 2147483647.0 true 5.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.021710890742717953) 1.0 0.0 (- 0.9777960959) false 0.02220390409999995 1.0 0.0 (- 1.0) 0.0 0.9777960959 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 2.0) (- 0.7080734182735712) 1.0 (- 1.0) (- 0.8414709848078965) false 0.8414709848078965 1.0 0.0 (- 1.0) 0.0 0.0 1.0 2147483647.0 true 2.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000049 (- 0.01606488424283389) 14.0 2.0 (- 0.8810118431238462) false 0.01823458375527831 1.0 0.0 (- 1.0) 0.0 8.0 6.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.0015974400000000456) 1.0 0.0 (- 0.9984) false 0.0016000000000000458 1.0 0.0 (- 1.0) 0.0 0.9984 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.0163217887129341) 1.7 (- 0.2999999999999998) (- 0.0567618672531672) false 0.28754848109799236 1.0 0.0 (- 1.0) 0.0 0.7000000000000002 1.0 2147483647.0 true 2.1 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.11280384000000003) 1.0 0.0 (- 0.8704) false 0.12960000000000005 1.0 0.0 (- 1.0) 0.0 0.8704 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.24182784000000002) 1.0 0.0 (- 0.4096) false 0.5904 1.0 0.0 (- 1.0) 0.0 0.4096 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.000028510335744403796) 1.0 0.0 (- 0.00002851114863) false 0.99997148885137 1.0 0.0 (- 1.0) 0.0 0.00002851114863 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.20581259673599997) 1.0 0.0 (- 0.289792) false 0.710208 1.0 0.0 (- 1.0) 0.0 0.289792 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@outfalse 0.5647298796332906 1.0 0.0 (- 1.0) 0.0 2.0 2.0 2147483647.0 true 4.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.11265309249861116) 1.0 0.0 (- 0.12939656302) false 0.87060343698 1.0 0.0 (- 1.0) 0.0 0.12939656302 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.09097572053915035) 1.0 0.0 (- 0.1012215158) false 0.8987784842 1.0 0.0 (- 1.0) 0.0 0.1012215158 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.03840000000000003) 1.0 0.0 (- 0.96) false 0.040000000000000036 1.0 0.0 (- 1.0) 0.0 0.96 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.03640903052730011) 1.0 0.0 (- 0.9621590305) false 0.03784096950000004 1.0 0.0 (- 1.0) 0.0 0.9621590305 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000049 (- 0.00938939716798866) 6.0 2.0 (- 0.03101184312384619) false 0.30276811121776875 1.0 0.0 (- 1.0) 0.0 4.0 2.0 2147483647.0 true 8.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.047261936881136495) 1.0 0.0 (- 0.04973556312) false 0.95026443688 1.0 0.0 (- 1.0) 0.0 0.04973556312 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.25) 1.0 0.0 (- 0.5) false 0.5 1.0 0.0 (- 1.0) 0.0 0.5 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.0338111800434087) 1.0 0.0 (- 0.9649610951) false 0.035038904899999945 1.0 0.0 (- 1.0) 0.0 0.9649610951 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.009104845030085964) 3.5 0.0 (- 0.01) false 0.9104845030085964 1.0 0.0 (- 1.0) 0.0 1.5 2.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.00008156785682314489) 2.1 (- 2.3) (- 0.00016346263892413806) false 0.499 1.0 0.0 (- 1.0) 0.0 0.7000000000000002 3.0 2147483647.0 true 2.1 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.2234179584) 1.0 0.0 (- 0.33696) false 0.6630400000000001 1.0 0.0 (- 1.0) 0.0 0.33696 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.002537900757894885) 1.0 0.0 (- 0.9974556254) false 0.00254437460000001 1.0 0.0 (- 1.0) 0.0 0.9974556254 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.2071067811809753) 1.0 0.0 (- 0.7071067812) false 0.29289321879999997 1.0 0.0 (- 1.0) 0.0 0.7071067812 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.24636501825366022) 1.0 0.0 (- 0.5602908098) false 0.4397091902 1.0 0.0 (- 1.0) 0.0 0.5602908098 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.02494463999999996) 1.0 0.0 (- 0.9744) false 0.025599999999999956 1.0 0.0 (- 1.0) 0.0 0.9744 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.006674841600000001) 1.0 0.0 (- 0.00672) false 0.99328 1.0 0.0 (- 1.0) 0.0 0.00672 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.24772255750470473) 1.0 0.0 (- 0.45227744249) false 0.54772255751 1.0 0.0 (- 1.0) 0.0 0.45227744249 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.008034389999999995) 1.0 0.0 (- 0.9919) false 0.008099999999999996 1.0 0.0 (- 1.0) 0.0 0.9919 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.00031034117592916425) 1.0 0.0 (- 0.0003104375474) false 0.9996895624526 1.0 0.0 (- 1.0) 0.0 0.0003104375474 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.0005852063438206774) 1.0 0.0 (- 0.0005855492117) false 0.9994144507883 1.0 0.0 (- 1.0) 0.0 0.0005855492117 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.228096) 1.0 0.0 (- 0.648) false 0.352 1.0 0.0 (- 1.0) 0.0 0.648 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000049 (- 0.001970490465640596) 6.0 2.0 (- 0.00601184312384619) false 0.3277681112177687 1.0 0.0 (- 1.0) 0.0 4.0 2.0 2147483647.0 true 8.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.11617735487252497) 1.0 0.0 (- 0.1341822241505) false 0.8658177758495 1.0 0.0 (- 1.0) 0.0 0.1341822241505 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.23245553203464966) 1.0 0.0 (- 0.36754446797) false 0.63245553203 1.0 0.0 (- 1.0) 0.0 0.36754446797 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.16287630320535443) 1.0 0.0 (- 0.2048327647) false 0.7951672353 1.0 0.0 (- 1.0) 0.0 0.2048327647 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 2.1 (- 0.00008156785682311762) 6.5 2.1 (- 0.499) false 0.00016346263892408341 1.0 0.0 (- 1.0) 0.0 3.5 3.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.04726193686312596) 1.0 0.0 (- 0.9502644369) false 0.049735563100000046 1.0 0.0 (- 1.0) 0.0 0.9502644369 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.002720558016) 1.0 0.0 (- 0.002728) false 0.997272 1.0 0.0 (- 1.0) 0.0 0.002728 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.029832591599999996) 1.0 0.0 (- 0.03078) false 0.96922 1.0 0.0 (- 1.0) 0.0 0.03078 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.01810161439704148) 4.0 (- 4.0) (- 0.022020869622630723) false 0.8220208696226308 1.0 0.0 (- 1.0) 0.0 0.0 4.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.095819233395497) 1.0 0.0 (- 0.10734141216) false 0.89265858784 1.0 0.0 (- 1.0) 0.0 0.10734141216 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.01810161439704148) 4.0 (- 4.0) (- 0.8220208696226308) false 0.022020869622630723 1.0 0.0 (- 1.0) 0.0 0.0 4.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.15234375) 1.0 0.0 (- 0.8125) false 0.1875 1.0 0.0 (- 1.0) 0.0 0.8125 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.24589193137279464) 1.0 0.0 (- 0.4359057832) false 0.5640942168 1.0 0.0 (- 1.0) 0.0 0.4359057832 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.000028510287117193898) 1.0 0.0 (- 0.9999714889) false 0.00002851110000001711 1.0 0.0 (- 1.0) 0.0 0.9999714889 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.0025022831322197452) 1.0 0.0 (- 0.0025085760862) false 0.9974914239138 1.0 0.0 (- 1.0) 0.0 0.0025085760862 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.09442719099984952) 1.0 0.0 (- 0.894427191) false 0.10557280899999999 1.0 0.0 (- 1.0) 0.0 0.894427191 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.18245198999999998) 1.0 0.0 (- 0.7599) false 0.24009999999999998 1.0 0.0 (- 1.0) 0.0 0.7599 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.1633708902583817) 1.0 0.0 (- 0.7943282347) false 0.20567176529999998 1.0 0.0 (- 1.0) 0.0 0.7943282347 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.015869910099817898) 1.0 0.0 (- 0.9838699101) false 0.016130089899999978 1.0 0.0 (- 1.0) 0.0 0.9838699101 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.08999999999999998) 1.0 0.0 (- 0.9) false 0.09999999999999998 1.0 0.0 (- 1.0) 0.0 0.9 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.24636501825366022) 1.0 0.0 (- 0.4397091902) false 0.5602908098 1.0 0.0 (- 1.0) 0.0 0.4397091902 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.13666002655701928) 1.0 0.0 (- 0.8366600265) false 0.16333997349999996 1.0 0.0 (- 1.0) 0.0 0.8366600265 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.0018656338002777683) 9.5 0.0 (- 0.99) false 0.00188447858613916 1.0 0.0 (- 1.0) 0.0 1.5 8.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.23396608845654315) 1.0 0.0 (- 0.3733749174) false 0.6266250825999999 1.0 0.0 (- 1.0) 0.0 0.3733749174 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.00990000000000001) 1.0 0.0 (- 0.99) false 0.010000000000000009 1.0 0.0 (- 1.0) 0.0 0.99 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.00005493427472895902) 32.0 (- 32.0) (- 0.9800560521764107) false 0.00005605217641069249 1.0 0.0 (- 1.0) 0.0 0.0 32.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 (- 0.00018975044142849484) 21.0 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 (- 0.999) false 0.00018994038181030515 1.0 0.0 (- 1.0) 0.0 5.0 16.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.09581923342690972) 1.0 0.0 (- 0.8926585878) false 0.10734141220000004 1.0 0.0 (- 1.0) 0.0 0.8926585878 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.19369820159999998) 1.0 0.0 (- 0.26272) false 0.7372799999999999 1.0 0.0 (- 1.0) 0.0 0.26272 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.00009999000000000001) 1.0 0.0 (- 0.00010) false 0.9999 1.0 0.0 (- 1.0) 0.0 0.00010 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 2.1 (- 0.016321788712934108) 4.5 2.5 (- 0.28754848109799236) false 0.05676186725316723 1.0 0.0 (- 1.0) 0.0 3.5 1.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.006052983023034818) 1.0 0.0 (- 0.993909928) false 0.006090072000000002 1.0 0.0 (- 1.0) 0.0 0.993909928 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.24968030723065393) 1.0 0.0 (- 0.4821200456) false 0.5178799544 1.0 0.0 (- 1.0) 0.0 0.4821200456 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.24605019422516072) 2.0 0.00002000040000793568 (- 0.4371525197415259) false 0.5628474802584741 1.0 0.0 (- 1.0) 0.0 1.0 1.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@outfalse 0.0026132285615360074 1.0 0.0 (- 1.0) 0.0 2.0 9.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.21) 1.0 0.0 (- 0.3) false 0.7 1.0 0.0 (- 1.0) 0.0 0.3 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.18276132180135665) 1.0 0.0 (- 0.7593042194) false 0.24069578059999996 1.0 0.0 (- 1.0) 0.0 0.7593042194 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.1569844718998781) 1.0 0.0 (- 0.8049844719) false 0.1950155281 1.0 0.0 (- 1.0) 0.0 0.8049844719 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.032661388277681995) 1.0 0.0 (- 0.03380410585) false 0.96619589415 1.0 0.0 (- 1.0) 0.0 0.03380410585 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 2.1 (- 0.008274870766608022) 5.5 2.1 (- 0.475) false 0.017420780561280047 1.0 0.0 (- 1.0) 0.0 3.5 2.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 (- 0.07822435638856674) 0.1 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 (- 0.09999999999999994) false 0.782243563885668 1.0 0.0 (- 1.0) 0.0 0.05 1.0 2147483647.0 true 0.1 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.24182784) 1.0 0.0 (- 0.5904) false 0.40959999999999996 1.0 0.0 (- 1.0) 0.0 0.5904 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 0.0 2.0 0.0 (- 0.4772498680518209) true 0.0 1.0 0.0 (- 1.0) 0.0 1.0 1.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 false))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.01037089585132176) 1.0 0.0 (- 0.9895192582) false 0.010480741800000026 1.0 0.0 (- 1.0) 0.0 0.9895192582 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.07064850205051161) 1.0 0.0 (- 0.9234991121) false 0.07650088789999998 1.0 0.0 (- 1.0) 0.0 0.9234991121 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.000585206332134359) 1.0 0.0 (- 0.9994144508) false 0.0005855491999999796 1.0 0.0 (- 1.0) 0.0 0.9994144508 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.23409903369992627) 1.0 0.0 (- 0.6260990337) false 0.3739009663 1.0 0.0 (- 1.0) 0.0 0.6260990337 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.1875) 1.0 0.0 (- 0.75) false 0.25 1.0 0.0 (- 1.0) 0.0 0.75 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.14619219164363598) 1.0 0.0 (- 0.177807808356) false 0.822192191644 1.0 0.0 (- 1.0) 0.0 0.177807808356 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.2080431872573944) 1.0 0.0 (- 0.7048336221) false 0.2951663779 1.0 0.0 (- 1.0) 0.0 0.7048336221 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.14535108943797934) 1.0 0.0 (- 0.17650516146) false 0.82349483854 1.0 0.0 (- 1.0) 0.0 0.17650516146 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.0384) 1.0 0.0 (- 0.04) false 0.96 1.0 0.0 (- 1.0) 0.0 0.04 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.2492036316) 1.0 0.0 (- 0.52822) false 0.47178 1.0 0.0 (- 1.0) 0.0 0.52822 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.000054934274728998116) 32.0 (- 32.0) (- 0.00005605217641073239) false 0.9800560521764107 1.0 0.0 (- 1.0) 0.0 0.0 32.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.11015092670400002) 1.0 0.0 (- 0.873964) false 0.12603600000000004 1.0 0.0 (- 1.0) 0.0 0.873964 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.015522751584919139) 1.0 0.0 (- 0.01577149153) false 0.98422850847 1.0 0.0 (- 1.0) 0.0 0.01577149153 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.2477225575056592) 1.0 0.0 (- 0.5477225575) false 0.4522774425 1.0 0.0 (- 1.0) 0.0 0.5477225575 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.24) 1.0 0.0 (- 0.6) false 0.4 1.0 0.0 (- 1.0) 0.0 0.6 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.021580268755690787) 1.0 0.0 (- 0.02206723146) false 0.97793276854 1.0 0.0 (- 1.0) 0.0 0.02206723146 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.04352422515042982) 3.5 0.0 (- 0.05) false 0.8704845030085964 1.0 0.0 (- 1.0) 0.0 1.5 2.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.03267686723226694) 3.0 (- 3.0) (- 0.9349503760512686) false 0.03495037605126872 1.0 0.0 (- 1.0) 0.0 0.0 3.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.032232177663999995) 1.0 0.0 (- 0.033344) false 0.966656 1.0 0.0 (- 1.0) 0.0 0.033344 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.23284165123279368) 1.0 0.0 (- 0.6309898804) false 0.36901011959999996 1.0 0.0 (- 1.0) 0.0 0.6309898804 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.2071067811851175) 1.0 0.0 (- 0.29289321881) false 0.70710678119 1.0 0.0 (- 1.0) 0.0 0.29289321881 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.0010875342896325857) 1.0 0.0 (- 0.9989112804) false 0.0010887196000000099 1.0 0.0 (- 1.0) 0.0 0.9989112804 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.07064850204204165) 1.0 0.0 (- 0.07650088789) false 0.92349911211 1.0 0.0 (- 1.0) 0.0 0.07650088789 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.031733364957671914) 1.0 0.0 (- 0.9671901487) false 0.032809851300000026 1.0 0.0 (- 1.0) 0.0 0.9671901487 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@outfalse 0.8572435638856679 1.0 0.0 (- 1.0) 0.0 0.05 1.0 2147483647.0 true 0.1 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.03267686723226694) 3.0 (- 3.0) (- 0.03495037605126872) false 0.9349503760512686 1.0 0.0 (- 1.0) 0.0 0.0 3.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.2499) 1.0 0.0 (- 0.49) false 0.51 1.0 0.0 (- 1.0) 0.0 0.49 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.00045978840000001595) 1.0 0.0 (- 0.99954) false 0.00046000000000001595 1.0 0.0 (- 1.0) 0.0 0.99954 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.12656025885769398) 1.0 0.0 (- 0.8513399225) false 0.1486600775 1.0 0.0 (- 1.0) 0.0 0.8513399225 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.09000000000000001) 1.0 0.0 (- 0.1) false 0.9 1.0 0.0 (- 1.0) 0.0 0.1 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.0000874816775450824) 21.5 0.0 (- 0.999) false 0.00008756924679187428 1.0 0.0 (- 1.0) 0.0 1.5 20.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.0004773859847715045) 1.0 0.0 (- 0.9995223859) false 0.00047761410000002336 1.0 0.0 (- 1.0) 0.0 0.9995223859 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.001087534284643463) 1.0 0.0 (- 0.001088719595) false 0.998911280405 1.0 0.0 (- 1.0) 0.0 0.001088719595 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.06248242827256096) 1.0 0.0 (- 0.9330329915) false 0.06696700850000004 1.0 0.0 (- 1.0) 0.0 0.9330329915 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.00124380970929521) 5.0 (- 5.0) (- 0.9912547830593628) false 0.001254783059362774 1.0 0.0 (- 1.0) 0.0 0.0 5.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.0004597884) 1.0 0.0 (- 0.00046) false 0.99954 1.0 0.0 (- 1.0) 0.0 0.00046 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.14535108946385888) 1.0 0.0 (- 0.8234948385) false 0.17650516149999995 1.0 0.0 (- 1.0) 0.0 0.8234948385 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@outfalse 0.0031559260775796405 1.0 0.0 (- 1.0) 0.0 5.0 11.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.17459666924229805) 1.0 0.0 (- 0.22540333076) false 0.77459666924 1.0 0.0 (- 1.0) 0.0 0.22540333076 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.054312066975681264) 1.0 0.0 (- 0.9423662883) false 0.05763371169999998 1.0 0.0 (- 1.0) 0.0 0.9423662883 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.24968030723065393) 1.0 0.0 (- 0.5178799544) false 0.4821200456 1.0 0.0 (- 1.0) 0.0 0.5178799544 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@outfalse 0.00029301353614030745 1.0 0.0 (- 1.0) 0.0 8.0 19.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.11265309248378705) 1.0 0.0 (- 0.870603437) false 0.12939656300000002 1.0 0.0 (- 1.0) 0.0 0.870603437 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.03266138832430163) 1.0 0.0 (- 0.9661958941) false 0.03380410590000005 1.0 0.0 (- 1.0) 0.0 0.9661958941 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.2304) 1.0 0.0 (- 0.36) false 0.64 1.0 0.0 (- 1.0) 0.0 0.36 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.10056506494169568) 1.0 0.0 (- 0.8865681506) false 0.11343184939999995 1.0 0.0 (- 1.0) 0.0 0.8865681506 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.04868329805097486) 1.0 0.0 (- 0.05131670195) false 0.94868329805 1.0 0.0 (- 1.0) 0.0 0.05131670195 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.24861647142831655) 1.0 0.0 (- 0.4628041861) false 0.5371958138999999 1.0 0.0 (- 1.0) 0.0 0.4628041861 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.1569844718998781) 1.0 0.0 (- 0.1950155281) false 0.8049844719 1.0 0.0 (- 1.0) 0.0 0.1950155281 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.004802856167501176) 3.0 (- 3.0) (- 0.9550290159641406) false 0.005029015964140626 1.0 0.0 (- 1.0) 0.0 0.0 3.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 (- 0.003615272405998258) 3.5 1.5 (- 0.013069814544395514) false 0.2766123722504179 1.0 0.0 (- 1.0) 0.0 2.5 1.0 2147483647.0 true 5.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.11280384) 1.0 0.0 (- 0.1296) false 0.8704000000000001 1.0 0.0 (- 1.0) 0.0 0.1296 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.23245553204259697) 1.0 0.0 (- 0.632455532) false 0.36754446799999996 1.0 0.0 (- 1.0) 0.0 0.632455532 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.16000000000000003) 1.0 0.0 (- 0.2) false 0.8 1.0 0.0 (- 1.0) 0.0 0.2 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.12656025884364042) 1.0 0.0 (- 0.14866007748) false 0.85133992252 1.0 0.0 (- 1.0) 0.0 0.14866007748 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.00007678291184906923) 6.0 (- 6.0) (- 0.00007693085520299296) false 0.998076930855203 1.0 0.0 (- 1.0) 0.0 0.0 6.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.15389999999999995) 1.0 0.0 (- 0.81) false 0.18999999999999995 1.0 0.0 (- 1.0) 0.0 0.81 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.07989032911688447) 1.0 0.0 (- 0.9124435366) false 0.0875564634 1.0 0.0 (- 1.0) 0.0 0.9124435366 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000049 (- 0.004893334503478224) 5.0 3.0 (- 0.0343575456215499) false 0.1424238668669337 1.0 0.0 (- 1.0) 0.0 4.0 1.0 2147483647.0 true 8.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.006674841599999949) 1.0 0.0 (- 0.99328) false 0.006719999999999948 1.0 0.0 (- 1.0) 0.0 0.99328 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.008034389999999999) 1.0 0.0 (- 0.0081) false 0.9919 1.0 0.0 (- 1.0) 0.0 0.0081 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.011652728880361887) 1.0 0.0 (- 0.0117917748341) false 0.9882082251659 1.0 0.0 (- 1.0) 0.0 0.0117917748341 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.14619219167198888) 1.0 0.0 (- 0.8221921916) false 0.1778078084 1.0 0.0 (- 1.0) 0.0 0.8221921916 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.20804353850535443) 1.0 0.0 (- 0.2951672353) false 0.7048327647 1.0 0.0 (- 1.0) 0.0 0.2951672353 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.05564929336455457) 2.0 0.0 (- 0.4959706533253018) false 0.11220279464409116 1.0 0.0 (- 1.0) 0.0 1.0 1.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.04731976505434912) 1.0 0.0 (- 0.04979978349) false 0.95020021651 1.0 0.0 (- 1.0) 0.0 0.04979978349 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.04162817492109664) 2.0 (- 2.0) (- 0.04903026058507085) false 0.8490302605850709 1.0 0.0 (- 1.0) 0.0 0.0 2.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.04868329800610657) 1.0 0.0 (- 0.9486832981) false 0.05131670190000004 1.0 0.0 (- 1.0) 0.0 0.9486832981 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.009551867232266921) 3.0 (- 3.0) (- 0.9599503760512687) false 0.009950376051268695 1.0 0.0 (- 1.0) 0.0 0.0 3.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000049 (- 0.0000006776164470815789) 5.0 3.0 (- 0.2705254003710749) false 0.000002504816354220729 1.0 0.0 (- 1.0) 0.0 4.0 1.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.015869910099817915) 1.0 0.0 (- 0.0161300899) false 0.9838699101 1.0 0.0 (- 1.0) 0.0 0.0161300899 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.003867462906443595) 1.0 0.0 (- 0.996117463) false 0.0038825369999999637 1.0 0.0 (- 1.0) 0.0 0.996117463 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.16287081590101787) 1.0 0.0 (- 0.7951765304) false 0.20482346959999997 1.0 0.0 (- 1.0) 0.0 0.7951765304 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.03640903051435961) 1.0 0.0 (- 0.037840969486) false 0.962159030514 1.0 0.0 (- 1.0) 0.0 0.037840969486 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.0005349273117552778) 13.0 (- 13.0) (- 0.0005627480278026127) false 0.9505627480278026 1.0 0.0 (- 1.0) 0.0 0.0 13.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.009551867232266939) 3.0 (- 3.0) (- 0.009950376051268714) false 0.9599503760512687 1.0 0.0 (- 1.0) 0.0 0.0 3.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.00031034112855863184) 1.0 0.0 (- 0.9996895625) false 0.0003104375000000381 1.0 0.0 (- 1.0) 0.0 0.9996895625 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.06551600308100075) 1.0 0.0 (- 0.9295160031) false 0.07048399689999996 1.0 0.0 (- 1.0) 0.0 0.9295160031 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.15234375) 1.0 0.0 (- 0.1875) false 0.8125 1.0 0.0 (- 1.0) 0.0 0.1875 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.004764935486381743) 4.0 (- 4.0) (- 0.004838292259584275) false 0.9848382922595843 1.0 0.0 (- 1.0) 0.0 0.0 4.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.11617735490874095) 1.0 0.0 (- 0.8658177758) false 0.13418222420000003 1.0 0.0 (- 1.0) 0.0 0.8658177758 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 2.1 (- 0.0011861824750272166) 5.5 2.1 (- 0.49) false 0.0024207805612800337 1.0 0.0 (- 1.0) 0.0 3.5 2.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.019902645079716768) 1.0 0.0 (- 0.0203153588864) false 0.9796846411136 1.0 0.0 (- 1.0) 0.0 0.0203153588864 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.24828026072239004) 1.0 0.0 (- 0.4585302607) false 0.5414697393 1.0 0.0 (- 1.0) 0.0 0.4585302607 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@outfalse 0.024764753853487975 1.0 0.0 (- 1.0) 0.0 5.0 5.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.093184) 1.0 0.0 (- 0.104) false 0.896 1.0 0.0 (- 1.0) 0.0 0.104 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.002986958379467622) 1.0 0.0 (- 0.997004066) false 0.002995933999999978 1.0 0.0 (- 1.0) 0.0 0.997004066 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.24721359549996239) 1.0 0.0 (- 0.5527864045) false 0.44721359549999995 1.0 0.0 (- 1.0) 0.0 0.5527864045 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.021710890780941693) 1.0 0.0 (- 0.02220390414) false 0.97779609586 1.0 0.0 (- 1.0) 0.0 0.02220390414 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.004372843843857357) 7.0 (- 7.0) (- 0.9048327646991334) false 0.004832764699133518 1.0 0.0 (- 1.0) 0.0 0.0 7.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@outfalse 0.014376821772250081 1.0 0.0 (- 1.0) 0.0 0.1 2.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.15999999999999998) 1.0 0.0 (- 0.8) false 0.19999999999999996 1.0 0.0 (- 1.0) 0.0 0.8 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.21622776601800014) 1.0 0.0 (- 0.68377223398) false 0.31622776602 1.0 0.0 (- 1.0) 0.0 0.68377223398 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 (- 0.00847802607351737) 4.5 0.5 (- 0.017123293232629594) false 0.4951165618867005 1.0 0.0 (- 1.0) 0.0 2.5 2.0 2147483647.0 true 5.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.20804353850535443) 1.0 0.0 (- 0.7048327647) false 0.2951672353 1.0 0.0 (- 1.0) 0.0 0.7048327647 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 (- 0.001083127043706306) 4.5 0.5 (- 0.0021232932326295927) false 0.5101165618867005 1.0 0.0 (- 1.0) 0.0 2.5 2.0 2147483647.0 true 5.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@outfalse 0.005038804840838185 1.0 0.0 (- 1.0) 0.0 0.1 3.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@outfalse 0.02412254396294511 1.0 0.0 (- 1.0) 0.0 0.1 1.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.19267545263196192) 1.0 0.0 (- 0.260574547368) false 0.739425452632 1.0 0.0 (- 1.0) 0.0 0.260574547368 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.00007678291184907086) 6.0 (- 6.0) (- 0.998076930855203) false 0.00007693085520299459 1.0 0.0 (- 1.0) 0.0 0.0 6.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.228096) 1.0 0.0 (- 0.352) false 0.648 1.0 0.0 (- 1.0) 0.0 0.352 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.00159744) 1.0 0.0 (- 0.0016) false 0.9984 1.0 0.0 (- 1.0) 0.0 0.0016 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.004764935486381787) 4.0 (- 4.0) (- 0.9848382922595843) false 0.00483829225958432 1.0 0.0 (- 1.0) 0.0 0.0 4.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.0042673167294825926) 6.5 0.0 (- 0.975) false 0.004376735107161633 1.0 0.0 (- 1.0) 0.0 1.5 5.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.169344) 1.0 0.0 (- 0.216) false 0.784 1.0 0.0 (- 1.0) 0.0 0.216 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.19267545264728514) 1.0 0.0 (- 0.7394254526) false 0.26057454739999997 1.0 0.0 (- 1.0) 0.0 0.7394254526 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.12889480816666768) 1.0 0.0 (- 0.1519982876) false 0.8480017124 1.0 0.0 (- 1.0) 0.0 0.1519982876 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.11015092670400001) 1.0 0.0 (- 0.126036) false 0.873964 1.0 0.0 (- 1.0) 0.0 0.126036 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.03173336491207413) 1.0 0.0 (- 0.0328098512512) false 0.9671901487488 1.0 0.0 (- 1.0) 0.0 0.0328098512512 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.0038674629530786723) 1.0 0.0 (- 0.003882537047) false 0.996117462953 1.0 0.0 (- 1.0) 0.0 0.003882537047 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.23409903369992627) 1.0 0.0 (- 0.3739009663) false 0.6260990337 1.0 0.0 (- 1.0) 0.0 0.3739009663 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@outfalse 0.015212219493758394 1.0 0.0 (- 1.0) 0.0 5.0 7.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.1875) 1.0 0.0 (- 0.25) false 0.75 1.0 0.0 (- 1.0) 0.0 0.25 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.06551600308959112) 1.0 0.0 (- 0.07048399691) false 0.92951600309 1.0 0.0 (- 1.0) 0.0 0.07048399691 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.21000000000000002) 1.0 0.0 (- 0.7) false 0.30000000000000004 1.0 0.0 (- 1.0) 0.0 0.7 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.10263347648332599) 1.0 0.0 (- 0.116116523517) false 0.883883476483 1.0 0.0 (- 1.0) 0.0 0.116116523517 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.010370895841531346) 1.0 0.0 (- 0.01048074179) false 0.98951925821 1.0 0.0 (- 1.0) 0.0 0.01048074179 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@outfalse 0.5831198130044919 1.0 0.0 (- 1.0) 0.0 2.5 3.0 2147483647.0 true 5.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.027216) 1.0 0.0 (- 0.028) false 0.972 1.0 0.0 (- 1.0) 0.0 0.028 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.2328416512327937) 1.0 0.0 (- 0.3690101196) false 0.6309898804 1.0 0.0 (- 1.0) 0.0 0.3690101196 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.0748242684) 1.0 0.0 (- 0.08146) false 0.91854 1.0 0.0 (- 1.0) 0.0 0.08146 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.1539) 1.0 0.0 (- 0.19) false 0.81 1.0 0.0 (- 1.0) 0.0 0.19 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.24721359549996236) 1.0 0.0 (- 0.4472135955) false 0.5527864044999999 1.0 0.0 (- 1.0) 0.0 0.4472135955 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000049 (- 0.0037395448758017727) 7.0 1.0 (- 0.008248377443709175) false 0.45336733209921515 1.0 0.0 (- 1.0) 0.0 4.0 3.0 2147483647.0 true 8.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.1344) 1.0 0.0 (- 0.16) false 0.84 1.0 0.0 (- 1.0) 0.0 0.16 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.000002162306163294134) 319.0 (- 319.0) (- 0.000002166634738464974) false 0.9980021666347385 1.0 0.0 (- 1.0) 0.0 0.0 319.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.2304) 1.0 0.0 (- 0.64) false 0.36 1.0 0.0 (- 1.0) 0.0 0.64 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.0000032171179190857006) 1.0 0.0 (- 0.000003217128269) false 0.999996782871731 1.0 0.0 (- 1.0) 0.0 0.000003217128269 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.08189999999999997) 1.0 0.0 (- 0.91) false 0.08999999999999997 1.0 0.0 (- 1.0) 0.0 0.91 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.24) 1.0 0.0 (- 0.4) false 0.6 1.0 0.0 (- 1.0) 0.0 0.4 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.0025379007738134548) 1.0 0.0 (- 0.002544374616) false 0.997455625384 1.0 0.0 (- 1.0) 0.0 0.002544374616 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.20804318727787777) 1.0 0.0 (- 0.29516637795) false 0.70483362205 1.0 0.0 (- 1.0) 0.0 0.29516637795 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.13440000000000002) 1.0 0.0 (- 0.84) false 0.16000000000000003 1.0 0.0 (- 1.0) 0.0 0.84 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@outfalse 0.003773513697091113 1.0 0.0 (- 1.0) 0.0 8.0 10.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.06250000000000017) 1.0 (- 1.0) (- 0.25000000000000033) false 0.25000000000000033 1.0 0.0 (- 1.0) 0.0 0.0 1.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.22563279) 1.0 0.0 (- 0.6561) false 0.3439 1.0 0.0 (- 1.0) 0.0 0.6561 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.0740641166276143) 1.0 0.0 (- 0.9194471163) false 0.08055288370000002 1.0 0.0 (- 1.0) 0.0 0.9194471163 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.09442719099984952) 1.0 0.0 (- 0.105572809) false 0.894427191 1.0 0.0 (- 1.0) 0.0 0.105572809 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.07724285804787785) 1.0 0.0 (- 0.9156406404) false 0.08435935959999996 1.0 0.0 (- 1.0) 0.0 0.9156406404 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.169344) 1.0 0.0 (- 0.784) false 0.21599999999999997 1.0 0.0 (- 1.0) 0.0 0.784 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.027216000000000025) 1.0 0.0 (- 0.972) false 0.028000000000000025 1.0 0.0 (- 1.0) 0.0 0.972 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.0009194845030085964) 3.5 0.0 (- 0.001) false 0.9194845030085964 1.0 0.0 (- 1.0) 0.0 1.5 2.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.0000032170896502201566) 1.0 0.0 (- 0.9999967829) false 0.0000032170999999525662 1.0 0.0 (- 1.0) 0.0 0.9999967829 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.10056506496488982) 1.0 0.0 (- 0.11343184943) false 0.88656815057 1.0 0.0 (- 1.0) 0.0 0.11343184943 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@outfalse 0.8322435638856679 1.0 0.0 (- 1.0) 0.0 0.05 1.0 2147483647.0 true 0.1 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.011652728847066127) 1.0 0.0 (- 0.9882082252) false 0.011791774800000043 1.0 0.0 (- 1.0) 0.0 0.9882082252 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.0005349273117553141) 13.0 (- 13.0) (- 0.9505627480278026) false 0.0005627480278026509 1.0 0.0 (- 1.0) 0.0 0.0 13.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.04873298840518535) 1.0 0.0 (- 0.0513720788952) false 0.9486279211048 1.0 0.0 (- 1.0) 0.0 0.0513720788952 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.054312066957986634) 1.0 0.0 (- 0.05763371168) false 0.94236628832 1.0 0.0 (- 1.0) 0.0 0.05763371168 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@outfalse 0.0016212318964362593 1.0 0.0 (- 1.0) 0.0 5.0 8.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.0027205580159999528) 1.0 0.0 (- 0.997272) false 0.0027279999999999527 1.0 0.0 (- 1.0) 0.0 0.997272 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.0029869583605814896) 1.0 0.0 (- 0.002995933981) false 0.997004066019 1.0 0.0 (- 1.0) 0.0 0.002995933981 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.18245199) 1.0 0.0 (- 0.2401) false 0.7599 1.0 0.0 (- 1.0) 0.0 0.2401 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.07406411660882305) 1.0 0.0 (- 0.0805528836776) false 0.9194471163224001 1.0 0.0 (- 1.0) 0.0 0.0805528836776 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.07482426839999998) 1.0 0.0 (- 0.91854) false 0.08145999999999998 1.0 0.0 (- 1.0) 0.0 0.91854 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.02238711257521491) 3.5 0.0 (- 0.025) false 0.8954845030085964 1.0 0.0 (- 1.0) 0.0 1.5 2.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.2412362493558882) 1.0 0.0 (- 0.4063850939) false 0.5936149061 1.0 0.0 (- 1.0) 0.0 0.4063850939 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.008274870766608012) 2.1 (- 1.3) (- 0.017420780561280026) false 0.475 1.0 0.0 (- 1.0) 0.0 0.7000000000000002 2.0 2147483647.0 true 2.1 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.024944640000000004) 1.0 0.0 (- 0.0256) false 0.9744 1.0 0.0 (- 1.0) 0.0 0.0256 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.0004773859424119828) 1.0 0.0 (- 0.0004776140576) false 0.9995223859424 1.0 0.0 (- 1.0) 0.0 0.0004776140576 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@outfalse 0.5655298796332906 1.0 0.0 (- 1.0) 0.0 4.0 4.0 2147483647.0 true 8.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.08204845030085965) 3.5 0.0 (- 0.1) false 0.8204845030085964 1.0 0.0 (- 1.0) 0.0 1.5 2.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.24861647142831655) 1.0 0.0 (- 0.5371958139) false 0.46280418609999996 1.0 0.0 (- 1.0) 0.0 0.5371958139 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.007104386348925316) 1.0 0.0 (- 0.9928444112) false 0.007155588800000001 1.0 0.0 (- 1.0) 0.0 0.9928444112 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@outfalse 0.0028525703656562262 1.0 0.0 (- 1.0) 0.0 8.0 13.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.20581259673600003) 1.0 0.0 (- 0.710208) false 0.28979200000000005 1.0 0.0 (- 1.0) 0.0 0.710208 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.008443736657701822) 1.0 0.0 (- 0.9914837366) false 0.008516263400000001 1.0 0.0 (- 1.0) 0.0 0.9914837366 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@outfalse 0.007619888008316034 1.0 0.0 (- 1.0) 0.0 8.0 8.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.17459666926426576) 1.0 0.0 (- 0.7745966692) false 0.22540333079999997 1.0 0.0 (- 1.0) 0.0 0.7745966692 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.0794640384) 1.0 0.0 (- 0.91296) false 0.08704 1.0 0.0 (- 1.0) 0.0 0.91296 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.008443736629195763) 1.0 0.0 (- 0.008516263371) false 0.991483736629 1.0 0.0 (- 1.0) 0.0 0.008516263371 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.00005591757558500842) 1.0 0.0 (- 0.00005592070271) false 0.99994407929729 1.0 0.0 (- 1.0) 0.0 0.00005592070271 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.2234179584) 1.0 0.0 (- 0.66304) false 0.33696000000000004 1.0 0.0 (- 1.0) 0.0 0.66304 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@outfalse 0.8722435638856679 1.0 0.0 (- 1.0) 0.0 0.05 1.0 2147483647.0 true 0.1 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.10137299837679904) 1.0 (- 1.0) (- 0.31839126617543867) false 0.31839126617543867 1.0 0.0 (- 1.0) 0.0 0.0 1.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.0794640384) 1.0 0.0 (- 0.08704) false 0.91296 1.0 0.0 (- 1.0) 0.0 0.08704 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.029832591600000027) 1.0 0.0 (- 0.96922) false 0.03078000000000003 1.0 0.0 (- 1.0) 0.0 0.96922 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.24589193137279458) 1.0 0.0 (- 0.5640942168) false 0.43590578319999995 1.0 0.0 (- 1.0) 0.0 0.5640942168 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.032232177664000036) 1.0 0.0 (- 0.966656) false 0.03334400000000004 1.0 0.0 (- 1.0) 0.0 0.966656 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.2492036316) 1.0 0.0 (- 0.47178) false 0.52822 1.0 0.0 (- 1.0) 0.0 0.47178 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.23396608845654315) 1.0 0.0 (- 0.6266250826) false 0.37337491739999995 1.0 0.0 (- 1.0) 0.0 0.6266250826 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.007104386326254472) 1.0 0.0 (- 0.007155588777) false 0.992844411223 1.0 0.0 (- 1.0) 0.0 0.007155588777 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.006052983049310825) 1.0 0.0 (- 0.0060900720266) false 0.9939099279734 1.0 0.0 (- 1.0) 0.0 0.0060900720266 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.01552275155586544) 1.0 0.0 (- 0.9842285085) false 0.015771491500000012 1.0 0.0 (- 1.0) 0.0 0.9842285085 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.24828026072438059) 1.0 0.0 (- 0.541469739276) false 0.45853026072400005 1.0 0.0 (- 1.0) 0.0 0.541469739276 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.07724285806450353) 1.0 0.0 (- 0.08435935962) false 0.91564064038 1.0 0.0 (- 1.0) 0.0 0.08435935962 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.19369820159999998) 1.0 0.0 (- 0.73728) false 0.26271999999999995 1.0 0.0 (- 1.0) 0.0 0.73728 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.05859375) 1.0 0.0 (- 0.0625) false 0.9375 1.0 0.0 (- 1.0) 0.0 0.0625 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@outfalse 0.007719888008316023 1.0 0.0 (- 1.0) 0.0 8.0 8.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.04873298840949213) 1.0 0.0 (- 0.9486279211) false 0.05137207889999995 1.0 0.0 (- 1.0) 0.0 0.9486279211 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.2499) 1.0 0.0 (- 0.51) false 0.49 1.0 0.0 (- 1.0) 0.0 0.51 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.2412362493558882) 1.0 0.0 (- 0.5936149061) false 0.4063850939 1.0 0.0 (- 1.0) 0.0 0.5936149061 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.00009998999999998899) 1.0 0.0 (- 0.9999) false 0.00009999999999998899 1.0 0.0 (- 1.0) 0.0 0.9999 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.0819) 1.0 0.0 (- 0.09) false 0.91 1.0 0.0 (- 1.0) 0.0 0.09 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 2.1 (- 0.0022824580206928747) 4.5 2.5 (- 0.3375484810979923) false 0.006761867253167297 1.0 0.0 (- 1.0) 0.0 3.5 1.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.021580268793925415) 1.0 0.0 (- 0.9779327685) false 0.022067231500000006 1.0 0.0 (- 1.0) 0.0 0.9779327685 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.01843605270773675) 3.5 0.0 (- 0.9) false 0.02048450300859639 1.0 0.0 (- 1.0) 0.0 1.5 2.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.0025074385284574396) 4.5 0.0 (- 0.95) false 0.0026394089773236207 1.0 0.0 (- 1.0) 0.0 1.5 3.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.0099) 1.0 0.0 (- 0.01) false 0.99 1.0 0.0 (- 1.0) 0.0 0.01 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.16337089024660859) 1.0 0.0 (- 0.20567176528) false 0.79432823472 1.0 0.0 (- 1.0) 0.0 0.20567176528 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.014503359032669829) 3.0 (- 3.0) (- 0.9650289369340037) false 0.015028936934003756 1.0 0.0 (- 1.0) 0.0 0.0 3.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.07707200317679055) 2.0 0.0 (- 0.5724780279076003) false 0.1346287532789472 1.0 0.0 (- 1.0) 0.0 1.0 1.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@outfalse 0.8812435638856679 1.0 0.0 (- 1.0) 0.0 0.05 1.0 2147483647.0 true 0.1 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.09318399999999999) 1.0 0.0 (- 0.896) false 0.10399999999999998 1.0 0.0 (- 1.0) 0.0 0.896 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.047319765063353156) 1.0 0.0 (- 0.9502002165) false 0.04979978350000003 1.0 0.0 (- 1.0) 0.0 0.9502002165 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.12889480816666768) 1.0 0.0 (- 0.8480017124) false 0.1519982876 1.0 0.0 (- 1.0) 0.0 0.8480017124 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.0000021623061633387137) 319.0 (- 319.0) (- 0.9980021666347385) false 0.000002166634738509643 1.0 0.0 (- 1.0) 0.0 0.0 319.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.10263347647027396) 1.0 0.0 (- 0.8838834765) false 0.11611652350000001 1.0 0.0 (- 1.0) 0.0 0.8838834765 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.041628174921096654) 2.0 (- 2.0) (- 0.8490302605850709) false 0.04903026058507087 1.0 0.0 (- 1.0) 0.0 0.0 2.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.03381118002481032) 1.0 0.0 (- 0.03503890488) false 0.9649610951200001 1.0 0.0 (- 1.0) 0.0 0.03503890488 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.09097572053915039) 1.0 0.0 (- 0.8987784842) false 0.10122151580000005 1.0 0.0 (- 1.0) 0.0 0.8987784842 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 (- 0.00032734366808958524) 6.1 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 (- 0.9989999999999999) false 0.0003276713394290143 1.0 0.0 (- 1.0) 0.0 0.1 6.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.002282458020692842) 1.7 (- 0.2999999999999998) (- 0.0067618672531672) false 0.33754848109799235 1.0 0.0 (- 1.0) 0.0 0.7000000000000002 1.0 2147483647.0 true 2.1 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.18276132177542626) 1.0 0.0 (- 0.24069578055) false 0.75930421945 1.0 0.0 (- 1.0) 0.0 0.24069578055 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 (- 0.06671028956665054) 1.1 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 (- 0.8999999999999999) false 0.07412254396294504 1.0 0.0 (- 1.0) 0.0 0.1 1.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.05859375) 1.0 0.0 (- 0.9375) false 0.0625 1.0 0.0 (- 1.0) 0.0 0.9375 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.06248242823791829) 1.0 0.0 (- 0.06696700846) false 0.93303299154 1.0 0.0 (- 1.0) 0.0 0.06696700846 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.019902645092764213) 1.0 0.0 (- 0.9796846411) false 0.020315358900000025 1.0 0.0 (- 1.0) 0.0 0.9796846411 1.0 2147483647.0 true 1.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out (- 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) (- 0.004372843843857313) 7.0 (- 7.0) (- 0.00483276469913347) false 0.9048327646991334 1.0 0.0 (- 1.0) 0.0 0.0 7.0 2147483647.0 true 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out 0.0 (- 0.07989032914987994) 1.0 0.0 (- 0.08755646344) false 0.91244353656 1.0 0.0 (- 1.0) 0.0 0.08755646344 1.0 2147483647.0 true 1.0 true))
(assert (WellFormedProgram L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out))
14:18:23.332 [main] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Successful code synthesis: (fa * fb) < 0.0
14:18:23.333 [main] INFO  f.i.l.repair.nopol.patch.TestPatch - Applying patch: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils:198: PRECONDITION (fa * fb) < 0.0
14:18:23.454 [main] INFO  f.i.l.repair.nopol.patch.TestPatch - Running test suite to check the patch "(fa * fb) < 0.0" is working

----INFORMATION----
Nb classes : 387
Nb methods : 2845
Nb statement executed by the passing tests of the patched line: 0
Nb statement executed by the failing tests of the patched line: 0
Nb statements: 15815
Nb unit tests : 1983
Nb Statements Analyzed : 37
Nb Statements with Angelic Value Found : 1
Nb inputs in SMT : 303
Nb SMT level: 2
Nb SMT components: [4] [== of arity: 2, != of arity: 2, < of arity: 2, <= of arity: 2]
                  class java.lang.Boolean: 4
Nb variables in SMT : 17
Nb run failing test  : [2, 2, 2, 2, 2, 2, 2, 2, 1]
Nb run passing test : [1, 1, 1, 4, 1, 1, 1, 1, 21]
NoPol Execution time : 76007ms
----PATCH FOUND----
org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils:198: PRECONDITION (fa * fb) < 0.0

real	1m16.529s
user	1m32.260s
sys	0m2.336s
