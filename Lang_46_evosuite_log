* EvoSuite 1.0.3
* Going to generate test cases for class: org.apache.commons.lang.StringEscapeUtils
* Starting client
* Connecting to master process on port 20335
* Analyzing classpath: 
  - target/classes/
  - target/tests/
  - lib/asm.jar
  - lib/cglib.jar
  - lib/commons-io.jar
  - lib/easymock.jar
  - /usr/yzx/program-repair-nopol-evosuite/nopol/nopol/src/main/java/fr/inria/lille/spirals/evo/libs/nopol.jar
  - /usr/yzx/program-repair-nopol-evosuite/nopol/nopol/src/main/java/fr/inria/lille/spirals/evo/libs/junit-4.11.jar
  - /usr/yzx/program-repair-nopol-evosuite/nopol/nopol/src/main/java/fr/inria/lille/spirals/evo/libs/hamcrest-core-1.3.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.lang.StringEscapeUtils
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 218
  - Branch 138
  - Exception 0
  - MutationFactory 279
  - Output 33
  - Method 22
  - MethodNoException 22
  - CBranchFitnessFactory 138

[Progress:>                             0%] [Cov:>                                  0%]* Using seed 9
* Starting evolution

[Progress:>                             0%] [Cov:>                                  1%]
[Progress:>                             0%] [Cov:=>                                 3%]
[Progress:>                             0%] [Cov:=====>                             15%]
[Progress:>                             0%] [Cov:=====>                             16%]
[Progress:>                             0%] [Cov:=====>                             17%]
[Progress:>                             3%] [Cov:=>                                 5%]
[Progress:>                             3%] [Cov:===>                               9%]
[Progress:>                             3%] [Cov:=======>                           22%]
[Progress:>                             3%] [Cov:==========>                        29%]
[Progress:>                             3%] [Cov:===========>                       33%]
[Progress:>                             3%] [Cov:============>                      37%]
[Progress:>                             3%] [Cov:==============>                    40%]
[Progress:>                             3%] [Cov:===============>                   43%]
[Progress:>                             3%] [Cov:=================>                 49%]
[Progress:>                             3%] [Cov:=================>                 51%]
[Progress:=>                            6%] [Cov:=>                                 4%]
[Progress:=>                            6%] [Cov:===>                               9%]
[Progress:=>                            6%] [Cov:=======>                           22%]
[Progress:=>                            6%] [Cov:==========>                        29%]
[Progress:=>                            6%] [Cov:===========>                       32%]
[Progress:=>                            6%] [Cov:=============>                     39%]
[Progress:=>                            6%] [Cov:===============>                   45%]
[Progress:=>                            6%] [Cov:================>                  48%]
[Progress:=>                            6%] [Cov:=================>                 50%]
[Progress:=>                            6%] [Cov:===================>               57%]
[Progress:=>                            6%] [Cov:====================>              59%]
[Progress:===>                          10%] [Cov:=>                                 4%]
[Progress:===>                          10%] [Cov:==>                                8%]
[Progress:===>                          10%] [Cov:=======>                           20%]
[Progress:===>                          10%] [Cov:=========>                         27%]
[Progress:===>                          10%] [Cov:==========>                        30%]
[Progress:===>                          10%] [Cov:==========>                        31%]
[Progress:===>                          10%] [Cov:===========>                       33%]
[Progress:===>                          10%] [Cov:===========>                       34%]
[Progress:===>                          10%] [Cov:==============>                    40%]
[Progress:===>                          10%] [Cov:==============>                    42%]
[Progress:===>                          10%] [Cov:===============>                   44%]
[Progress:===>                          10%] [Cov:================>                  48%]
[Progress:===>                          10%] [Cov:=================>                 50%]
[Progress:===>                          10%] [Cov:====================>              59%]
[Progress:===>                          10%] [Cov:===========================>       79%]
[Progress:===>                          13%] [Cov:===========================>       78%]
[Progress:===>                          13%] [Cov:===========================>       79%]
[Progress:===>                          13%] [Cov:============================>      80%]
[Progress:===>                          13%] [Cov:============================>      80%]
[Progress:====>                         16%] [Cov:===========================>       78%]
[Progress:====>                         16%] [Cov:===========================>       79%]
[Progress:====>                         16%] [Cov:============================>      80%]
[Progress:====>                         16%] [Cov:============================>      81%]
[Progress:====>                         16%] [Cov:============================>      82%]
[Progress:======>                       20%] [Cov:============================>      82%]
[Progress:======>                       20%] [Cov:============================>      82%]
[Progress:======>                       23%] [Cov:============================>      82%]
[Progress:======>                       23%] [Cov:============================>      82%]
[Progress:======>                       23%] [Cov:============================>      82%]
[Progress:=======>                      26%] [Cov:============================>      82%]
[Progress:=======>                      26%] [Cov:============================>      82%]
[Progress:=======>                      26%] [Cov:============================>      82%]
[Progress:=========>                    30%] [Cov:============================>      82%]
[Progress:=========>                    30%] [Cov:============================>      82%]
[Progress:=========>                    30%] [Cov:=============================>     83%]
[Progress:=========>                    30%] [Cov:=============================>     83%]
[Progress:=========>                    33%] [Cov:============================>      82%]
[Progress:=========>                    33%] [Cov:=============================>     83%]
[Progress:=========>                    33%] [Cov:=============================>     83%]
[Progress:==========>                   36%] [Cov:============================>      82%]
[Progress:==========>                   36%] [Cov:=============================>     83%]
[Progress:==========>                   36%] [Cov:=============================>     83%]
[Progress:==========>                   36%] [Cov:=============================>     83%]
[Progress:============>                 40%] [Cov:============================>      82%]
[Progress:============>                 40%] [Cov:=============================>     83%]
[Progress:============>                 40%] [Cov:=============================>     83%]
[Progress:============>                 40%] [Cov:=============================>     83%]
[Progress:============>                 43%] [Cov:=============================>     83%]
[Progress:============>                 43%] [Cov:=============================>     83%]
[Progress:============>                 43%] [Cov:=============================>     83%]
[Progress:=============>                46%] [Cov:=============================>     83%]
[Progress:=============>                46%] [Cov:=============================>     83%]
[Progress:=============>                46%] [Cov:=============================>     83%]
[Progress:===============>              50%] [Cov:=============================>     83%]
[Progress:===============>              50%] [Cov:=============================>     83%]
[Progress:===============>              53%] [Cov:=============================>     83%]
[Progress:===============>              53%] [Cov:=============================>     83%]
[Progress:===============>              53%] [Cov:=============================>     83%]
[Progress:================>             56%] [Cov:============================>      82%]
[Progress:================>             56%] [Cov:=============================>     83%]
[Progress:================>             56%] [Cov:=============================>     84%]
[Progress:================>             56%] [Cov:=============================>     84%]
[Progress:==================>           60%] [Cov:=============================>     84%]
[Progress:==================>           60%] [Cov:=============================>     84%]
[Progress:==================>           60%] [Cov:=============================>     84%]
[Progress:==================>           63%] [Cov:=============================>     84%]
[Progress:==================>           63%] [Cov:=============================>     84%]
[Progress:==================>           63%] [Cov:=============================>     84%]
[Progress:===================>          66%] [Cov:=============================>     84%]
[Progress:===================>          66%] [Cov:=============================>     84%]
[Progress:===================>          66%] [Cov:=============================>     84%]
[Progress:=====================>        70%] [Cov:=============================>     84%]
[Progress:=====================>        70%] [Cov:=============================>     84%]
[Progress:=====================>        70%] [Cov:=============================>     84%]
[Progress:=====================>        73%] [Cov:=============================>     84%]
[Progress:=====================>        73%] [Cov:=============================>     84%]
[Progress:=====================>        73%] [Cov:=============================>     84%]
[Progress:======================>       76%] [Cov:=============================>     84%]
[Progress:======================>       76%] [Cov:=============================>     84%]
[Progress:========================>     80%] [Cov:=============================>     84%]
[Progress:========================>     80%] [Cov:=============================>     84%]
[Progress:========================>     83%] [Cov:=============================>     84%]
[Progress:========================>     83%] [Cov:=============================>     84%]
[Progress:========================>     83%] [Cov:=============================>     85%]
[Progress:========================>     83%] [Cov:=============================>     85%]
[Progress:=========================>    86%] [Cov:=============================>     85%]
[Progress:=========================>    86%] [Cov:=============================>     85%]
[Progress:=========================>    86%] [Cov:=============================>     85%]
[Progress:===========================>  90%] [Cov:=============================>     84%]
[Progress:===========================>  90%] [Cov:=============================>     85%]
[Progress:===========================>  90%] [Cov:=============================>     85%]
[Progress:===========================>  90%] [Cov:=============================>     85%]
[Progress:===========================>  93%] [Cov:=============================>     85%]
[Progress:===========================>  93%] [Cov:=============================>     85%]
[Progress:============================> 96%] [Cov:=============================>     85%]
[Progress:============================> 96%] [Cov:=============================>     85%]
[Progress:==============================100%] [Cov:=============================>     85%]
[Progress:==============================100%] [Cov:=============================>     85%]
[Progress:==============================100%] [Cov:=============================>     85%]
[Progress:==============================100%] [Cov:=============================>     85%]
[Progress:==============================100%] [Cov:=============================>     85%]
[Progress:==============================100%] [Cov:==============================>    87%]
* Search finished after 31s and 53 generations, 33318 statements, best individual has fitness: 197.4205142389046
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 66%
* Total number of goals: 218
* Number of covered goals: 143
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 73%
* Total number of goals: 138
* Number of covered goals: 101
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 76%
* Total number of goals: 279
* Number of covered goals: 213
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 33
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 73%
* Total number of goals: 138
* Number of covered goals: 101
* Generated 74 tests with total length 119
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 50%
* Compiling and checking tests
[MASTER] 02:53:41.683 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:53:41.733 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:53:41.790 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:53:41.824 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:53:43.897 [logback-2] ERROR JUnitAnalyzer - 1 test cases failed
[MASTER] 02:53:43.900 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1552)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
java.io.FileWriter.<init>(FileWriter.java:116)
org.evosuite.runtime.mock.java.io.MockFileWriter.<init>(MockFileWriter.java:79)
org.apache.commons.lang.StringEscapeUtils_129_tmp__ESTest.test0(StringEscapeUtils_129_tmp__ESTest.java:83)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:745)

[MASTER] 02:53:43.900 [logback-1] WARN  JUnitAnalyzer - Failing test: FileDescriptor fileDescriptor0 = new FileDescriptor();
MockFileWriter mockFileWriter0 = new MockFileWriter(fileDescriptor0);
StringEscapeUtils.unescapeJava((Writer) mockFileWriter0, "org.apache.commons.lang.StringEscapeUtils");

[MASTER] 02:53:44.609 [logback-2] ERROR JUnitAnalyzer - 1 test cases failed
[MASTER] 02:53:44.609 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test53 -> class java.io.FileNotFoundException: null
[MASTER] 02:53:44.609 [logback-1] WARN  JUnitAnalyzer - Failing test: String string0 = "\\u";
MockFile mockFile0 = new MockFile(string0);
MockFileWriter mockFileWriter0 = new MockFileWriter((File) mockFile0);
mockFileWriter0.close();
StringEscapeUtils.unescapeHtml((Writer) mockFileWriter0, "&tebUN(WB!A27");

* Writing JUnit test case 'StringEscapeUtils_ESTest' to /tmp/lang_46_NopolPC/generatedtests
* Done!

* Computation finished
